yarn run v1.22.22
warning ../../../../../package.json: No license field
$ USE_EXTERNAL_DEPLOY=true TEST_USE_STUBS_TBTC=true hardhat test
Error encountered while fetching public networks
No need to generate any newer typings.

  Debug MockTBTCToken
Getting MockTBTCToken factory...
Factory obtained
Calling deploy with no arguments...
MockTBTCToken deployed to: 0x5FbDB2315678afecb367f032d93F642f64180aa3
    ✓ should deploy MockTBTCToken without arguments

  Timelock
transferred 4500000000 T to the VendingMachine for NU
Warning: Potentially unsafe deployment of WalletRegistry

    You are using the `unsafeAllow.external-library-linking` flag to include external libraries.
    Make sure you have manually checked that the linked libraries are upgrade safe.

Warning: Potentially unsafe deployment of BridgeStub

    You are using the `unsafeAllow.external-library-linking` flag to include external libraries.
    Make sure you have manually checked that the linked libraries are upgrade safe.

Initialized Wallet Owner address: 0xA82ED5224ba72f2f776e09B11DC99E30Ee65Da8d in transaction: 0xf581e93d5a41987b70c36d35d3882835af4f4a8377f5d108411d2c36977d00fc
    when upgrading Bridge implementation via Timelock
      ✓ should switch the implementation address

  AccountControl Core Functionality
    Optimized totalMinted calculation
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should return zero initially
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should track total minted amount efficiently
    Reserve deauthorization
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should deauthorize reserve
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should revert when deauthorizing non-existent reserve
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should emit ReserveDeauthorized event
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should revert when deauthorizing reserve with outstanding balance
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should clear backing when deauthorizing clean reserve
    redeem function
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should decrease minted amount on redemption
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should emit RedemptionProcessed event
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should revert when redeeming more than minted
    Unit consistency
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should use correct satoshi constants

  AccountControl Features
    Batch Atomicity
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should execute Bank calls before state updates in batchMint
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should revert entire transaction if any Bank call fails
    Reserve Cap Reduction Safety
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should prevent reducing cap below current minted amount
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should allow reducing cap to exactly current minted amount
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should allow increasing cap above current minted amount
    setMintingCap Validation
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should revert when setting cap for unauthorized reserve
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should enforce global cap validation when setting individual caps
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should allow setting cap when total doesn't exceed global cap
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should ignore global cap validation when global cap is zero
    Authorization Race Condition Protection
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should prevent double authorization
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should prevent deauthorizing non-existent reserve
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should prevent address reuse across different reserve types
    Batch Bank Interface Optimization
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should use batch interface when available
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should fallback to individual calls when batch not supported
    Event Emission
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should only emit batch events for gas efficiency
    Storage Layout Compatibility
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should maintain upgrade compatibility
    Integration Testing
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should work with all features together

  AccountControl Integration Tests
    QCMinter Integration
✓ SystemState configured with test defaults
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.


      1) "before each" hook for "should route minting through AccountControl when enabled"

  AccountControl mintTBTC Functionality
    mintTBTC return value
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ Authorized 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 in AccountControl
✓ Authorized 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 in AccountControl
✓ Authorized 0x90F79bf6EB2c4f870365E785982E1f101E93b906 in AccountControl
✓ Authorized 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65 in AccountControl
✓ Authorized 0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc in AccountControl
✓ Authorized 0x976EA74026E726554dB657fA54763abd0C3a0aa9 in AccountControl
✓ Authorized 0x14dC79964da2C08b23698B3D3cc7Ca32193d9955 in AccountControl
✓ Authorized 0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f in AccountControl
✓ Authorized 0xa0Ee7A142d267C1f36714E4a8F75612F20a79720 in AccountControl
      ✓ should return satoshis amount after successful mint
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ Authorized 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 in AccountControl
✓ Authorized 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 in AccountControl
✓ Authorized 0x90F79bf6EB2c4f870365E785982E1f101E93b906 in AccountControl
✓ Authorized 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65 in AccountControl
✓ Authorized 0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc in AccountControl
✓ Authorized 0x976EA74026E726554dB657fA54763abd0C3a0aa9 in AccountControl
✓ Authorized 0x14dC79964da2C08b23698B3D3cc7Ca32193d9955 in AccountControl
✓ Authorized 0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f in AccountControl
✓ Authorized 0xa0Ee7A142d267C1f36714E4a8F75612F20a79720 in AccountControl
      ✓ should correctly convert and mint for various tBTC amounts
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ Authorized 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 in AccountControl
✓ Authorized 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 in AccountControl
✓ Authorized 0x90F79bf6EB2c4f870365E785982E1f101E93b906 in AccountControl
✓ Authorized 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65 in AccountControl
✓ Authorized 0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc in AccountControl
✓ Authorized 0x976EA74026E726554dB657fA54763abd0C3a0aa9 in AccountControl
✓ Authorized 0x14dC79964da2C08b23698B3D3cc7Ca32193d9955 in AccountControl
✓ Authorized 0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f in AccountControl
✓ Authorized 0xa0Ee7A142d267C1f36714E4a8F75612F20a79720 in AccountControl
      ✓ should properly update minted amounts using returned satoshis
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ Authorized 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 in AccountControl
✓ Authorized 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 in AccountControl
✓ Authorized 0x90F79bf6EB2c4f870365E785982E1f101E93b906 in AccountControl
✓ Authorized 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65 in AccountControl
✓ Authorized 0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc in AccountControl
✓ Authorized 0x976EA74026E726554dB657fA54763abd0C3a0aa9 in AccountControl
✓ Authorized 0x14dC79964da2C08b23698B3D3cc7Ca32193d9955 in AccountControl
✓ Authorized 0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f in AccountControl
✓ Authorized 0xa0Ee7A142d267C1f36714E4a8F75612F20a79720 in AccountControl
      ✓ should emit MintExecuted event with satoshi amount
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ Authorized 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 in AccountControl
✓ Authorized 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 in AccountControl
✓ Authorized 0x90F79bf6EB2c4f870365E785982E1f101E93b906 in AccountControl
✓ Authorized 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65 in AccountControl
✓ Authorized 0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc in AccountControl
✓ Authorized 0x976EA74026E726554dB657fA54763abd0C3a0aa9 in AccountControl
✓ Authorized 0x14dC79964da2C08b23698B3D3cc7Ca32193d9955 in AccountControl
✓ Authorized 0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f in AccountControl
✓ Authorized 0xa0Ee7A142d267C1f36714E4a8F75612F20a79720 in AccountControl
      ✓ should enforce minimum mint amount in satoshis
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ Authorized 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 in AccountControl
✓ Authorized 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 in AccountControl
✓ Authorized 0x90F79bf6EB2c4f870365E785982E1f101E93b906 in AccountControl
✓ Authorized 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65 in AccountControl
✓ Authorized 0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc in AccountControl
✓ Authorized 0x976EA74026E726554dB657fA54763abd0C3a0aa9 in AccountControl
✓ Authorized 0x14dC79964da2C08b23698B3D3cc7Ca32193d9955 in AccountControl
✓ Authorized 0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f in AccountControl
✓ Authorized 0xa0Ee7A142d267C1f36714E4a8F75612F20a79720 in AccountControl
      ✓ should enforce maximum single mint in satoshis
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ Authorized 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 in AccountControl
✓ Authorized 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 in AccountControl
✓ Authorized 0x90F79bf6EB2c4f870365E785982E1f101E93b906 in AccountControl
✓ Authorized 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65 in AccountControl
✓ Authorized 0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc in AccountControl
✓ Authorized 0x976EA74026E726554dB657fA54763abd0C3a0aa9 in AccountControl
✓ Authorized 0x14dC79964da2C08b23698B3D3cc7Ca32193d9955 in AccountControl
✓ Authorized 0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f in AccountControl
✓ Authorized 0xa0Ee7A142d267C1f36714E4a8F75612F20a79720 in AccountControl
      ✓ should check backing using satoshi amounts
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ Authorized 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 in AccountControl
✓ Authorized 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 in AccountControl
✓ Authorized 0x90F79bf6EB2c4f870365E785982E1f101E93b906 in AccountControl
✓ Authorized 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65 in AccountControl
✓ Authorized 0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc in AccountControl
✓ Authorized 0x976EA74026E726554dB657fA54763abd0C3a0aa9 in AccountControl
✓ Authorized 0x14dC79964da2C08b23698B3D3cc7Ca32193d9955 in AccountControl
✓ Authorized 0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f in AccountControl
✓ Authorized 0xa0Ee7A142d267C1f36714E4a8F75612F20a79720 in AccountControl
      ✓ should handle precision correctly for fractional tBTC amounts
    mintTBTC integration with QCMinter
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ Authorized 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 in AccountControl
✓ Authorized 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 in AccountControl
✓ Authorized 0x90F79bf6EB2c4f870365E785982E1f101E93b906 in AccountControl
✓ Authorized 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65 in AccountControl
✓ Authorized 0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc in AccountControl
✓ Authorized 0x976EA74026E726554dB657fA54763abd0C3a0aa9 in AccountControl
✓ Authorized 0x14dC79964da2C08b23698B3D3cc7Ca32193d9955 in AccountControl
✓ Authorized 0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f in AccountControl
✓ Authorized 0xa0Ee7A142d267C1f36714E4a8F75612F20a79720 in AccountControl
      ✓ should work correctly with QCMinter conversion patterns

  AccountControl Oracle Integration
    Oracle-Backing Integration Flow
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ SystemState configured with test defaults
      ✓ should sync backing from oracle when QC is registered
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ SystemState configured with test defaults
      ✓ should handle QC registration when no oracle data exists
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ SystemState configured with test defaults
      ✓ should sync backing when QC status changes
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ SystemState configured with test defaults
      ✓ should emit BackingSyncedFromOracle event
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ SystemState configured with test defaults
      ✓ should handle batch backing sync
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ SystemState configured with test defaults
      ✓ should handle stale oracle data
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ SystemState configured with test defaults
      ✓ should enforce backing >= minted invariant with oracle data
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ SystemState configured with test defaults
      ✓ should handle oracle consensus changes correctly
    Error Handling
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ SystemState configured with test defaults
      ✓ should handle syncBackingFromOracle with zero address
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ SystemState configured with test defaults
      ✓ should handle syncBackingFromOracle when AccountControl not set
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

✓ SystemState configured with test defaults
      ✓ should handle batch sync with mixed valid/invalid addresses

  AccountControl Input Validation
    System Pause Enforcement
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should block all minting when system is paused
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should block all batch minting when system is paused
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should allow emergency council to pause system
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should only allow owner to unpause system
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should block redemptions when system is paused
    Re-authorization
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should allow re-authorization after deauthorization
    Input Validation
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should revert when recipients.length != amounts.length in batchMint
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should revert when batch size exceeds MAX_BATCH_SIZE
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should revert mint with amount below MIN_MINT_AMOUNT
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should revert mint with amount above MAX_SINGLE_MINT
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should revert batchMint with individual amounts below MIN_MINT_AMOUNT
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should revert batchMint with individual amounts above MAX_SINGLE_MINT
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should accept valid single mint amounts
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should accept valid batch parameters
    Authorization Validation
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should prevent unauthorized reserves from minting
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should prevent paused reserves from minting
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should prevent unauthorized addresses from updating backing

  AccountControl Workflows
    Direct Integration Testing
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should support the complete mint workflow
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should support the complete redemption workflow
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should support backing updates affecting available mint capacity
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should handle multiple QCs with independent accounting
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should enforce invariants across mint/redeem cycles
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should maintain consistency under batch operations
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should handle reserve lifecycle properly
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should provide accurate reserve statistics
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should handle emergency scenarios correctly

  BitcoinAddressUtils
    P2PKH Address Decoding
      ✓ should decode valid P2PKH mainnet address
      ✓ should decode valid P2PKH testnet address
      ✓ should reject invalid P2PKH address
    P2SH Address Decoding
      ✓ should decode valid P2SH mainnet address
      ✓ should decode valid P2SH testnet address
    P2WPKH Address Decoding
      ✓ should decode valid P2WPKH address
      ✓ should reject invalid bech32 address
    P2WSH Address Decoding
      ✓ should decode valid P2WSH address
    Error Cases
      ✓ should reject empty address
      ✓ should reject unsupported address format
      ✓ should reject address with invalid length
    Script Generation
      ✓ should handle P2PKH script generation correctly
      ✓ should handle P2WPKH script generation correctly

  Bitcoin Address Validation Integration
    Real Bitcoin Address Validation
      ✓ should validate P2PKH address through redemption initiation
      ✓ should validate P2SH address
      ✓ should validate P2WPKH address
      ✓ should reject invalid Bitcoin address format
      ✓ should reject empty Bitcoin address
      ✓ should reject address with wrong prefix
    Address Decoding Integration
      ✓ should handle P2WSH addresses (32-byte hashes)

  MockReserve - AccountControl Direct Backing Integration
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

    1. Reserve Authorization & Setup
      ✓ should authorize MOCK_RESERVE with minting cap
      ✓ should initialize with zero backing and zero minted
      ✓ should assign correct reserve type
      ✓ should emit ReserveAuthorized event
    2. Direct Backing Management (Federated Model)
      ✓ should allow reserve to update its own backing
      ✓ should emit BackingUpdated event with old and new values
      ✓ should allow backing increases and decreases
      ✓ should handle zero backing scenarios
      ✓ should track backing history for transparency
    3. Minting Operations via Bank Integration
      ✓ should mint through Bank.increaseBalance() chain
      ✓ should enforce backing >= minted + amount invariant
      ✓ should support minting to different target addresses
      ✓ should update both reserve minted and total minted
      ✓ should revert on insufficient backing
      ✓ should emit MintExecuted event
    4. Batch Minting Optimization
      ✓ should process batch mints in single transaction
      ✓ should validate total amount against backing once
      ✓ should achieve gas savings for multiple operations
      ✓ should maintain atomicity (all succeed or all fail)
    5. Redemption Flows
      ✓ should decrease minted amount on redemption
      ✓ should allow partial redemptions
      ✓ should emit RedemptionProcessed event
      ✓ should revert if redeeming more than minted
      ✓ should pause both minting and redemption when reserve paused
    6. Core Invariant Enforcement
      ✓ should never allow minted > backing
      ✓ should track individual reserve solvency
      ✓ should prevent cross-reserve subsidization
      ✓ should enforce MIN_MINT_AMOUNT
      ✓ should enforce MAX_SINGLE_MINT
    7. Pause Mechanisms
      ✓ should pause both minting and redemption when reserve paused
      ✓ should pause all operations (emergency)
      ✓ should pause specific reserve without affecting others
      ✓ should auto-recover from pause when conditions met
      ✓ should emit appropriate pause/unpause events
    8. Reserve Deauthorization
      ✓ should prevent deauthorization with outstanding minted balance
      ✓ should clear backing when deauthorizing clean reserve
      ✓ should emit ReserveDeauthorized event
      ✓ should prevent operations after deauthorization
    9. Multi-Reserve Scenarios
      ✓ should maintain isolation between multiple MockReserves
      ✓ should track totalMinted across all reserves
      ✓ should allow different backing strategies per reserve
      ✓ should handle concurrent operations from different reserves
    10. Edge Cases & Failure Modes
      ✓ should handle rapid backing updates
      ✓ should have reentrancy protection in AccountControl
      ✓ should handle large uint values correctly
      ✓ should recover from temporary insolvency
      ✓ should handle simulation failures gracefully
      ✓ should handle zero address checks
      ✓ should validate array length mismatches
    Integration with AccountControl Events
      ✓ should emit all expected events in correct order
    Gas Optimization Verification

    Gas Optimization Results:
      Single operation gas: 134697
      Batch operation gas: 1198203
      Gas per operation (batch): 59910
      Estimated individual total: 2693940
      Actual savings: 1495737 gas (55%)
      ✓ should demonstrate gas savings with batch operations

  QCData
    Deployment
      ✓ should grant deployer default admin role
      ✓ should have correct role constants
    QC Registration
      when called by QC manager
        ✓ should register QC successfully
        ✓ should revert when QC already registered
        ✓ should revert with zero address
        ✓ should revert with zero minting capacity
      when called by non-manager
        ✓ should revert
    QC Status Management
      when called by QC manager
        ✓ should update QC status successfully
        ✓ should handle all valid status values
        ✓ should revert when QC not registered
        ✓ should update status to UnderReview
      when called by non-manager
        ✓ should revert
    Minted Amount Management
      when called by QC manager
        ✓ should update minted amount successfully
        ✓ should handle zero amount
        ✓ should handle large amounts
        ✓ should revert when QC not registered
      when called by non-manager
        ✓ should revert
    Wallet Registration
      when called by QC manager
        ✓ should register wallet successfully
        ✓ should register multiple wallets for same QC
        ✓ should revert when wallet already registered
        ✓ should revert when QC not registered
        ✓ should revert with empty wallet address
        ✓ should revert when maximum wallets per QC exceeded
        ✓ should return correct wallet capacity information
      when called by non-manager
        ✓ should revert
    Wallet Deregistration
      request deregistration
        ✓ should request deregistration successfully
        ✓ should revert when wallet not registered
        ✓ should revert when wallet not active
      finalize deregistration
        ✓ should finalize deregistration successfully
        ✓ should revert when wallet not registered
        ✓ should revert when wallet not pending deregistration
    View Functions
      isQCRegistered
        ✓ should return true for registered QC
        ✓ should return false for unregistered QC
      getQCStatus
        ✓ should return correct status
        ✓ should return 0 for unregistered QC
      getQCMintedAmount
        ✓ should return correct minted amount
        ✓ should return 0 for unregistered QC
      getQCWallets
        ✓ should return all registered wallets
        ✓ should return empty array for unregistered QC
        ✓ should update when wallets are deregistered
      getWalletOwner
        ✓ should return correct owner
        ✓ should return zero address for unregistered wallet
        ✓ should preserve owner address for deregistered wallet
      getWalletStatus
        ✓ should return correct status
        ✓ should return 0 for unregistered wallet
        ✓ should return correct status after deregistration
    Edge Cases
      wallet status transitions
        ✓ should handle complete deregistration cycle
      multiple QCs with same wallet address
        ✓ should prevent registering same wallet to different QCs
      boundary conditions
        ✓ should handle maximum length wallet addresses
        ✓ should handle maximum minted amounts
    New Utility Functions
      isWalletActive
        ✓ should return true for active wallet
        ✓ should return false for pending deregistration wallet
        ✓ should return false for deregistered wallet
        ✓ should return false for unregistered wallet
      isWalletDeregistered
        ✓ should return false for active wallet
        ✓ should return false for pending deregistration wallet
        ✓ should return true for deregistered wallet
        ✓ should return false for unregistered wallet
      canActivateWallet
        ✓ should return false for active wallet
        ✓ should return false for pending deregistration wallet
        ✓ should return false for deregistered wallet
        ✓ should return false for unregistered wallet
    Enhanced State Machine Tests
      comprehensive state transitions
        ✓ should handle full lifecycle: Active -> PendingDeRegistration -> Deregistered
        ✓ should prevent reactivation of deregistered wallet
        ✓ should prevent double deregistration request
        ✓ should prevent direct finalization without request
      audit trail preservation
        ✓ should maintain complete audit trail after deregistration
      state machine edge cases
        ✓ should handle rapid state transitions correctly
        ✓ should maintain state consistency under concurrent operations
    Role Management
      grantQCManagerRole
        ✓ should grant QC_MANAGER_ROLE to valid address
        ✓ should revert with zero address
        ✓ should allow multiple managers
        ✓ should only be callable by admin
      revokeQCManagerRole
        ✓ should revoke QC_MANAGER_ROLE from address
        ✓ should succeed with zero address (no validation)
        ✓ should succeed when role not granted (no validation)
        ✓ should only be callable by admin
    Minting Capacity Management
      updateMaxMintingCapacity
        ✓ should update max minting capacity and emit event
        ✓ should allow updating capacity multiple times
        ✓ should revert with zero capacity
        ✓ should revert if QC not registered
        ✓ should only be callable by QC manager
      getMaxMintingCapacity
        ✓ should return correct capacity for registered QC
        ✓ should return correct capacity for registered QC
        ✓ should return zero for unregistered QC
        ✓ should be a view function with no gas cost

  QCManager
    Deployment
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should set correct dependencies
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should grant deployer admin role
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should have correct role constants
    QC Registration
      when called by governance
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should register QC successfully
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert if QC already registered
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert with zero address
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert with zero capacity
      when called by non-governance
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert
    Minting Capacity Management
      when called by governance
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should increase minting capacity
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert when decreasing capacity
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert for unregistered QC
    Wallet Registration
      when called by registrar with verified wallet ownership
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.


        2) should register wallet successfully
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert for unregistered QC
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert with invalid wallet address
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert with invalid signature format
      when called by non-registrar
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert
    Wallet Ownership Verification Request
      when called by registered QC
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should generate challenge and emit event
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert with invalid wallet address
      when called by registrar
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert with clear message
      when called by unauthorized user
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert
    5-State Machine
      setQCStatus
        when called by arbiter
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should change status to UnderReview
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.


          3) should change status to Revoked
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should revert with empty reason
        when called by non-arbiter
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should revert
      requestStatusChange
        when called by watchdog enforcer
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should request status change to UnderReview
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should revert when requesting invalid status
    Self-Pause System
      canSelfPause
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should return true when QC has credit and no unfulfilled redemptions
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should return false when QC has unfulfilled redemptions
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should return false when QC is already paused
      selfPause
        when called by QC with credit
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should pause minting only
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should pause completely
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should consume pause credit
        when redemption deadline would be breached
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should revert if redemption deadline conflict
        when called by non-QC
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should revert
      resumeSelfPause
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should allow early resume
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert if called by non-QC
    Pause Credit Management
      grantInitialCredit
        when called by deployer (DEFAULT_ADMIN_ROLE)
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should grant pause credit to QC
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should revert for unregistered QC
        when called by non-pauser
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should revert
      emergencyClearPause
        when called by pauser
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should clear pause and restore credit
      selfPause without credit
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should revert when QC has no pause credit
    Solvency Checking
      verifyQCSolvency
        when called by arbiter
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should verify solvency with adequate reserves
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should detect insolvency
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should ignore stale reserves for solvency check
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should revert for unregistered QC
        when called by non-arbiter
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should revert
    Available Minting Capacity
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should calculate available capacity correctly
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should return zero when QC is not Active
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should be limited by reserve balance
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.


      4) should return zero for stale reserves
    Auto-Escalation System
      checkEscalation
        when called by watchdog after timeout
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should escalate to UnderReview after timeout
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should revert before timeout
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

          ✓ should revert if QC is not paused
    Edge Cases and Integration
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should handle QC trying to self-pause when not active
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

      ✓ should handle multiple status changes correctly
    5-State Model Transitions
      Active State Transitions
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should allow Active → MintingPaused
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should allow Active → Paused
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should allow Active → UnderReview
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.


        5) should allow Active → Revoked
      MintingPaused State Transitions
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should allow MintingPaused → Active
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should allow MintingPaused → Paused
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should allow MintingPaused → UnderReview
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.


        6) should allow MintingPaused → Revoked
      Paused State Transitions
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should allow Paused → Active
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should allow Paused → MintingPaused
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should allow Paused → UnderReview
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.


        7) should allow Paused → Revoked
      UnderReview State Transitions
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should allow UnderReview → Active
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.


        8) should allow UnderReview → Revoked
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should reject UnderReview → MintingPaused
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should reject UnderReview → Paused
      Revoked State Transitions
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should reject Revoked → Active
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should reject Revoked → MintingPaused
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should reject Revoked → Paused
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should reject Revoked → UnderReview
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should allow Revoked → Revoked (no-op)
      Self-Pause Flow Validation
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should validate Active → MintingPaused via selfPause
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should validate Active → Paused via selfPause
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should validate MintingPaused → Active via resumeSelfPause
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should validate Paused → Active via resumeSelfPause
      Auto-Escalation Validation
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should validate MintingPaused → UnderReview auto-escalation
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

        ✓ should validate Paused → UnderReview auto-escalation

  QCManager - AccountControl Integration
Warning: A proxy admin was previously deployed on this network

    This is not natively used with the current kind of proxy ('uups').
    Changes to the admin will have no effect on this new proxy.

    Reserve Authorization Integration
      ✓ should authorize QC in AccountControl when registering through QCManager

      9) "before each" hook for "should handle AccountControl authorization gracefully when address is zero"

  QCManagerLib
    Library Error Validation

      10) "before each" hook for "should revert with InvalidQCAddress when registering zero address"

  QCManager - Direct Wallet Registration
    registerWalletDirect
      when called by a registered, active QC
        ✓ should successfully register a wallet with valid signature
        ✓ should reject registration with already used nonce
      when called by non-QC
        ✓ should revert with QCNotRegistered
      when called by inactive QC
        ✓ should revert with QCNotActive
      when Bitcoin address is invalid
        ✓ should revert with InvalidWalletAddress for empty address
      when function is paused
        ✓ should revert when wallet registration is paused
    Challenge Generation
      ✓ should generate deterministic challenges
    Nonce Management
      ✓ should track used nonces per QC

  QCMinter
    Deployment
      ✓ should set correct bank
      ✓ should set correct tbtc vault
      ✓ should set correct tbtc token
    requestQCMint
      when called with valid parameters
        ✓ should check system state
        ✓ should verify QC status
        ✓ should check minting capacity
        ✓ should call AccountControl to mint TBTC
        ✓ should update QC minted amount
        ✓ should emit QCMintRequested event
        ✓ should emit MintCompleted event
      when called with invalid parameters
        ✓ should revert with zero QC address
        ✓ should revert with zero amount
      when minting is paused
        ✓ should revert
      when QC is emergency paused
        ✓ should revert
      when QC is not active
        ✓ should revert
      when amount exceeds capacity
        ✓ should revert
      when not authorized in Bank
        ✓ should revert
    getAvailableMintingCapacity
      ✓ should delegate to QCManager
    checkMintingEligibility
      when all checks pass
        ✓ should return true
      when minting is paused
        ✓ should return false
      when amount is out of range
        ✓ should return false for amount below minimum
        ✓ should return false for amount above maximum
      when QC is not active
        ✓ should return false
      when amount exceeds capacity
        ✓ should return false
    Auto-minting functionality
      setAutoMintEnabled
        ✓ should set auto-minting enabled
        ✓ should set auto-minting disabled
        ✓ should emit AutoMintToggled event
        ✓ should revert when called by non-governance
      manualMint
        ✓ should check user has Bank balance
        ✓ should check user has sufficient allowance
        ✓ should transfer balance from user
        ✓ should mint tBTC
        ✓ should transfer tBTC to user
        ✓ should emit ManualMintCompleted event
        ✓ should revert when user has no balance
        - should revert when user has insufficient allowance
      checkMintEligibility (Bank balance)
        ✓ should return balance and allowance info
        ✓ should return false when no balance
        ✓ should return false when insufficient allowance
      getSatoshiToTBTCAmount
        ✓ should convert satoshis to tBTC amount
        ✓ should handle zero satoshis
        ✓ should handle large amounts
      requestQCMintHybrid with auto-minting
        ✓ should perform auto-mint when enabled and requested
        ✓ should emit AutoMintCompleted when auto-mint succeeds
        ✓ should not auto-mint when autoMint flag is false
        ✓ should not auto-mint when auto-minting is disabled
        ✓ should revert when insufficient allowance for auto-mint
    Access Control
      when caller does not have MINTER_ROLE
        ✓ should revert requestQCMint
      when caller has MINTER_ROLE
        ✓ should allow requestQCMint

  QCRedeemer
    Deployment
      ✓ should set correct dependencies
      ✓ should grant deployer admin and redeemer roles
    Role Constants
      ✓ should have correct role constants
    initiateRedemption
      when called with invalid parameters
        ✓ should revert with zero QC address
        ✓ should revert with zero amount
        ✓ should revert if Bitcoin address is empty
        ✓ should revert if Bitcoin address is invalid format
        ✓ should revert if Bitcoin address starts with invalid character
        ✓ should revert if Bech32 address is malformed
      when all validations pass
        ✓ should burn user tokens
        ✓ should create redemption record with correct BTC address
        ✓ should emit RedemptionRequested event with correct BTC address
        ✓ should return unique redemption ID
        ✓ should accept P2PKH Bitcoin addresses (starting with '1')
        ✓ should accept P2SH Bitcoin addresses (starting with '3')
        ✓ should accept Bech32 Bitcoin addresses (starting with 'bc1')
    recordRedemptionFulfillment
      when called by non-arbiter
        ✓ should revert
      when redemption is not pending

        11) "before each" hook for "should revert"
      when called by arbiter with valid redemption

        12) "before each" hook for "should update redemption status to Fulfilled"
    flagDefaultedRedemption
      when called by non-arbiter
        ✓ should revert
      when redemption is not pending

        13) "before each" hook for "should revert"
      when called by arbiter with valid redemption
        ✓ should update redemption status to Defaulted
        ✓ should emit RedemptionDefaulted event
    isRedemptionTimedOut
      when redemption is not pending

        14) "before each" hook for "should return false"
      when redemption is pending but not timed out
        ✓ should return false
      when redemption is pending and timed out
        ✓ should return true
    getRedemption
      ✓ should return correct redemption data
      ✓ should return empty data for non-existent redemption
    Access Control
      DISPUTE_ARBITER_ROLE functions

        15) should allow arbiter to record fulfillment
        ✓ should allow arbiter to flag default
        ✓ should prevent non-arbiter from recording fulfillment
        ✓ should prevent non-arbiter from flagging default
    Edge Cases
      when policy contracts change behavior
        ✓ should handle SPV verification properly
    SPV Validation Integration
      ✓ should successfully validate real SPV proofs
      ✓ should fail with invalid SPV proofs

  QCRedeemerSPV Library
    validateSPVProof
      ✓ should revert with SPVErr(1) when relay not set
      ✓ should revert with SPVErr(2) when input vector is invalid
      ✓ should revert with SPVErr(3) when output vector is invalid
      ✓ should revert with SPVErr(4) when merkle proof length != coinbase proof length
      ✓ should revert with SPVErr(7) when headers are empty
    evaluateProofDifficulty
      ✓ should revert with SPVErr(8) when header not at current/previous difficulty
      ✓ should revert with SPVErr(9) for invalid headers chain length
    verifyRedemptionPayment
      ✓ should return false for empty Bitcoin address
      ✓ should return false for zero amount
      ✓ should return false for invalid Bitcoin address format
      ✓ should validate P2PKH addresses correctly
      ✓ should validate P2SH addresses correctly
      ✓ should validate Bech32 addresses correctly
      ✓ should enforce dust threshold (546 satoshis)
    validateRedemptionTransaction
      ✓ should return false for non-Pending status
      ✓ should return false for empty input vector
      ✓ should return false for empty output vector
      ✓ should return false for transaction too large (DoS protection)
      ✓ should return false for excessive output count (DoS protection)

      16) should return false for future locktime (anti-replay protection)
      ✓ should return false for invalid transaction version
      ✓ should return true for valid transaction
    Bitcoin Address Validation
      ✓ should validate P2PKH addresses (starts with '1')
      ✓ should validate P2SH addresses (starts with '3')
      ✓ should validate Bech32 addresses (starts with 'bc')
      ✓ should reject invalid address formats
      ✓ should reject empty addresses
      ✓ should reject addresses that are too short
      ✓ should reject addresses that are too long
    decodeAndValidateBitcoinAddress
      ✓ should decode P2PKH addresses correctly
      ✓ should decode P2SH addresses correctly
      ✓ should decode Bech32 addresses correctly
      ✓ should return false for invalid addresses
    Integration with Bridge SPV Libraries
      ✓ should use BTCUtils for transaction hashing
      ✓ should use ValidateSPV for merkle proof verification
      ✓ should use BytesLib for output parsing
    Error Code Coverage
      ✓ should have tested all 16 error codes

  QCRedeemer - Wallet Obligations Edge Cases
    Edge Case: Bitcoin Address Validation

      17) "before each" hook for "should reject QC wallet with invalid Bitcoin address format"

  QCRedeemer - Wallet Obligations
    Wallet-specific redemption tracking

      18) "before each" hook for "should track redemptions by wallet"

  ReserveOracle
    Initialization
      ✓ should set correct initial values
    attestBalance
      ✓ should allow attester to submit single attestation
      ✓ should revert if not attester
      ✓ should allow zero balance attestations
      ✓ should revert if balance exceeds uint128 max
    batchAttestBalances
      ✓ should allow attester to submit multiple attestations in batch
      ✓ should revert with mismatched arrays
      ✓ should handle empty arrays as no-op
      ✓ should trigger consensus for multiple QCs in single batch
      ✓ should revert if any balance overflows uint128
    Consensus mechanism
      ✓ should reach consensus with 3 matching attestations
      ✓ should calculate median for different values
      ✓ should handle even number of attestations
      ✓ should not reach consensus with insufficient attestations
      ✓ should clear pending attestations after consensus
    getReserveBalanceAndStaleness
      ✓ should return correct balance and freshness
      ✓ should mark as stale after timeout
    Configuration
      setConsensusThreshold
        ✓ should allow admin to update threshold

        19) should revert if not admin
        ✓ should revert if threshold is zero
      setAttestationTimeout
        ✓ should allow arbiter to update timeout
        ✓ should revert if not arbiter
        ✓ should revert if timeout is zero
      setMaxStaleness
        ✓ should allow arbiter to update max staleness
        ✓ should revert if staleness is zero
        ✓ should revert if not arbiter
    Staleness Tracking
      ✓ should report staleness in getReserveBalanceAndStaleness
    Zero Balance Scenarios
      ✓ should reach consensus with zero balances
      ✓ should handle median calculation with some zero values
      ✓ should support QC lifecycle from zero to funded and back
      ✓ should handle temporary zero balance between operations
    Edge cases

      20) should handle attester updating their attestation
      ✓ should ignore expired attestations when calculating consensus
    Attester registration
      ✓ should automatically register attesters

      21) should not re-register existing attesters
      ✓ should assign sequential indices to multiple attesters
    Emergency Functions
      emergencySetReserve
        ✓ should allow arbiter to emergency set reserve balance
        ✓ should revert if not dispute arbiter
        ✓ should clear pending attestations when setting emergency reserve
        ✓ should update timestamp when setting emergency reserve
        ✓ should work with zero balance
      resetConsensus
        ✓ should allow arbiter to reset consensus
        ✓ should revert if not dispute arbiter
        ✓ should work with no pending attestations
        ✓ should not affect existing reserve balance
      Emergency function edge cases
        ✓ should handle emergency set after partial consensus
        ✓ should handle reset after emergency set
        ✓ should handle multiple QC emergency operations

  SPV Libraries Integration
    SharedSPVCore Integration
      ✓ should validate real Bitcoin transaction using SharedSPVCore
      ✓ should validate Bitcoin address formats correctly
      ✓ should decode Bitcoin addresses correctly
    QCManagerSPV Integration
      - should validate wallet control with real Bitcoin data
      - should detect challenge in OP_RETURN outputs
      - should verify transaction signatures correctly
    QCRedeemerSPV Integration
      ✓ should validate SPV proof using SharedSPVCore
      ✓ should validate redemption transactions
      ✓ should calculate payment amounts correctly
      ✓ should match output hashes correctly
    Library Efficiency Comparison

📊 Contract Size Analysis:
================================
SharedSPVCore:    10.054 KB (shared library)
QCManagerSPV:      4.221 KB (reduced by 6.673 KB)
QCRedeemerSPV:     5.356 KB (reduced by 6.993 KB)
TestRelay:         1.261 KB (test infrastructure)
================================
Total savings:    13.666 KB of duplicated code eliminated
Code reuse:       100% of common SPV functions centralized
      ✓ should demonstrate contract size improvements

⛽ Deployment Gas Analysis:
================================
SharedSPVCore       : 2220599 gas (7.4% of block limit)
QCManagerSPV        : 961217 gas (3.2% of block limit)
QCRedeemerSPV       : Not tested yet gas (N/A% of block limit)
TestRelay           : 325006 gas (1.1% of block limit)
      ✓ should verify deployment gas costs
    Error Handling Integration
      ✓ should handle invalid SPV proofs correctly
      ✓ should handle invalid transaction data

  SystemState
    Deployment
      ✓ should grant deployer all roles
      ✓ should have correct role constants
      ✓ should initialize with default values
    Pause Functions
      when called by pauser
        pauseMinting
          ✓ should pause minting successfully
          ✓ should revert when already paused
        unpauseMinting
          ✓ should unpause minting successfully
          ✓ should revert when not paused
        pauseRedemption
          ✓ should pause redemption successfully
          ✓ should revert when already paused
        unpauseRedemption
          ✓ should unpause redemption successfully
          ✓ should revert when not paused
        pauseWalletRegistration
          ✓ should pause wallet registration successfully
          ✓ should revert when already paused
        unpauseWalletRegistration
          ✓ should unpause wallet registration successfully
          ✓ should revert when not paused
      when called by non-pauser
        ✓ should revert for pauseMinting
        ✓ should revert for pauseRedemption
        ✓ should revert for pauseWalletRegistration
    Parameter Management
      when called by parameter admin
        setMinMintAmount
          ✓ should update min mint amount successfully
          ✓ should revert with zero min amount
          ✓ should allow updating multiple times
          ✓ should revert when min amount exceeds max amount
        setMaxMintAmount
          ✓ should update max mint amount successfully
          ✓ should revert with zero max amount
          ✓ should allow very large amounts
        setRedemptionTimeout
          ✓ should update redemption timeout successfully
          ✓ should revert with zero timeout
          ✓ should handle various timeout values
        setStaleThreshold
          ✓ should update stale threshold successfully
          ✓ should revert with zero threshold
          ✓ should handle various threshold values
          ✓ should revert when threshold exceeds 7 days
        setEmergencyPauseDuration
          ✓ should update emergency pause duration successfully
          ✓ should revert with zero duration
          ✓ should revert when duration exceeds 30 days
        setEmergencyCouncil
          ✓ should update emergency council successfully
          ✓ should grant EMERGENCY_ROLE to new council
          ✓ should revoke EMERGENCY_ROLE from old council
          ✓ should revert with zero address
          ✓ should only be callable by DEFAULT_ADMIN_ROLE
      when called by non-parameter admin
        ✓ should revert for setMinMintAmount
        ✓ should revert for setMaxMintAmount
        ✓ should revert for setRedemptionTimeout
        ✓ should revert for setStaleThreshold
        ✓ should revert for setWalletRegistrationDelay
        ✓ should revert for setEmergencyPauseDuration
    Function-Specific Pause Checks
      isFunctionPaused
        ✓ should return correct status for minting
        ✓ should return correct status for redemption
        ✓ should return correct status for wallet registration
        ✓ should return false for unknown function names
    Access Control
      role management
        ✓ should allow admin to grant pauser role
        ✓ should allow admin to grant parameter admin role
        ✓ should allow admin to revoke roles
    Edge Cases
      simultaneous operations
        ✓ should handle independent pause states
        ✓ should handle parameter updates during paused state
      boundary conditions
        ✓ should handle maximum allowed values for parameters
        ✓ should handle very small non-zero values
      event emission
        ✓ should emit events for all state changes
    Emergency QC Functions
      emergencyPauseQC
        when called by pauser
          ✓ should pause QC successfully with correct reason
          ✓ should handle different reason codes
          ✓ should allow multiple QCs to be paused independently
          ✓ should revert when QC is already paused
          ✓ should revert with zero address
        when called by non-pauser
          ✓ should revert with access control error
        when called by admin
          ✓ should work if admin also has pauser role
      emergencyUnpauseQC
        when called by pauser
          ✓ should unpause QC successfully
          ✓ should allow QC to be paused and unpaused multiple times
          ✓ should revert when QC is not paused
          ✓ should revert when trying to unpause already unpaused QC
        when called by non-pauser
          ✓ should revert with access control error
      Emergency Pause View Functions
        isQCEmergencyPaused
          ✓ should return false for non-paused QC
          ✓ should return true for paused QC
          ✓ should return false after unpause
        isQCEmergencyPauseExpired
          ✓ should return false for non-paused QC
          ✓ should return false for recently paused QC
          ✓ should return true after emergency pause duration
        getQCPauseTimestamp
          ✓ should return 0 for non-paused QC
          ✓ should return timestamp for paused QC
          ✓ should return 0 after unpause
      Emergency Pause Integration
        qcNotEmergencyPaused modifier
          ✓ should allow function execution when QC is not paused
          ✓ should revert function execution when QC is paused
          ✓ should allow function execution after QC is unpaused
      Emergency System Attack Scenarios
        Unauthorized Pause Attempts
          ✓ should prevent non-authorized accounts from pausing
          ✓ should prevent parameter admin from pausing without pauser role
          ✓ should allow emergency council to pause if granted pauser role
        Pause Bypass Attempts
          ✓ should prevent double-pausing for same QC
          ✓ should prevent unauthorized unpause
        State Manipulation Attempts
          ✓ should maintain pause state consistency
          ✓ should properly clean up state on unpause
        Timing Attack Scenarios
          ✓ should handle rapid pause/unpause sequences
          ✓ should handle pause expiry edge cases
      Emergency System Recovery
        Mass QC Recovery
          ✓ should support selective recovery
          ✓ should support full recovery
        Emergency Council Transition
          ✓ should maintain pause state during council changes
          ✓ should allow new pauser to unpause
      Gas Optimization
        ✓ should have reasonable gas costs for emergency operations
        ✓ should have minimal gas cost for view functions

  WatchdogEnforcer
    Deployment
      ✓ should set correct addresses
      ✓ should grant deployer necessary roles
      ✓ should have correct reason codes
    enforceObjectiveViolation
      when enforcing insufficient reserves
        when QC has insufficient reserves
          ✓ should call requestStatusChange on QCManager
          ✓ should emit ObjectiveViolationEnforced event
          ✓ should emit EnforcementAttempted event
        when QC has sufficient reserves
          ✓ should revert with ViolationNotFound
          ✓ should emit EnforcementAttempted event before reverting
        when reserves are stale
          ✓ should revert when checking insufficient reserves
          ✓ should emit EnforcementAttempted event before reverting
      when enforcing stale attestations
        when attestations are stale
          ✓ should call requestStatusChange on QCManager
          ✓ should emit ObjectiveViolationEnforced event
        when attestations are fresh
          ✓ should revert with ViolationNotFound
      when using invalid reason code
        ✓ should revert with NotObjectiveViolation
      when called by anyone (permissionless)
        ✓ should allow watchdog to enforce
        ✓ should allow random user to enforce
      reentrancy protection
        ✓ should have reentrancy protection
    checkViolation
      when checking insufficient reserves
        ✓ should return true when reserves are insufficient
        ✓ should return false when reserves are sufficient
        ✓ should return false when reserves are stale
      when checking stale attestations
        ✓ should return true when attestations are stale
        ✓ should return false when attestations are fresh
      when using invalid reason code
        ✓ should return false with appropriate message
    batchCheckViolations
      when checking for insufficient reserves
        ✓ should return QCs with violations
      when checking for stale attestations
        ✓ should return QCs with stale attestations
      when using invalid reason code
        ✓ should return empty array
      with empty QC array
        ✓ should return empty array
    Integration scenarios
      when collateral ratio changes
        ✓ should adapt to new collateral ratio
      when multiple violations exist
        ✓ should allow enforcing each violation separately

  Bank
    PERMIT_TYPEHASH
      ✓ should be keccak256 of EIP2612 Permit message
    updateBridge
      when called by a third party
        ✓ should revert
      when called with 0-address bridge
        ✓ should revert
      when called by the governance
        ✓ should update the bridge
        ✓ should emit the BridgeUpdated event
    transferBalance
      when the recipient is the zero address
        ✓ should revert
      when the recipient is the bank address
        ✓ should revert
      when the spender has not enough balance
        ✓ should revert
      when the spender transfers part of their balance
        ✓ should transfer the requested amount
        ✓ should emit the BalanceTransferred event
      when the spender transfers part of their balance in two transactions
        ✓ should transfer the requested amount
      when the spender transfers their entire balance
        ✓ should transfer the entire balance
        ✓ should emit the BalanceTransferred event
      when the spender transfers 0 balance
        ✓ should transfer no balance
        ✓ should emit the BalanceTransferred event
    approveBalanceAndCall
      when the spender is the zero address
        ✓ should revert
      when the spender callback reverted
        ✓ should revert
      when the spender had no approved balance before
        ✓ should approve the requested amount
        ✓ should emit the BalanceApproved event
        ✓ should call receiveBalanceApproval
      when the spender had an approved balance before
        ✓ should replace the previous allowance
        ✓ should call receiveBalanceApproval
    approveBalance
      when the spender is the zero address
        ✓ should revert
      when the spender had no approved balance before
        when setting approval to non-zero amount
          ✓ should approve the requested amount
          ✓ should emit the BalanceApproved event
        when setting approval to zero
          ✓ should not change the zero approval
          ✓ should emit the BalanceApproved event
      when the spender had an approved balance before
        when setting approval back to zero
          ✓ should replace the previous allowance with zero
        when trying to overwrite with a non-zero value
          ✓ should revert
    increaseBalanceAllowance
      when the spender is the zero address
        ✓ should revert
      when the spender had no approved balance before
        ✓ should approve the requested amount
        ✓ should emit the BalanceApproved event
      when the spender had an approved balance before
        ✓ should increase the previous allowance
      when the spender has a maximum allowance
        ✓ should revert
    decreaseBalanceAllowance
      when the spender is the zero address
        ✓ should revert
      when the spender had no approved balance before
        ✓ should revert
      when the spender had an approved balance before
        ✓ should decrease the previous allowance
    transferBalanceFrom
      when the recipient is the zero address
        ✓ should revert
      when the recipient is the bank address
        ✓ should revert
      when the spender has not enough balance approved
        ✓ should revert
      when the owner has not enough balance
        ✓ should revert
      when the spender transfers part of the approved balance
        ✓ should transfer the requested amount
        ✓ should emit the BalanceTransferred event
        ✓ should reduce the spender allowance
      when the spender transfers part of the approved balance in two transactions
        ✓ should transfer the requested amount
        ✓ should emit BalanceTransferred events
        ✓ should reduce the spender allowance
      when the spender transfers the entire approved balance
        ✓ should transfer the requested amount
        ✓ should reduce the spender allowance to zero
      when the spender transfers the entire balance
        ✓ should transfer the requested amount
        ✓ should reduce the spender allowance to zero
      when given the maximum allowance
        ✓ should not reduce the spender allowance
    permit
      when permission expired
        ✓ should revert
      when permission has an invalid signature
        when owner does not match the permitting one
          ✓ should revert
        when spender does not match the signature
          ✓ should revert
        when permitted balance does not match the signature
          ✓ should revert
        when permitted deadline does not match the signature
          ✓ should revert
      when the spender is the zero address
        ✓ should revert
      when the spender had no permitted balance before
        ✓ should approve the requested amount
        ✓ should emit the BalanceApproved event
        ✓ should increment the nonce for the permitting owner
      when the spender had a permitted balance before
        ✓ should replace the previous approval
        ✓ should emit the BalanceApproved event
        ✓ should increment the nonce for the permitting owner
      when given never expiring permit
        ✓ should be accepted at any moment
    increaseBalance
      when called by a third party
        ✓ should revert
      when called by the bridge
        when increasing balance for the Bank
          ✓ should revert
        when called for a valid recipient
          ✓ should increase recipient's balance
          ✓ should emit the BalanceIncreased event
    increaseBalances
      when called by a third party
        ✓ should revert
      when called by the bridge
        when increasing balance for the bank
          ✓ should revert
        when there is more recipients than amounts
          ✓ should revert
        when there is more amounts than recipients
          ✓ should revert
        when called for a valid recipient
          ✓ should increase recipients' balances
          ✓ should emit BalanceIncreased events
    increaseBalanceAndCall
      when called by a third party
        ✓ should revert
      when called by the bridge
        ✓ should increase vault's balance
        ✓ should emit BalanceIncreased event
        ✓ should call the vault
        when depositors array has greater length than deposited amounts array
          ✓ should revert
        when deposited amounts array has greater length than depositors array
          ✓ should revert
    decreaseBalance
      ✓ should decrease caller's balance
      ✓ should emit the BalanceDecreased event
    DOMAIN_SEPARATOR
      ✓ should be keccak256 of EIP712 domain struct

  BitcoinTx
    validateProof
      when used with a valid but long proof
        ✓ should validate the proof with success
        ✓ should consume around 95000 gas

  Bridge - Deposit
    revealDeposit
      when wallet is in Live state
        when reveal ahead period validation is disabled
          when funding transaction is P2SH
            when funding output script hash is correct
              when deposit was not revealed yet
                when amount is not below the dust threshold
                  when deposit is routed to a trusted vault
                    ✓ should store proper deposit data
                    ✓ should emit DepositRevealed event
                  when deposit is not routed to a vault
                    ✓ should accept the deposit
                  when deposit treasury fee is zero
                    ✓ should store proper deposit data
                    ✓ should accept the deposit
                  when deposit is routed to a non-trusted vault
                    ✓ should revert
                when amount is below the dust threshold
                  ✓ should revert
              when deposit was already revealed
                ✓ should revert
            when funding output script hash is wrong
              ✓ should revert
            when the caller address does not match the funding output script
              ✓ should revert
            when funding transaction embeds extra data
              ✓ should revert
          when funding transaction is P2WSH
            when funding output script hash is correct
              when deposit was not revealed yet
                when deposit is routed to a trusted vault
                  ✓ should store proper deposit data
                  ✓ should emit DepositRevealed event
                when deposit is not routed to a vault
                  ✓ should accept the deposit
                when deposit is routed to a non-trusted vault
                  ✓ should revert
              when deposit was already revealed
                ✓ should revert
            when funding output script hash is wrong
              ✓ should revert
            when the caller address does not match the funding output script
              ✓ should revert
            when funding transaction embeds extra data
              ✓ should revert
          when funding transaction is neither P2SH nor P2WSH
            ✓ should revert
        when reveal ahead period validation is enabled
          when reveal ahead period is preserved
            ✓ should pass the refund locktime validation
          when reveal ahead period is not preserved
            ✓ should revert
          when refund locktime integer value is less than 500M
            ✓ should revert
      when wallet is not in Live state
        when wallet state is Unknown
          ✓ should revert
        when wallet state is MovingFunds
          ✓ should revert
        when the source wallet is in the Closing state
          ✓ should revert
        when wallet state is Closed
          ✓ should revert
        when wallet state is Terminated
          ✓ should revert
    revealDepositWithExtraData
      when extra data is non-zero
        when wallet is in Live state
          when reveal ahead period validation is disabled
            when funding transaction is P2SH
              when funding output script hash is correct
                when deposit was not revealed yet
                  when amount is not below the dust threshold
                    when deposit is routed to a trusted vault
                      ✓ should store proper deposit data
                      ✓ should emit DepositRevealed event
                    when deposit is not routed to a vault
                      ✓ should accept the deposit
                    when deposit treasury fee is zero
                      ✓ should store proper deposit data
                      ✓ should accept the deposit
                    when deposit is routed to a non-trusted vault
                      ✓ should revert
                  when amount is below the dust threshold
                    ✓ should revert
                when deposit was already revealed
                  ✓ should revert
              when funding output script hash is wrong
                ✓ should revert
              when the caller address does not match the funding output script
                ✓ should revert
              when the revealed extra data do not match
                ✓ should revert
              when funding transaction does not embed extra data
                ✓ should revert
            when funding transaction is P2WSH
              when funding output script hash is correct
                when deposit was not revealed yet
                  when deposit is routed to a trusted vault
                    ✓ should store proper deposit data
                    ✓ should emit DepositRevealed event
                  when deposit is not routed to a vault
                    ✓ should accept the deposit
                  when deposit is routed to a non-trusted vault
                    ✓ should revert
                when deposit was already revealed
                  ✓ should revert
              when funding output script hash is wrong
                ✓ should revert
              when the caller address does not match the funding output script
                ✓ should revert
              when the revealed extra data do not match
                ✓ should revert
              when funding transaction does not embed extra data
                ✓ should revert
            when funding transaction is neither P2SH nor P2WSH
              ✓ should revert
          when reveal ahead period validation is enabled
            when reveal ahead period is preserved
              ✓ should pass the refund locktime validation
            when reveal ahead period is not preserved
              ✓ should revert
            when refund locktime integer value is less than 500M
              ✓ should revert
        when wallet is not in Live state
          when wallet state is Unknown
            ✓ should revert
          when wallet state is MovingFunds
            ✓ should revert
          when the source wallet is in the Closing state
            ✓ should revert
          when wallet state is Closed
            ✓ should revert
          when wallet state is Terminated
            ✓ should revert
      when extra data is zero
        ✓ should revert
    submitDepositSweepProof
      when the wallet state is Live
        when transaction proof is valid
          when there is only one output
            when the single output is 20-byte
              when single output is either P2PKH or P2WPKH
                when main UTXO data are valid
                  when transaction fee does not exceed the deposit transaction maximum fee
                    when there is only one input
                      when the single input is a revealed unswept P2SH deposit
                        ✓ should mark deposit as swept
                        ✓ should update main UTXO for the given wallet
                        ✓ should update the depositor's balance
                        ✓ should transfer collected treasury fee
                        ✓ should emit DepositsSwept event
                      when the single input is a revealed unswept P2WSH deposit
                        ✓ should mark deposit as swept
                        ✓ should update main UTXO for the given wallet
                        ✓ should update the depositor's balance
                        ✓ should transfer collected treasury fee
                        ✓ should emit DepositsSwept event
                      when the single input is a revealed unswept deposit with a trusted vault
                        ✓ should mark deposit as swept
                        ✓ should update main UTXO for the given wallet
                        ✓ should not update the depositor's balance
                        ✓ should update the vault's balance
                        ✓ should call the vault's receiveBalanceIncrease function
                        ✓ should transfer collected treasury fee
                        ✓ should emit DepositsSwept event
                      when the deposit treasury fee is zero
                        ✓ should update the depositor's balance
                        ✓ should collect no treasury fee
                      when the single input is a revealed unswept deposit with a non-trusted vault
                        ✓ should mark deposit as swept
                        ✓ should update main UTXO for the given wallet
                        ✓ should update the depositor's balance
                        ✓ should transfer collected treasury fee
                        ✓ should emit DepositsSwept event
                      when the single input is a revealed unswept deposit with a trusted vault but non-equal to the vault passed via function parameter
                        ✓ should revert
(node:863512) PromiseRejectionHandledWarning: Promise rejection was handled asynchronously (rejection id: 306)
(Use `node --trace-warnings ...` to show where the warning was created)
                      when the single input is the expected main UTXO
                        ✓ should revert
                      when the single input is a revealed but already swept deposit
                        ✓ should revert
                      when the single input is an unknown
                        ✓ should revert
                    when there are multiple inputs
                      when input vector consists only of revealed unswept deposits and the expected main UTXO
                        ✓ should mark deposits as swept
                        ✓ should update main UTXO for the given wallet
                        ✓ should update the depositors balances
                        ✓ should transfer collected treasury fee
                        ✓ should mark the previous main UTXO as spent
                        ✓ should emit DepositsSwept event
                      when input vector consists only of revealed unswept deposits with a trusted vault and the expected main UTXO
                        ✓ should mark deposits as swept
                        ✓ should update main UTXO for the given wallet
                        ✓ should not update the depositors balances
                        ✓ should update the vault's balance
                        ✓ should call the vault's receiveBalanceIncrease function
                        ✓ should transfer collected treasury fee
                        ✓ should mark the previous main UTXO as spent
                        ✓ should emit DepositsSwept event
                      when input vector consists only of revealed unswept deposits with a non-trusted vault and the expected main UTXO
                        ✓ should mark deposits as swept
                        ✓ should update main UTXO for the given wallet
                        ✓ should update the depositors balances
                        ✓ should transfer collected treasury fee
                        ✓ should mark the previous main UTXO as spent
                        ✓ should emit DepositsSwept event
                      when input vector consists only of revealed unswept deposits with different trusted vaults and the expected main UTXO
                        ✓ should revert
                      when input vector consists only of revealed unswept deposits but there is no main UTXO since it is not expected
                        ✓ should mark deposits as swept
                        ✓ should update main UTXO for the given wallet
                        ✓ should update the depositors balances
                        ✓ should transfer collected treasury fee
                        ✓ should emit DepositsSwept event
                      when input vector consists only of revealed unswept deposits but there is no main UTXO despite it is expected
                        ✓ should revert
                      when input vector contains a revealed but already swept deposit
                        ✓ should revert
                      when input vector contains an unknown input
                        ✓ should revert
                  when transaction fee exceeds the deposit transaction maximum fee
                    ✓ should revert
                when main UTXO data are invalid
                  ✓ should revert
              when single output is neither P2PKH nor P2WPKH
                ✓ should revert
            when the single output is not 20-byte
              ✓ should revert
          when output count is other than one
            ✓ should revert
        when transaction proof is not valid
          when input vector is not valid
            ✓ should revert
          when output vector is not valid
            ✓ should revert
          when transaction is not on same level of merkle tree as coinbase
            ✓ should revert
          when merkle proof is not valid
            ✓ should revert
          when coinbase merkle proof is not valid
            ✓ should revert
          when proof difficulty is not current nor previous
            ✓ should revert
          when headers chain length is not valid
            ✓ should revert
          when headers chain is not valid
            ✓ should revert
          when the work in the header is insufficient
            ✓ should revert
          when accumulated difficulty in headers chain is insufficient
Warning: Potentially unsafe deployment of BridgeStub

    You are using the `unsafeAllow.external-library-linking` flag to include external libraries.
    Make sure you have manually checked that the linked libraries are upgrade safe.

            ✓ should revert
          when transaction data is limited to 64 bytes
            ✓ should revert
      when the wallet state is MovingFunds
        ✓ should succeed
      when the wallet state is neither Live or MovingFunds
        when wallet state is Unknown
          ✓ should revert
        when wallet state is Closing
          ✓ should revert
        when wallet state is Closed
          ✓ should revert
        when wallet state is Terminated
          ✓ should revert

  Bridge - Fraud
    submitFraudChallenge
      when the wallet is in Live state
        when the amount of ETH deposited is enough
          when the data needed for signature verification is correct
            when the fraud challenge does not exist yet
              ✓ should transfer ether from the caller to the bridge
              ✓ should store the fraud challenge data
              ✓ should emit FraudChallengeSubmitted event
            when the fraud challenge already exists
              ✓ should revert
          when incorrect wallet public key is used
            ✓ should revert
          when incorrect sighash is used
            ✓ should revert
          when incorrect recovery ID is used
            ✓ should revert
          when incorrect signature data is used
            ✓ should revert
        when the amount of ETH deposited is too low
          ✓ should revert
      when the wallet is in MovingFunds state
        ✓ should succeed
      when the wallet is in Closing state
        ✓ should succeed
      when the wallet is in neither Live nor MovingFunds nor Closing state
        when wallet state is Unknown
          ✓ should revert
        when wallet state is Closed
          ✓ should revert
        when wallet state is Terminated
          ✓ should revert
    defeatFraudChallengeWithHeartbeat
      when the challenge exists
        when the challenge is open
          when the heartbeat message has correct format
            ✓ should mark the challenge as resolved
            ✓ should send the ether deposited by the challenger to the treasury
            ✓ should emit FraudChallengeDefeated event
          when the heartbeat message has no correct format
            ✓ should revert
        when the challenge is resolved by defeat
          ✓ should revert
        when the challenge is resolved by timeout
          ✓ should revert
      when the challenge does not exist
        ✓ should revert
    defeatFraudChallenge
      when the challenge exists
        when the challenge is open
          when the sighash type is correct
            when the input is non-witness
              when the transaction has single input
                when the input is marked as correctly spent in the Bridge
                  ✓ should mark the challenge as resolved
                  ✓ should send the ether deposited by the challenger to the treasury
                  ✓ should emit FraudChallengeDefeated event
                when the input is not marked as correctly spent in the Bridge
                  ✓ should revert
              when the transaction has multiple inputs
                when the input is marked as correctly spent in the Bridge
                  ✓ should mark the challenge as resolved
                  ✓ should send the ether deposited by the challenger to the treasury
                  ✓ should emit FraudChallengeDefeated event
                when the input is not marked as correctly spent in the Bridge
                  ✓ should revert
            when the input is witness
              when the transaction has single input
                when the input is marked as correctly spent in the Bridge
                  ✓ should mark the challenge as resolved
                  ✓ should send the ether deposited by the challenger to the treasury
                  ✓ should emit FraudChallengeDefeated event
                when the input is not marked as correctly spent in the Bridge
                  ✓ should revert
              when the transaction has multiple inputs
                when the input is marked as correctly spent in the Bridge
                  ✓ should mark the challenge as resolved
                  ✓ should send the ether deposited by the challenger to the treasury
                  ✓ should emit FraudChallengeDefeated event
                when the input is not marked as correctly spent in the Bridge
                  ✓ should revert
          when the sighash type is incorrect
            ✓ should revert
        when the challenge is resolved by defeat
          ✓ should revert
        when the challenge is resolved by timeout
          ✓ should revert
      when the challenge does not exist
        ✓ should revert
    notifyFraudChallengeDefeatTimeout
      when the fraud challenge exists
        when the fraud challenge is open
          when the fraud challenge has timed out
            when the wallet is in the Live or MovingFunds or Closing state
              when wallet state is Live but the wallet is not the active one
                ✓ should mark the fraud challenge as resolved
                ✓ should return the deposited ether to the challenger
                ✓ should emit FraudChallengeDefeatTimedOut event
                ✓ should change the wallet state to Terminated
                ✓ should emit WalletTerminated event
                ✓ should call the ECDSA wallet registry's closeWallet function
                ✓ should call the ECDSA wallet registry's seize function
                ✓ should decrease the live wallets count
                ✓ should not unset the active wallet
              when wallet state is Live and the wallet is the active one
                ✓ should mark the fraud challenge as resolved
                ✓ should return the deposited ether to the challenger
                ✓ should emit FraudChallengeDefeatTimedOut event
                ✓ should change the wallet state to Terminated
                ✓ should emit WalletTerminated event
                ✓ should call the ECDSA wallet registry's closeWallet function
                ✓ should call the ECDSA wallet registry's seize function
                ✓ should decrease the live wallets count
                ✓ should unset the active wallet
              when wallet state is MovingFunds
                ✓ should mark the fraud challenge as resolved
                ✓ should return the deposited ether to the challenger
                ✓ should emit FraudChallengeDefeatTimedOut event
                ✓ should change the wallet state to Terminated
                ✓ should emit WalletTerminated event
                ✓ should call the ECDSA wallet registry's closeWallet function
                ✓ should call the ECDSA wallet registry's seize function
              when wallet state is Closing
                ✓ should mark the fraud challenge as resolved
                ✓ should return the deposited ether to the challenger
                ✓ should emit FraudChallengeDefeatTimedOut event
                ✓ should change the wallet state to Terminated
                ✓ should emit WalletTerminated event
                ✓ should call the ECDSA wallet registry's closeWallet function
                ✓ should call the ECDSA wallet registry's seize function
            when the wallet is in the Terminated state
              ✓ should mark the fraud challenge as resolved
              ✓ should return the deposited ether to the challenger
              ✓ should emit FraudChallengeDefeatTimedOut event
              ✓ should not change the wallet state
              ✓ should not call the ECDSA wallet registry's seize function
            when the wallet is neither in the Live nor MovingFunds nor Closing nor Terminated state
              when the wallet is in the Unknown state
                ✓ should revert
              when the wallet is in the Closed state
                ✓ should revert
          when the fraud challenge has not timed out yet
            ✓ should revert
        when the fraud challenge is resolved by challenge defeat
          ✓ should revert
        when the fraud challenge is resolved by previous timeout notification
          ✓ should revert
      when the fraud challenge does not exist
        ✓ should revert

  Bridge - Governance
    beginGovernanceDelayUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the governance delay
    finalizeGovernanceDelayUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the governance delay
        ✓ should reset the governance delay timer
    beginBridgeGovernanceTransfer
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the bridge governance
        ✓ should not update the bridge governance owner
        ✓ should emit BridgeGovernanceTransferStarted event
    finalizeBridgeGovernanceTransfer
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the bridge governance
        ✓ should not update the bridgeGovernance owner
    beginDepositDustThresholdUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the deposit dust threshold
        ✓ should emit DepositDustThresholdUpdateStarted event
    finalizeDepositDustThresholdUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the deposit dust threshold
        ✓ should emit DepositDustThresholdUpdated event
    beginDepositTreasuryFeeDivisorUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the deposit treasury fee divisor
        ✓ should emit DepositTreasuryFeeDivisorUpdateStarted event
    finalizeDepositTreasuryFeeDivisorUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the deposit treasury fee divisor
        ✓ should emit DepositTreasuryFeeDivisorUpdated event
    beginDepositTxMaxFeeUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the deposit tx max fee
        ✓ should emit DepositTxMaxFeeUpdateStarted event
    finalizeDepositTxMaxFeeUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the deposit tx max fee
        ✓ should emit DepositTxMaxFeeUpdated event
    beginDepositRevealAheadPeriodUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the deposit reveal ahead period
        ✓ should emit DepositRevealAheadPeriodUpdateStarted event
    finalizeDepositRevealAheadPeriodUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the deposit reveal ahead period
        ✓ should emit DepositRevealAheadPeriodUpdated event
    beginRedemptionDustThresholdUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the redemption dust threshold
        ✓ should emit RedemptionDustThresholdUpdateStarted event
    finalizeRedemptionDustThresholdUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the redemption dust threshold
        ✓ should emit RedemptionDustThresholdUpdated event
    beginRedemptionTreasuryFeeDivisorUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the redemption treasury fee divisor
        ✓ should emit RedemptionTreasuryFeeDivisorUpdateStarted event
    finalizeRedemptionTreasuryFeeDivisorUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the redemption treasury fee divisor
        ✓ should emit RedemptionTreasuryFeeDivisorUpdated event
    beginRedemptionTxMaxTotalFeeUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the redemption tx max total fee
        ✓ should emit RedemptionTxMaxTotalFeeUpdateStarted event
    finalizeRedemptionTxMaxTotalFeeUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the redemption tx max total fee
        ✓ should emit RedemptionTxMaxTotalFeeUpdated event
    beginRedemptionTimeoutUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the redemption timeout
        ✓ should emit RedemptionTimeoutUpdateStarted event
    finalizeRedemptionTimeoutUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the redemption timeout
        ✓ should emit RedemptionTimeoutUpdated event
    beginRedemptionTimeoutSlashingAmountUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the redemption timeout slashing amount
        ✓ should emit RedemptionTimeoutSlashingAmountUpdateStarted event
    finalizeRedemptionTimeoutSlashingAmountUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the redemption timeout slashing amount
        ✓ should emit RedemptionTimeoutSlashingAmountUpdated event
    beginRedemptionTimeoutNotifierRewardMultiplierUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the redemption timeout notifier reward multiplier
        ✓ should emit RedemptionTimeoutNotifierRewardMultiplierUpdateStarted event
    finalizeRedemptionTimeoutNotifierRewardMultiplierUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the redemption timeout notifier reward multiplier
        ✓ should emit RedemptionTimeoutNotifierRewardMultiplierUpdated event
    beginMovingFundsTxMaxTotalFeeUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the moving funds tx max total fee
        ✓ should emit MovingFundsTxMaxTotalFeeUpdateStarted event
    finalizeMovingFundsTxMaxTotalFeeUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the moving funds tx max total fee
        ✓ should emit MovingFundsTxMaxTotalFeeUpdated event
    beginMovingFundsDustThresholdUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the moving funds dust threshold
        ✓ should emit MovingFundsDustThresholdUpdateStarted event
    finalizeMovingFundsDustThresholdUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the moving funds dust threshold
        ✓ should emit MovingFundsDustThresholdUpdated event
    beginMovingFundsTimeoutResetDelayUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the moving funds timeout reset delay
        ✓ should emit MovingFundsTimeoutResetDelayUpdateStarted event
    finalizeMovingFundsTimeoutResetDelayUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the moving funds timeout reset delay
        ✓ should emit MovingFundsTimeoutResetDelayUpdated event
    beginMovingFundsTimeoutUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the moving funds timeout
        ✓ should emit MovingFundsTimeoutUpdateStarted event
    finalizeMovingFundsTimeoutUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the moving funds timeout
        ✓ should emit MovingFundsTimeoutUpdated event
    beginMovingFundsTimeoutSlashingAmountUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the moving funds timeout slashing amount
        ✓ should emit MovingFundsTimeoutSlashingAmountUpdateStarted event
    finalizeMovingFundsTimeoutSlashingAmountUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the moving funds timeout slashing amount
        ✓ should emit MovingFundsTimeoutSlashingAmountUpdated event
    beginMovingFundsTimeoutNotifierRewardMultiplierUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the moving funds timeout notifier reward multiplier
        ✓ should emit MovingFundsTimeoutNotifierRewardMultiplierUpdateStarted event
    finalizeMovingFundsTimeoutNotifierRewardMultiplierUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the moving funds timeout notifier reward multiplier
        ✓ should emit MovingFundsTimeoutNotifierRewardMultiplierUpdated event
    beginMovingFundsCommitmentGasOffsetUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the moving funds commitment gas offset
        ✓ should emit MovingFundsCommitmentGasOffsetUpdateStarted event
    finalizeMovingFundsCommitmentGasOffsetUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the moving funds commitment gas offset
        ✓ should emit MovingFundsCommitmentGasOffsetUpdated event
    beginMovedFundsSweepTxMaxTotalFeeUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the moved funds sweep tx max total fee
        ✓ should emit MovedFundsSweepTxMaxTotalFeeUpdateStarted event
    finalizeMovedFundsSweepTxMaxTotalFeeUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the moved funds sweep tx max total fee
        ✓ should emit MovedFundsSweepTxMaxTotalFeeUpdated event
    beginMovedFundsSweepTimeoutUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the moved funds sweep timeout
        ✓ should emit MovedFundsSweepTimeoutUpdateStarted event
    finalizeMovedFundsSweepTimeoutUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the moved funds sweep timeout
        ✓ should emit MovedFundsSweepTimeoutUpdated event
    beginMovedFundsSweepTimeoutSlashingAmountUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the moved funds sweep timeout slashing amount
        ✓ should emit MovedFundsSweepTimeoutSlashingAmountUpdateStarted event
    finalizeMovedFundsSweepTimeoutSlashingAmountUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the moved funds sweep timeout slashing amount
        ✓ should emit MovedFundsSweepTimeoutSlashingAmountUpdated event
    beginMovedFundsSweepTimeoutNotifierRewardMultiplierUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the moved funds sweep timeout notifier reward multiplier
        ✓ should emit MovedFundsSweepTimeoutNotifierRewardMultiplierUpdateStarted event
    finalizeMovedFundsSweepTimeoutNotifierRewardMultiplierUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the moved funds sweep timeout notifier reward multiplier
        ✓ should emit MovedFundsSweepTimeoutNotifierRewardMultiplierUpdated event
    beginWalletCreationPeriodUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the wallet creation period
        ✓ should emit WalletCreationPeriodUpdateStarted event
    finalizeWalletCreationPeriodUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the wallet creation period
        ✓ should emit WalletCreationPeriodUpdated event
    beginWalletCreationMinBtcBalanceUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the wallet creation min btc balance
        ✓ should emit WalletCreationMinBtcBalanceUpdateStarted event
    finalizeWalletCreationMinBtcBalanceUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the wallet creation min btc balance
        ✓ should emit WalletCreationMinBtcBalanceUpdated event
    beginWalletCreationMaxBtcBalanceUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the wallet creation max btc balance
        ✓ should emit WalletCreationMaxBtcBalanceUpdateStarted event
    finalizeWalletCreationMaxBtcBalanceUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the wallet creation max btc balance
        ✓ should emit WalletCreationMaxBtcBalanceUpdated event
    beginWalletClosureMinBtcBalanceUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the wallet closure min btc balance
        ✓ should emit WalletClosureMinBtcBalanceUpdateStarted event
    finalizeWalletClosureMinBtcBalanceUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the wallet closure min btc balance
        ✓ should emit WalletClosureMinBtcBalanceUpdated event
    beginWalletMaxAgeUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the wallet max age
        ✓ should emit WalletMaxAgeUpdateStarted event
    finalizeWalletMaxAgeUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the wallet max age
        ✓ should emit WalletMaxAgeUpdated event
    beginWalletMaxBtcTransferUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the wallet max btc transfer
        ✓ should emit WalletMaxBtcTransferUpdateStarted event
    finalizeWalletMaxBtcTransferUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the wallet max btc transfer
        ✓ should emit WalletMaxBtcTransferUpdated event
    beginWalletClosingPeriodUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the wallet closing period
        ✓ should emit WalletClosingPeriodUpdateStarted event
    finalizeWalletClosingPeriodUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the wallet closing period
        ✓ should emit WalletClosingPeriodUpdated event
    beginFraudChallengeDepositAmountUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the fraud challenge deposit amount
        ✓ should emit FraudChallengeDepositAmountUpdateStarted event
    finalizeFraudChallengeDepositAmountUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the fraud challenge deposit amount
        ✓ should emit FraudChallengeDepositAmountUpdated event
    beginFraudChallengeDefeatTimeoutUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the fraud challenge defeat timeout
        ✓ should emit FraudChallengeDefeatTimeoutUpdateStarted event
    finalizeFraudChallengeDefeatTimeoutUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the fraud challenge defeat timeout
        ✓ should emit FraudChallengeDefeatTimeoutUpdated event
    beginFraudSlashingAmountUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the fraud slashing amount
        ✓ should emit FraudSlashingAmountUpdateStarted event
    finalizeFraudSlashingAmountUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the fraud slashing amount
        ✓ should emit FraudSlashingAmountUpdated event
    beginFraudNotifierRewardMultiplierUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the fraud notifier reward multiplier
        ✓ should emit FraudNotifierRewardMultiplierUpdateStarted event
    finalizeFraudNotifierRewardMultiplierUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the fraud notifier reward multiplier
        ✓ should emit FraudNotifierRewardMultiplierUpdated event
    beginTreasuryUpdate
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should not update the treasury address
        ✓ should emit TreasuryUpdateStarted event
    finalizeTreasuryUpdate
      when the caller is not the owner
        ✓ should revert
      when the update process is not initialized
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initialized and governance delay passed
        ✓ should update the treasury address
        ✓ should emit TreasuryUpdated event
    setVaultStatus
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should mark the vault as trusted
        ✓ should emit VaultStatusUpdated event
    setRedemptionWatchtower
      when caller is not the owner
        ✓ should revert
      when caller is the owner
        ✓ should not revert

  Bridge - Moving funds
    submitMovingFundsCommitment
      when source wallet is in the MovingFunds state
        when source wallet has no pending redemptions
          when source wallet has no pending moved funds sweep requests
            when the commitment was not submitted yet
              when the caller is a member of the source wallet
                when passed wallet main UTXO is valid
                  when wallet balance is greater than zero
                    when the expected target wallets count is greater than zero
                      when the submitted target wallets count is same as the expected
                        when all target wallets are different than the source wallet
                          when all target wallets follow the expected order
                            when all target wallets are in the Live state

                              22) "before all" hook for "should store the target wallets commitment for the given wallet"
                            when one of the target wallets is not in the Live state
                              ✓ should revert
                          when one of the target wallets break the expected order
                            ✓ should revert
                        when one of the target wallets is same as the source wallet
                          ✓ should revert
                      when the submitted target wallets count is other than the expected
                        ✓ should revert
                    when the expected target wallets count is zero
                      ✓ should revert
                  when wallet balance is zero
                    ✓ should revert
                when passed wallet main UTXO is invalid
                  ✓ should revert
              when the caller is not a member of the source wallet
                ✓ should revert
            when the commitment was already submitted
              ✓ should revert
          when source wallet has pending moved funds sweep requests
            ✓ should revert
        when source wallet has pending redemptions
          ✓ should revert
      when source wallet is not in the MovingFunds state
        when the source wallet is in the Unknown state
          ✓ should revert
        when the source wallet is in the Live state
          ✓ should revert
        when the source wallet is in the Closing state
          ✓ should revert
        when the source wallet is in the Closed state
          ✓ should revert
        when the source wallet is in the Terminated state
          ✓ should revert
    resetMovingFundsTimeout
      when the wallet is in the MovingFunds state
        when the wallet's commitment is not submitted yet
          when Live wallets count is zero
            when reset delay has elapsed
              ✓ should reset the moving funds timeout
              ✓ should emit MovingFundsTimeoutReset event
            when reset delay has not elapsed yet
              ✓ should revert
            when one reset occurred and the reset delay has elapsed again
              ✓ should reset the moving funds timeout
              ✓ should emit MovingFundsTimeoutReset event
            when one reset occurred and the reset delay has not elapsed yet
              ✓ should revert
          when Live wallets count is not zero
            ✓ should revert
        when the wallet's commitment is already submitted
          ✓ should revert
      when the wallet is not in the MovingFunds state
        when the wallet is in the Unknown state
          ✓ should revert
        when the wallet is in the Live state
          ✓ should revert
        when the wallet is in the Closing state
          ✓ should revert
        when the wallet is in the Closed state
          ✓ should revert
        when the wallet is in the Terminated state
          ✓ should revert
    submitMovingFundsProof
      when transaction proof is valid
        when there is a main UTXO for the given wallet
          when main UTXO data are valid
            when there is only one input
              when the single input points to the wallet's main UTXO
                when the output vector references only 20-byte hashes
                  when the output vector has only P2PKH and P2WPKH outputs
                    when transaction amount is distributed evenly
                      when transaction fee is not too high
                        when source wallet is in the MovingFunds state
                          when target wallets commitment is submitted
                            when actual target wallets correspond to the commitment
                              when there is a single target wallet
                                ✓ should mark the main UTXO as correctly spent
                                ✓ should unset the main UTXO for the source wallet
                                ✓ should put the source wallet in the Closing state
                                ✓ should set the closing started timestamp
                                ✓ should emit the WalletClosing event
                                ✓ should emit the MovingFundsCompleted event
                                ✓ should create appropriate moved funds sweep requests
                              when there are multiple target wallets and the amount is indivisible
                                ✓ should mark the main UTXO as correctly spent
                                ✓ should unset the main UTXO for the source wallet
                                ✓ should put the source wallet in the Closing state
                                ✓ should set the closing started timestamp
                                ✓ should emit the WalletClosing event
                                ✓ should emit the MovingFundsCompleted event
                                ✓ should create appropriate moved funds sweep requests
                              when there are multiple target wallets and the amount is divisible
                                ✓ should mark the main UTXO as correctly spent
                                ✓ should unset the main UTXO for the source wallet
                                ✓ should put the source wallet in the Closing state
                                ✓ should set the closing started timestamp
                                ✓ should emit the WalletClosing event
                                ✓ should emit the MovingFundsCompleted event
                                ✓ should create appropriate moved funds sweep requests
                            when actual target wallets does not correspond to the commitment
                              when funds were sent to more wallets than submitted in the commitment
                                ✓ should revert
                              when funds were sent to less wallets than submitted in the commitment
                                ✓ should revert
                              when funds were sent to completely different wallets than submitted in the commitment
                                ✓ should revert
                              when funds were sent to the wallets submitted in the commitment but with a wrong order
                                ✓ should revert
                          when target wallets commitment is not submitted
                            ✓ should revert
                        when source wallet is not in the MovingFunds state
                          when wallet state is Unknown
                            ✓ should revert
                          when wallet state is Live
                            ✓ should revert
                          when wallet state is Closing
                            ✓ should revert
                          when wallet state is Closed
                            ✓ should revert
                          when wallet state is Terminated
                            ✓ should revert
                      when transaction fee is too high
                        ✓ should revert
                    when transaction amount is not distributed evenly
                      ✓ should revert
                  when the output vector contains P2SH output
                    ✓ should revert
(node:863512) PromiseRejectionHandledWarning: Promise rejection was handled asynchronously (rejection id: 311)
                when the output vector does not only reference 20-byte hashes
                  ✓ should revert
              when the single input doesn't point to the wallet's main UTXO
                ✓ should revert
            when input count is other than one
              ✓ should revert
          when main UTXO data are invalid
            ✓ should revert
        when there is no main UTXO for the given wallet
          ✓ should revert
      when transaction proof is not valid
        when input vector is not valid
          ✓ should revert
        when output vector is not valid
          ✓ should revert
        when transaction is not on same level of merkle tree as coinbase
          ✓ should revert
        when merkle proof is not valid
          ✓ should revert
        when coinbase merkle proof is not valid
          ✓ should revert
        when proof difficulty is not current nor previous
          ✓ should revert
        when headers chain length is not valid
          ✓ should revert
        when headers chain is not valid
          ✓ should revert
        when the work in the header is insufficient
          ✓ should revert
        when accumulated difficulty in headers chain is insufficient
Warning: Potentially unsafe deployment of BridgeStub

    You are using the `unsafeAllow.external-library-linking` flag to include external libraries.
    Make sure you have manually checked that the linked libraries are upgrade safe.

          ✓ should revert
        when transaction data is limited to 64 bytes
          ✓ should revert
    notifyMovingFundsTimeout
      when source wallet is in the MovingFunds state
        when the moving funds process has timed out
          ✓ should switch the wallet to Terminated state
          ✓ should emit WalletTerminated event
          ✓ should call ECDSA Wallet Registry's closeWallet function
          ✓ should call the ECDSA wallet registry's seize function
          ✓ should emit MovingFundsTimedOut event
        when the moving funds process has not timed out
          ✓ should revert
      when source wallet is not in the MovingFunds state
        when the source wallet is in the Unknown state
          ✓ should revert
        when the source wallet is in the Live state
          ✓ should revert
        when the source wallet is in the Closing state
          ✓ should revert
        when the source wallet is in the Closed state
          ✓ should revert
        when the source wallet is in the Terminated state
          ✓ should revert
    notifyMovingFundsBelowDust
      when the wallet is in the MovingFunds state
        when the main UTXO parameter is valid
          when the balance is below the dust threshold
            ✓ should change wallet's state to Closing
            ✓ should set the wallet's closing started timestamp
            ✓ should emit WalletClosing event
            ✓ should emit MovingFundsBelowDustReported event
          when the balance is not below the dust threshold
            ✓ should revert
        when the main UTXO parameter is invalid
          ✓ should revert
      when the wallet is not in the MovingFunds state
        when wallet state is Unknown
          ✓ should revert
        when wallet state is Live
          ✓ should revert
        when wallet state is Closing
          ✓ should revert
        when wallet state is Closed
          ✓ should revert
        when wallet state is Terminated
          ✓ should revert
    submitMovedFundsSweepProof
      when transaction proof is valid
        when there is only one output
          when the single output is 20-byte
            when single output is either P2PKH or P2WPKH
              when sweeping wallet is either in the Live or MovingFunds state
                when sweeping wallet is in the Live state
                  when main UTXO data are valid
                    when transaction fee does not exceed the sweep transaction maximum fee
                      when the sweeping wallet has no main UTXO set
                        when there is a single input referring to a Pending sweep request
                          ✓ should mark the sweep request as processed
                          ✓ should decrease the sweeping wallet's pending requests count
                          ✓ should set the transaction output as new sweeping wallet main UTXO
                          ✓ should emit the MovedFundsSwept event
                        when the single input does not refer to a Pending sweep request
                          when the single input refers to an Unknown sweep request
                            ✓ should revert
                          when the single input refers to a Processed sweep request
                            ✓ should revert
                          when the single input refers to a TimedOut sweep request
                            ✓ should revert
                        when the single input does refer to a Pending sweep request that belongs to another wallet
                          ✓ should revert
                        when the number of inputs is other than one
                          ✓ should revert
                      when the sweeping wallet has a main UTXO set
                        when the first input refers to a Pending sweep request and the second input refers to the sweeping wallet main UTXO
                          ✓ should mark the sweep request as processed
                          ✓ should decrease the sweeping wallet's pending requests count
                          ✓ should set the transaction output as new sweeping wallet main UTXO
                          ✓ should emit the MovedFundsSwept event
                          ✓ should mark the current sweeping wallet main UTXO as correctly spent
                        when the first input refers to the sweeping wallet main UTXO and the second input refers to a Pending sweep request
                          ✓ should revert
                        when the first input does not refer to a Pending sweep request and the second input refers to the sweeping wallet main UTXO
                          when the first input refers to an Unknown sweep request
                            ✓ should revert
                          when the first input refers to a Processed sweep request
                            ✓ should revert
                          when the first input refers to a TimedOut sweep request
                            ✓ should revert
(node:863512) PromiseRejectionHandledWarning: Promise rejection was handled asynchronously (rejection id: 312)
                        when the first input refers to a Pending sweep request that belongs to another wallet and the second input refers to the sweeping wallet main UTXO
                          ✓ should revert
                        when the first input refers to a Pending sweep request and the second input does not refer to the sweeping wallet main UTXO
                          ✓ should revert
                        when the number of inputs is other than two
                          ✓ should revert
                    when transaction fee exceeds the sweep transaction maximum fee
                      ✓ should revert
                  when main UTXO data are invalid
                    ✓ should revert
                when sweeping wallet is in the MovingFunds state
                  ✓ should succeed
              when sweeping wallet is neither in the Live nor MovingFunds state
                when sweeping wallet is in the Unknown state
                  ✓ should revert
                when sweeping wallet is in the Closing state
                  ✓ should revert
                when sweeping wallet is in the Closed state
                  ✓ should revert
                when sweeping wallet is in the Terminated state
                  ✓ should revert
            when single output is neither P2PKH nor P2WPKH
              ✓ should revert
          when the single output is not 20-byte
            ✓ should revert
        when output count is other than one
          ✓ should revert
      when transaction proof is not valid
        when input vector is not valid
          ✓ should revert
        when output vector is not valid
          ✓ should revert
        when transaction is not on same level of merkle tree as coinbase
          ✓ should revert
        when merkle proof is not valid
          ✓ should revert
        when coinbase merkle proof is not valid
          ✓ should revert
        when proof difficulty is not current nor previous
          ✓ should revert
        when headers chain length is not valid
          ✓ should revert
        when headers chain is not valid
          ✓ should revert
        when the work in the header is insufficient
          ✓ should revert
        when accumulated difficulty in headers chain is insufficient
Warning: Potentially unsafe deployment of BridgeStub

    You are using the `unsafeAllow.external-library-linking` flag to include external libraries.
    Make sure you have manually checked that the linked libraries are upgrade safe.

          ✓ should revert
        when transaction data is limited to 64 bytes
          ✓ should revert
    notifyMovedFundsSweepTimeout
      when moved funds sweep request is in the Pending state
        when moved funds sweep request has timed out
          when the wallet is either in the Live or MovingFunds state
            when the wallet is in the Live state but the wallet is not the active one
              ✓ should switch the moved funds sweep request to the TimedOut state
              ✓ should decrease the number of pending moved funds sweep requests for the given wallet
              ✓ should switch the wallet to Terminated state
              ✓ should emit WalletTerminated event
              ✓ should call ECDSA Wallet Registry's closeWallet function
              ✓ should call the ECDSA wallet registry's seize function
              ✓ should emit MovedFundsSweepTimedOut event
              ✓ should decrease the live wallets count
              ✓ should not unset the active wallet
            when the wallet is in the Live state and the wallet is the active one
              ✓ should switch the moved funds sweep request to the TimedOut state
              ✓ should decrease the number of pending moved funds sweep requests for the given wallet
              ✓ should switch the wallet to Terminated state
              ✓ should emit WalletTerminated event
              ✓ should call ECDSA Wallet Registry's closeWallet function
              ✓ should call the ECDSA wallet registry's seize function
              ✓ should emit MovedFundsSweepTimedOut event
              ✓ should decrease the live wallets count
              ✓ should unset the active wallet
            when the wallet is in the MovingFunds state
              ✓ should switch the moved funds sweep request to the TimedOut state
              ✓ should decrease the number of pending moved funds sweep requests for the given wallet
              ✓ should switch the wallet to Terminated state
              ✓ should emit WalletTerminated event
              ✓ should call ECDSA Wallet Registry's closeWallet function
              ✓ should call the ECDSA wallet registry's seize function
              ✓ should emit MovedFundsSweepTimedOut event
          when the wallet is in the Terminated state
            ✓ should switch the moved funds sweep request to the TimedOut state
            ✓ should decrease the number of pending moved funds sweep requests for the given wallet
            ✓ should not change the wallet state
          when the wallet is neither in the Live nor MovingFunds nor Terminated state
            when the wallet is in the Unknown state
              ✓ should revert
            when the wallet is in the Closing state
              ✓ should revert
            when the wallet is in the Closed state
              ✓ should revert
        when moved funds sweep request has not timed out yet
          ✓ should revert
      when moved funds sweep request is not in the Pending state
        when moved funds sweep request is in the Unknown state
          ✓ should revert
        when moved funds sweep request is in the Processed state
          ✓ should revert
        when moved funds sweep request is in the TimedOut state
          ✓ should revert

  Bridge - Parameters
    updateDepositParameters
      when caller is the contract guvnor
        when all new parameter values are correct
          ✓ should set correct values
          ✓ should emit DepositParametersUpdated event
          ✓ should emit DepositParametersUpdated event
          ✓ should emit DepositParametersUpdated event
          ✓ should emit DepositParametersUpdated event
        when new deposit dust threshold is zero
          ✓ should revert
        when new deposit dust threshold is same as deposit TX max fee
          ✓ should revert
        when new deposit dust threshold is lower than deposit TX max fee
          ✓ should revert
        when new deposit transaction max fee is zero
          ✓ should revert
      when caller is not the contract guvnor
        ✓ should revert
        ✓ should revert
        ✓ should revert
        ✓ should revert
    updateRedemptionParameters
      when caller is the contract guvnor
        when all new parameter values are correct
          ✓ should set correct values
          ✓ should emit RedemptionParametersUpdated event
          ✓ should emit RedemptionParametersUpdated event
          ✓ should emit RedemptionParametersUpdated event
          ✓ should emit RedemptionParametersUpdated event
          ✓ should emit RedemptionParametersUpdated event
          ✓ should emit RedemptionParametersUpdated event
          ✓ should emit RedemptionParametersUpdated event
        when new redemption dust threshold is not greater than moving funds dust threshold
          ✓ should revert
        when new redemption dust threshold is same as redemption tx max fee
          ✓ should revert
        when new redemption dust threshold is lower than redemption tx max fee
          ✓ should revert
        when new redemption transaction max fee is zero
          ✓ should revert
        when new redemption transaction max total fee is lesser than the redemption transaction per-request max fee
          ✓ should revert
        when new redemption timeout is zero
          ✓ should revert
        when new redemption timeout notifier reward multiplier is greater than 100
          ✓ should revert
      when caller is not the contract guvnor
        ✓ should revert
        ✓ should revert
        ✓ should revert
        ✓ should revert
        ✓ should revert
        ✓ should revert
        ✓ should revert
    updateMovingFundsParameters
      when caller is the contract guvnor
        when all new parameter values are correct
          ✓ should set correct values
          ✓ should emit MovingFundsParametersUpdated event
          ✓ should emit MovingFundsParametersUpdated event
          ✓ should emit MovingFundsParametersUpdated event
          ✓ should emit MovingFundsParametersUpdated event
          ✓ should emit MovingFundsParametersUpdated event
          ✓ should emit MovingFundsParametersUpdated event
          ✓ should emit MovingFundsParametersUpdated event
          ✓ should emit MovingFundsParametersUpdated event
          ✓ should emit MovingFundsParametersUpdated event
          ✓ should emit MovingFundsParametersUpdated event
          ✓ should emit MovingFundsParametersUpdated event
        when new moving funds transaction max total fee is zero
          ✓ should revert
        when new moving funds dust threshold is zero
          ✓ should revert
        when new moving funds dust threshold is not lower than redemption dust threshold
          ✓ should revert
        when new moving funds timeout reset delay is zero
          ✓ should revert
        when new moving funds timeout is not greater than its reset delay
          ✓ should revert
        when new moved funds sweep timeout is zero
          ✓ should revert
        when new moved funds sweep timeout notifier reward multiplier is greater than 100
          ✓ should revert
      when caller is not the contract guvnor
        ✓ should revert
    updateWalletParameters
      when caller is the contract guvnor
        when all new parameter values are correct
          ✓ should set correct values
          ✓ should emit WalletParametersUpdated event
          ✓ should emit WalletParametersUpdated event
          ✓ should emit WalletParametersUpdated event
          ✓ should emit WalletParametersUpdated event
          ✓ should emit WalletParametersUpdated event
          ✓ should emit WalletParametersUpdated event
          ✓ should emit WalletParametersUpdated event
        when new creation maximum BTC balance is not greater than the creation minimum BTC balance
          ✓ should revert
        when new maximum BTC transfer is zero
          ✓ should revert
        when new closing period is zero
          ✓ should revert
      when caller is not the contract guvnor
        ✓ should revert
    updateFraudParameters
      when caller is the contract guvnor
        when all new parameter values are correct
          ✓ should set correct values
          ✓ should emit FraudParametersUpdated event
          ✓ should emit FraudParametersUpdated event
          ✓ should emit FraudParametersUpdated event
          ✓ should emit FraudParametersUpdated event
        when new fraud challenge defeat timeout is zero
          ✓ should revert
        when new fraud notifier reward multiplier is greater than 100
          ✓ should revert
      when caller is not the contract guvnor
        ✓ should revert
    updateTreasury
      when caller is the contract guvnor
        when the new treasury address is non-zero
          ✓ should set the new treasury address
          ✓ should emit TreasuryUpdated event
        when the new treasury address is zero
          ✓ should revert
      when caller is not the contract guvnor
        ✓ should revert
    setRedemptionWatchtower
      when caller is not the contract guvnor
        ✓ should revert
      when caller is the contract guvnor
        when the watchtower address is already set
          ✓ should revert
        when the watchtower address is not set yet
          when the watchtower address is zero
            ✓ should revert
          when the watchtower address is non-zero
            ✓ should set the watchtower address
            ✓ should emit RedemptionWatchtowerSet event

  Bridge - Redemption
    requestRedemption
      when redemption watchtower is not set
        when wallet state is Live
          when there is a main UTXO for the given wallet
            when main UTXO data are valid
              when redeemer output script is standard type
                when redeemer output script does not point to the wallet public key hash
                  when amount is not below the dust threshold
                    when there is no pending request for the given redemption key
                      when wallet has sufficient funds
                        when redeemer made a sufficient allowance in Bank
                          when redeemer output script is P2WPKH
                            ✓ should increase the wallet's pending redemptions value
                            ✓ should store the redemption request
                            ✓ should emit RedemptionRequested event
                            ✓ should take the right balance from Bank
                          when redeemer output script is P2WSH
                            ✓ should succeed
                          when redeemer output script is P2PKH
                            ✓ should succeed
                          when redeemer output script is P2SH
                            ✓ should succeed
                          when redemption treasury fee is zero
                            ✓ should store the redemption request with zero fee
                        when redeemer has not made a sufficient allowance in Bank
                          ✓ should revert
                      when wallet has insufficient funds
                        ✓ should revert
                    when there is a pending request for the given redemption key
                      ✓ should revert
                  when amount is below the dust threshold
                    ✓ should revert
                when redeemer output script points to the wallet public key hash
                  ✓ should revert
              when redeemer output script is not standard type
                ✓ should revert
            when main UTXO data are invalid
              ✓ should revert
          when there is no main UTXO for the given wallet
            ✓ should revert
        when wallet state is other than Live
          when wallet state is Unknown
            ✓ should revert
          when wallet state is MovingFunds
            ✓ should revert
          when wallet state is Closing
            ✓ should revert
          when wallet state is Closed
            ✓ should revert
          when wallet state is Terminated
            ✓ should revert
      when redemption watchtower is set
        when redemption watchtower considers the redemption as unsafe
          ✓ should revert
        when redemption watchtower considers the redemption as safe
          ✓ should not revert
    receiveBalanceApproval
      when called via Bank.approveBalanceAndCall
        when wallet state is Live
          when there is a main UTXO for the given wallet
            when main UTXO data are valid
              when redeemer output script is standard type
                when redeemer output script does not point to the wallet public key hash
                  when amount is not below the dust threshold
                    when redeemer output script is P2WPKH
                      ✓ should increase the wallet's pending redemptions value
                      ✓ should store the redemption request
                      ✓ should emit RedemptionRequested event
                      ✓ should take the right balance from Bank
      when called directly
        ✓ should revert
    submitRedemptionProof
      when transaction proof is valid
        when there is a main UTXO for the given wallet
          when main UTXO data are valid
            when there is only one input
              when the single input points to the wallet's main UTXO
                when wallet state is Live
                  when the total transaction fee is not too high
                    when there is only one output
                      when the single output is a pending requested redemption
                        ✓ should close processed redemption request
                        ✓ should delete the wallet's main UTXO
                        ✓ should mark the previous main UTXO as spent
                        ✓ should decrease the wallet's pending redemptions value
                        ✓ should decrease Bridge's balance in Bank
                        ✓ should not transfer anything to the treasury
                        ✓ should not change redeemer balance in any way
                      when the single output is a non-reported timed out requested redemption
                        ✓ should close processed redemption request
                        ✓ should delete the wallet's main UTXO
                        ✓ should mark the previous main UTXO as spent
                        ✓ should decrease the wallet's pending redemptions value
                        ✓ should decrease Bridge's balance in Bank
                        ✓ should not transfer anything to the treasury
                        ✓ should not change redeemer balance in any way
                      when the single output is a reported timed out requested redemption
                        ✓ should remove the timed out request from the contract state
                        ✓ should delete the wallet's main UTXO
                        ✓ should mark the previous main UTXO as spent
                        ✓ should not change the wallet's pending redemptions value
                        ✓ should not change Bridge's balance in Bank
                        ✓ should not transfer anything to the treasury
                        ✓ should not change redeemer balance in any way
                      when the single output is a pending requested redemption but redeemed amount is wrong
                        ✓ should revert
                      when the single output is a reported timed out requested redemption but amount is wrong
                        ✓ should revert
                      when the single output is a legal P2PKH change with a non-zero value
                        ✓ should revert
                      when the single output is a legal P2WPKH change with a non-zero value
                        ✓ should revert
                      when the single output is an illegal P2SH change with a non-zero value
                        ✓ should revert
                      when the single output is a change with a zero as value
                        ✓ should revert
                      when the single output is a non-requested redemption to an arbitrary script
                        ✓ should revert
                      when the single output is provably unspendable OP_RETURN
                        ✓ should revert
                    when there are multiple outputs
                      when output vector consists only of pending requested redemptions
                        ✓ should close processed redemption requests
                        ✓ should delete the wallet's main UTXO
                        ✓ should mark the previous main UTXO as spent
                        ✓ should decrease the wallet's pending redemptions value
                        ✓ should decrease Bridge's balance in Bank
                        ✓ should not transfer anything to the treasury
                        ✓ should not change redeemers balances in any way
                      when output vector consists of pending requested redemptions and a non-zero change
                        ✓ should close processed redemption requests
                        ✓ should update the wallet's main UTXO
                        ✓ should mark the previous main UTXO as spent
                        ✓ should decrease the wallet's pending redemptions value
                        ✓ should decrease Bridge's balance in Bank
                        ✓ should transfer collected treasury fee
                        ✓ should not change redeemers balances in any way
                      when output vector consists only of reported timed out requested redemptions
                        ✓ should remove the timed out requests from the contract state
                        ✓ should delete the wallet's main UTXO
                        ✓ should mark the previous main UTXO as spent
                        ✓ should not change the wallet's pending redemptions value
                        ✓ should not change Bridge's balance in Bank
                        ✓ should not transfer anything to the treasury
                        ✓ should not change redeemers balances in any way
                      when output vector consists of reported timed out requested redemptions and a non-zero change
                        ✓ should remove the timed out requests from the contract state
                        ✓ should update the wallet's main UTXO
                        ✓ should mark the previous main UTXO as spent
                        ✓ should not change the wallet's pending redemptions value
                        ✓ should not change Bridge's balance in Bank
                        ✓ should not transfer anything to the treasury
                        ✓ should not change redeemers balances in any way
                      when output vector consists of pending requested redemptions and reported timed out requested redemptions
                        ✓ should remove the timed out requests from the contract state
                        ✓ should close processed redemption requests
                        ✓ should delete the wallet's main UTXO
                        ✓ should mark the previous main UTXO as spent
                        ✓ should decrease the wallet's pending redemptions value
                        ✓ should decrease Bridge's balance in Bank
                        ✓ should not transfer anything to the treasury
                        ✓ should not change redeemers balances in any way
                      when output vector consists of pending requested redemptions, reported timed out requested redemptions and a non-zero change
                        ✓ should remove the timed out requests from the contract state
                        ✓ should close processed redemption requests
                        ✓ should update the wallet's main UTXO
                        ✓ should mark the previous main UTXO as spent
                        ✓ should decrease the wallet's pending redemptions value
                        ✓ should decrease Bridge's balance in Bank
                        ✓ should transfer collected treasury fee
                        ✓ should not change redeemers balances in any way
                      when output vector contains a pending requested redemption with wrong amount redeemed
                        ✓ should revert
                      when output vector contains a reported timed out requested redemption with wrong amount redeemed
                        ✓ should revert
                      when output vector contains a non-zero P2SH change output
                        ✓ should revert
                      when output vector contains multiple non-zero change outputs
                        ✓ should revert
                      when output vector contains one change but with zero as value
                        ✓ should revert
                      when output vector contains a non-requested redemption to an arbitrary script hash
                        ✓ should revert
                      when output vector contains a provably unspendable OP_RETURN output
                        ✓ should revert
                  when the total transaction fee is too high
                    ✓ should revert
                when wallet state is MovingFunds
                  ✓ should succeed
                when wallet state is neither Live nor MovingFunds
                  when wallet state is Unknown
                    ✓ should revert
                  when wallet state is Closing
                    ✓ should revert
                  when wallet state is Closed
                    ✓ should revert
                  when wallet state is Terminated
                    ✓ should revert
              when the single input doesn't point to the wallet's main UTXO
                ✓ should revert
            when input count is other than one
              ✓ should revert
          when main UTXO data are invalid
            ✓ should revert
        when there is no main UTXO for the given wallet
          ✓ should revert
      when transaction proof is not valid
        when input vector is not valid
          ✓ should revert
        when output vector is not valid
          ✓ should revert
        when transaction is not on same level of merkle tree as coinbase
          ✓ should revert
        when merkle proof is not valid
          ✓ should revert
        when coinbase merkle proof is not valid
          ✓ should revert
        when proof difficulty is not current nor previous
          ✓ should revert
        when headers chain length is not valid
          ✓ should revert
        when headers chain is not valid
          ✓ should revert
        when the work in the header is insufficient
          ✓ should revert
        when accumulated difficulty in headers chain is insufficient
Warning: Potentially unsafe deployment of BridgeStub

    You are using the `unsafeAllow.external-library-linking` flag to include external libraries.
    Make sure you have manually checked that the linked libraries are upgrade safe.

          ✓ should revert
        when transaction data is limited to 64 bytes
          ✓ should revert
    notifyRedemptionTimeout
      when redemption request exists
        when the redemption request has timed out
          when the wallet is in Live state
            when the wallet is the active wallet
              ✓ should update the wallet's pending redemptions value
              ✓ should return the requested amount of tokens to the redeemer
              ✓ should remove the request from the pending redemptions
              ✓ should add the request to the timed-out redemptions
              ✓ should change the wallet's state to MovingFunds
              ✓ should set the wallet's move funds requested timestamp
              ✓ should emit WalletMovingFunds event
              ✓ should delete the active wallet public key hash
              ✓ should call the ECDSA wallet registry's seize function
              ✓ should emit RedemptionTimedOut event
              ✓ should decrease the live wallets counter
            when the wallet is not the active wallet
              ✓ should not delete the active wallet public key hash
          when the wallet is in MovingFunds state
            ✓ should update the wallet's pending redemptions value
            ✓ should return the requested amount of tokens to the redeemer
            ✓ should remove the request from the pending redemptions
            ✓ should add the request to the timed-out redemptions
            ✓ should not change wallet state
            ✓ should call the ECDSA wallet registry's seize function
            ✓ should emit RedemptionTimedOut event
          when the wallet is in Terminated state
            ✓ should update the wallet's pending redemptions value
            ✓ should remove the request from the pending redemptions
            ✓ should add the request to the timed-out redemptions
            ✓ should not change wallet state
            ✓ should emit RedemptionTimedOut event
            ✓ should return the requested amount of tokens to the redeemer
            ✓ should not call the ECDSA wallet registry's seize function
          when the wallet is neither in Live, MovingFunds nor Terminated state
            when wallet state is Unknown
              ✓ should revert
            when wallet state is Closing
              ✓ should revert
            when wallet state is Closed
              ✓ should revert
        when the redemption request has not timed out
          ✓ should revert
      when redemption request does not exist
        ✓ should revert
    notifyRedemptionVeto
      when the caller is not the redemption watchtower
        ✓ should revert
      when the caller is the redemption watchtower
        when the redemption does not exist
          ✓ should revert
        when the redemption exists
          ✓ should update the wallet's pending redemptions value
          ✓ should remove the request from the pending redemptions
          ✓ should transfer the requested amount of tokens to the watchtower

  Bridge - Vaults
    isVaultTrusted
      ✓ should not trust a vault by default
    setVaultStatus
      when called not by the governance
        ✓ should revert
        ✓ should revert
      when called by the governance
        when setting vault status as trusted
          ✓ should correctly update vault status
          ✓ should emit VaultStatusUpdated event
        when setting vault status as no longer trusted
          ✓ should correctly update vault status
          ✓ should emit VaultStatusUpdated event

  Bridge - Wallets
    requestNewWallet
      when called by a third party
        when wallet creation is not in progress
          when active wallet is not set
            ✓ should emit NewWalletRequested event
            ✓ should call ECDSA Wallet Registry's requestNewWallet function
          when active wallet is set
            when active wallet has a main UTXO set
              when the active wallet main UTXO data are valid
                when wallet creation conditions are met
                  when active wallet is old enough and its balance is greater or equal the minimum BTC balance threshold
                    ✓ should emit NewWalletRequested event
                    ✓ should call ECDSA Wallet Registry's requestNewWallet function
                  when active wallet is not old enough but its balance is greater or equal the maximum BTC balance threshold
                    ✓ should emit NewWalletRequested event
                    ✓ should call ECDSA Wallet Registry's requestNewWallet function
                when active wallet is not old enough and its balance is greater or equal the minimum but lesser than the maximum BTC balance threshold
                  ✓ should revert
(node:863512) PromiseRejectionHandledWarning: Promise rejection was handled asynchronously (rejection id: 315)
                when active wallet is old enough but its balance is lesser than the minimum BTC balance threshold
                  ✓ should revert
(node:863512) PromiseRejectionHandledWarning: Promise rejection was handled asynchronously (rejection id: 316)
              when the active wallet main UTXO data are invalid
                ✓ should revert
            when active wallet has no main UTXO set
              when the minimum BTC balance threshold is non-zero
                ✓ should revert
              when the minimum BTC balance threshold is non-zero
                ✓ should revert
              when the minimum BTC balance threshold is zero
                when wallet creation conditions are met
                  ✓ should emit NewWalletRequested event
                  ✓ should call ECDSA Wallet Registry's requestNewWallet function
        when wallet creation is already in progress
          when wallet creation state is AWAITING_SEED
            ✓ should revert
          when wallet creation state is AWAITING_RESULT
            ✓ should revert
          when wallet creation state is CHALLENGE
            ✓ should revert
    __ecdsaWalletCreatedCallback
      when called by a third party
        ✓ should revert
      when called by the ECDSA Wallet Registry
        when called with a valid ECDSA Wallet details
          ✓ should register ECDSA wallet reference
          ✓ should transition wallet to Live state
          ✓ should set the created at timestamp
          ✓ should set the wallet as the active one
          ✓ should emit NewWalletRegistered event
          ✓ should increase the live wallets counter
        when called with the ECDSA Wallet already registered
          with unique wallet ID and unique public key
            ✓ should not revert
          with duplicated wallet ID and unique public key
            ✓ should not revert
          with unique wallet ID, unique public key X and duplicated public key Y
            ✓ should not revert
          with unique wallet ID, unique public key Y and duplicated public key X
            ✓ should not revert
          with unique wallet ID and duplicated public key
            ✓ should revert
          with duplicated wallet ID and duplicated public key
            ✓ should revert
    __ecdsaWalletHeartbeatFailedCallback
      when called by the ECDSA Wallet Registry
        when wallet is in Live state
          when wallet balance is zero
            when wallet is the active one
              ✓ should change wallet's state to Closing
              ✓ should set the wallet's closing started timestamp
              ✓ should emit WalletClosing event
              ✓ should unset the active wallet
              ✓ should decrease the live wallets counter
            when wallet is not the active one
              ✓ should change wallet's state to Closing
              ✓ should set the wallet's closing started timestamp
              ✓ should emit WalletClosing event
              ✓ should not unset the active wallet
              ✓ should decrease the live wallets counter
          when wallet balance is greater than zero
            when wallet is the active one
              ✓ should change wallet's state to MovingFunds
              ✓ should set move funds requested at timestamp
              ✓ should emit WalletMovingFunds event
              ✓ should unset the active wallet
              ✓ should decrease the live wallets counter
            when wallet is not the active one
              ✓ should change wallet's state to MovingFunds
              ✓ should set move funds requested at timestamp
              ✓ should emit WalletMovingFunds event
              ✓ should not unset the active wallet
              ✓ should decrease the live wallets counter
        when wallet is not in Live state
          when wallet state is Unknown
            ✓ should revert
          when wallet state is MovingFunds
            ✓ should revert
          when wallet state is Closing
            ✓ should revert
          when wallet state is Closed
            ✓ should revert
          when wallet state is Terminated
            ✓ should revert
      when called by a third party
        ✓ should revert
    notifyWalletCloseable
      when the reported wallet is not the active one
        when wallet is in Live state
          when wallet reached the maximum age
            when wallet balance is zero
              ✓ should change wallet's state to Closing
              ✓ should set the wallet's closing started timestamp
              ✓ should emit WalletClosing event
              ✓ should decrease the live wallets counter
            when wallet balance is greater than zero
              ✓ should change wallet's state to MovingFunds
              ✓ should set move funds requested at timestamp
              ✓ should emit WalletMovingFunds event
              ✓ should decrease the live wallets counter
          when wallet did not reach the maximum age but their balance is lesser than the minimum threshold
            when wallet balance is zero
              ✓ should change wallet's state to Closing
              ✓ should set the wallet's closing started timestamp
              ✓ should emit WalletClosing event
              ✓ should decrease the live wallets counter
            when wallet balance is greater than zero
              ✓ should change wallet's state to MovingFunds
              ✓ should set move funds requested at timestamp
              ✓ should emit WalletMovingFunds event
              ✓ should decrease the live wallets counter
          when wallet did not reach the maximum age and their balance is greater or equal the minimum threshold
            ✓ should revert
          when wallet did not reach the maximum age and invalid main UTXO data is passed
            ✓ should revert
        when wallet is not in Live state
          when wallet state is Unknown
            ✓ should revert
          when wallet state is MovingFunds
            ✓ should revert
          when wallet state is Closing
            ✓ should revert
          when wallet state is Closed
            ✓ should revert
          when wallet state is Terminated
            ✓ should revert
      when the reported wallet is the active one
        ✓ should revert
    notifyWalletClosingPeriodElapsed
      when the wallet is in the Closing state
        when closing period has elapsed
          ✓ should set wallet state to Closed
          ✓ should emit WalletClosed event
          ✓ should call the ECDSA wallet registry's closeWallet function
        when closing period has not elapsed yet
          ✓ should revert
      when the wallet is not in the Closing state
        when wallet state is Unknown
          ✓ should revert
        when wallet state is Live
          ✓ should revert
        when wallet state is MovingFunds
          ✓ should revert
        when wallet state is Closed
          ✓ should revert
        when wallet state is Terminated
          ✓ should revert

  Deployment
    Bridge
      ✓ should set Bridge proxy admin
      ✓ should set ProxyAdmin owner
      ✓ should set Bridge implementation
      ✓ should set Bridge implementation in ProxyAdmin
      ✓ should set implementation address different than proxy address
      ✓ should set Bridge governance
      ✓ should revert when initialize called again
    BridgeGovernance
      ✓ should set owner
    WalletRegistry

      23) should set walletOwner
    Bank
      ✓ should set Bridge reference
      ✓ should set Bank owner
    TBTCVault
      ✓ should set Bank reference
      ✓ should set TBTC reference
      ✓ should set TBTCVault owner
    MaintainerProxy
      ✓ should set Bridge reference
      ✓ should set ReimbursementPool reference
      ✓ should set MaintainerProxy owner
    ReimbursementPool
      ✓ should authorize MaintainerProxy in ReimbursementPool

      24) should set ReimbursementPool owner
    VendingMachine
      ✓ should set vendingMachineUpgradeInitiator
      ✓ should set unmintFeeUpdateInitiator
      ✓ should set VendingMachine owner

  EcdsaLib

    25) "before all" hook in "EcdsaLib"

  Heartbeat
    when the message is empty
      ✓ should return false
    when the message has less than 16 bytes
      ✓ should return false
    when the message has more than 16 bytes
      ✓ should return false
    when the message has 16 bytes
      when the message does not have the required prefix
        ✓ should return false
      when the message has the required prefix
        ✓ should return true

  RedemptionWatchtower
    enableWatchtower
      when called not by the owner
        ✓ should revert
      when called by the owner
        when already enabled
          ✓ should revert
        when not enabled yet
          when manager address is zero
            ✓ should revert
          when manager address is non-zero
            ✓ should set the enabledAt timeout properly
            ✓ should set the watchtower manager properly
            ✓ should set initial guardians properly
            ✓ should emit WatchtowerEnabled event
            ✓ should emit GuardianAdded events
    disableWatchtower
      when the watchtower is not enabled
        ✓ should revert
      when the watchtower is enabled
        when the watchtower is disabled already
          ✓ should revert
        when the watchtower is not disabled yet
          when the watchtower lifetime is not expired
            ✓ should revert
          when the watchtower lifetime is expired
            ✓ should set the disabledAt timeout properly
            ✓ should emit WatchtowerDisabled event
    addGuardian
      when watchtower manager is not set
        ✓ should revert
      when watchtower manager is set
        when called not by the watchtower manager
          ✓ should revert
        when called by the watchtower manager
          when guardian already exists
            ✓ should revert
          when guardian does not exist
            ✓ should add the guardian properly
            ✓ should emit GuardianAdded event
    removeGuardian
      when called not by the governance
        ✓ should revert
      when called by the governance
        when guardian does not exist
          ✓ should revert
        when guardian exists
          ✓ should remove the guardian properly
          ✓ should emit GuardianRemoved event
    raiseObjection
      when called not by a guardian
        ✓ should revert
      when called by a guardian
        when redemption request is already vetoed
          ✓ should revert
        when redemption request is not vetoed yet
          when guardian already objected
            ✓ should revert
          when guardian did not object yet
            when redemption request does not exist
              ✓ should revert
            when redemption request exists
              when the requested amount is below the waived amount limit
                ✓ should revert
              when watchtower has been disabled
                ✓ should revert
              when delay period expired and request was created after mechanism initialization
                when the raised objection is the first one
                  ✓ should revert
                when the raised objection is the second one
                  ✓ should revert
                when the raised objection is the third one
                  ✓ should revert
              when delay period expired but request was created before mechanism initialization
                when the raised objection is the first one
                  ✓ should emit VetoPeriodCheckOmitted event
                  ✓ should store the objection key
                  ✓ should update veto state properly
                  ✓ should emit ObjectionRaised event
                when the raised objection is the second one
                  ✓ should emit VetoPeriodCheckOmitted event
                  ✓ should store the objection key
                  ✓ should update veto state properly
                  ✓ should emit ObjectionRaised event
                when the raised objection is the third one
                  ✓ should emit VetoPeriodCheckOmitted event
                  ✓ should store the objection key
                  ✓ should update veto state properly
                  ✓ should emit ObjectionRaised event
                  ✓ should mark the redeemer as banned
                  ✓ should emit Banned event
                  ✓ should emit VetoFinalized event
                  ✓ should decrease wallet's pending redemptions value in the Bridge
                  ✓ should remove pending redemption in the Bridge
                  ✓ should transfer the redemption amount from the Bridge
                  ✓ should leave a proper withdrawable amount and burn the penalty fee
              when delay period did not expire yet
                when the raised objection is the first one
                  ✓ should not emit VetoPeriodCheckOmitted event
                  ✓ should store the objection key
                  ✓ should update veto state properly
                  ✓ should emit ObjectionRaised event
                when the raised objection is the second one
                  ✓ should not emit VetoPeriodCheckOmitted event
                  ✓ should store the objection key
                  ✓ should update veto state properly
                  ✓ should emit ObjectionRaised event
                when the raised objection is the third one
                  ✓ should not emit VetoPeriodCheckOmitted event
                  ✓ should store the objection key
                  ✓ should update veto state properly
                  ✓ should emit ObjectionRaised event
                  ✓ should mark the redeemer as banned
                  ✓ should emit Banned event
                  ✓ should emit VetoFinalized event
                  ✓ should decrease wallet's pending redemptions value in the Bridge
                  ✓ should remove pending redemption in the Bridge
                  ✓ should transfer the redemption amount from the Bridge
                  ✓ should leave a proper withdrawable amount and burn the penalty fee
    getRedemptionDelay
      when the redemption request does not exist
        ✓ should revert
      when the redemption request exists
        when the watchtower has been disabled
          ✓ should return zero as the delay
        when the watchtower has not been disabled
          when the requested amount is below the waived limit
            ✓ should return zero as the delay
          when the requested amount is not below the waived limit
            when there are no objections
              ✓ should return the default delay
            when there is one objection
              ✓ should return the level-one delay
            when there are two objections
              ✓ should return the level-two delay
            when there are three objections
              ✓ should revert
    updateWatchtowerParameters
      when called not by the watchtower manager
        ✓ should revert
      when called by the watchtower manager
        when new parameters are invalid
          when the new lifetime is lesser than the current one
            ✓ should revert
          when the new veto penalty fee is not in the proper range
            ✓ should revert
          when level-two delay is lesser than level-one delay
            ✓ should revert
          when level-one delay is lesser than default delay
            ✓ should revert
        when all new parameters are valid
          when watchtower lifetime is increased
            ✓ should emit WatchtowerParametersUpdated event
            ✓ should update the watchtower parameters
          when veto penalty is changed to to the maximum value of 5%
            ✓ should emit WatchtowerParametersUpdated event
            ✓ should update the watchtower parameters
          when veto penalty is changed to to the middle of the range
            ✓ should emit WatchtowerParametersUpdated event
            ✓ should update the watchtower parameters
          when veto penalty is changed to the minimum value of 0%
            ✓ should emit WatchtowerParametersUpdated event
            ✓ should update the watchtower parameters
          when veto freeze period is changed to a non-zero value
            ✓ should emit WatchtowerParametersUpdated event
            ✓ should update the watchtower parameters
          when veto freeze period is changed to 0
            ✓ should emit WatchtowerParametersUpdated event
            ✓ should update the watchtower parameters
          when delays are changed to a non-zero value
            ✓ should emit WatchtowerParametersUpdated event
            ✓ should update the watchtower parameters
          when delays are changed to 0
            ✓ should emit WatchtowerParametersUpdated event
            ✓ should update the watchtower parameters
          when waived amount limit is changed to a non-zero value
            ✓ should emit WatchtowerParametersUpdated event
            ✓ should update the watchtower parameters
    isSafeRedemption
      when the balance owner is banned
        ✓ should return false
      when the redeemer is banned
        ✓ should return false
      when redemption key was vetoed
        ✓ should return false
      when redemption key was objected but not vetoed
        ✓ should return false
      when all safety criteria are met
        ✓ should return true
    unban
      when the caller is not the watchtower manager
        ✓ should revert
      when the caller is the watchtower manager
        when the redeemer is not banned
          ✓ should revert
        when the redeemer is banned
          ✓ should remove the redeemer from the banned list
          ✓ should emit Unbanned event
    withdrawVetoedFunds
      when the veto is not finalized
        when there are no objections at all
          ✓ should revert
        when there some objections
          ✓ should revert
      when the veto is finalized and the penalty fee is lesser than 100%
        when the caller is not the redeemer
          ✓ should revert
        when the caller is the redeemer
          when the freeze period has not expired
            ✓ should revert
          when the freeze period has expired
            when there are no funds to withdraw
              ✓ should revert
            when there are funds to withdraw
              ✓ should emit VetoedFundsWithdrawn event
              ✓ should set withdrawable amount to zero
              ✓ should transfer the funds to the redeemer
      when the veto is finalized and the penalty fee is 100%
        when the caller is not the redeemer
          ✓ should revert
        when the caller is the redeemer
          when the freeze period has not expired
            ✓ should revert
          when the freeze period has expired
            ✓ should revert

  VendingMachine - Upgrade
    upgrade process - option #1
      step#1 - TBTC v1 transfer
        ✓ should transfer all TBTC v1 to TBTCVault
      step#2 - TBTC v1 withdrawal
        ✓ should let the governance withdraw TBTC v1 from TBTCVault
      step#3 - BTC deposit
        ✓ should let the governance donate TBTCVault
      step#4 - functioning system
        ✓ should let TBTC v2 holders unmint their tokens
        ✓ should let Bank balance holders mint TBTC v2
    upgrade process - option #2
      step#1 - TBTC v1 transfer
        ✓ should transfer all TBTC v1 to TBTCVault
      step#2 - TBTC v1 transfer back to VendingMachine
        ✓ should let the governance transfer TBTC v1 back to VendingMachine
      step #3 - BTC deposit
        ✓ should let to deposit BTC into v2 Bridge
        step #4 - TBTC v2 -> v2 unminting
          ✓ should let the redeemer to unmint TBTC v2 back to TBTC v1

  VendingMachine
    mint
      when TBTC v1 owner has not enough tokens
        ✓ should revert
      when TBTC v1 owner has enough tokens
        when minting entire allowance
          ✓ should mint the same amount of TBTC v2
          ✓ should transfer TBTC v1 tokens to the VendingMachine
          ✓ should emit Minted event
        when minting part of the allowance
          ✓ should mint the same amount of TBTC v2
          ✓ should transfer TBTC v1 tokens to the VendingMachine
          ✓ should emit Minted event
    receiveApproval
      when called directly
        ✓ should revert
      when called not for TBTC v1 token
        ✓ should revert
      when called via approveAndCall
        ✓ should mint TBTC v2 to the caller
        ✓ should transfer TBTC v1 tokens to the VendingMachine
        ✓ should emit Minted event
    unmint
      when unmint fee is zero
        when TBTC v2 owner has not enough tokens
          ✓ should revert
        when TBTC v2 owner has enough tokens
          when unminting entire TBTC v2 balance
            ✓ should transfer no TBTC v2 to the VendingMachine
            ✓ should burn unminted TBTC v2 tokens
            ✓ should transfer unminted TBTC v1 tokens back to the owner
            ✓ should emit the Unminted event
          when unminting part of TBTC v2 balance
            ✓ should transfer no TBTC v2 to the VendingMachine
            ✓ should burn unminted TBTC v2 tokens
            ✓ should transfer unminted TBTC v1 tokens back to the owner
            ✓ should emit the Unminted event
      when unmint fee is non-zero
        when TBTC v2 owner has not enough tokens
          ✓ should revert
        when TBTC v2 owner has enough tokens
          when unminting entire TBTC v2 balance
            ✓ should transfer TBTC v2 fee to the VendingMachine
            ✓ should burn unminted TBTC v2 tokens
            ✓ should transfer unminted TBTC v1 tokens back to the owner
            ✓ should emit the Unminted event
          when unminting part of TBTC v2 balance
            ✓ should transfer TBTC v2 fee to the VendingMachine
            ✓ should burn unminted TBTC v2 tokens
            ✓ should transfer unminted TBTC v1 tokens back to the owner
            ✓ should emit the Unminted event
    withdrawFees
      when caller is not the owner
        ✓ should revert
      when caller is the owner
        ✓ should withdraw the provided amount of fees
        ✓ should leave the rest of fees in VendingMachine
    initiateUnmintFeeUpdate
      when caller is a third party
        ✓ should revert
      when caller is the contract owner
        ✓ should revert
      when caller is the update initiator
        ✓ should not update the unmint fee
        ✓ should start the update initiation time
        ✓ should set the pending new unmint fee
        ✓ should start the governance delay timer
        ✓ should emit UnmintFeeUpdateInitiated event
    finalizeUnmintFeeUpdate
      when caller is a third party
        ✓ should revert
      when caller is the update initiator
        ✓ should revert
      when caller is the owner
        when update process is not initialized
          ✓ should revert
        when update process is initialized
          when governance delay has not passed
            ✓ should revert
          when governance delay passed
            ✓ should update the unmint fee
            ✓ should emit UnmintFeeUpdated event
            ✓ should reset the governance delay timer
            ✓ should reset the pending new unmint fee
            ✓ should reset the unmint fee update initiated timestamp
    initiateVendingMachineUpgrade
      when caller is a third party
        ✓ should revert
      when caller is the contract owner
        ✓ should revert
      when caller is the upgrade initiator
        when new vending machine address is zero
          ✓ should revert
        when new vending machine address is non-zero
          ✓ should not transfer token ownership
          ✓ should start the upgrade initiation time
          ✓ should set the pending new vending machine address
          ✓ should start the governance delay timer
          ✓ should emit VendingMachineUpgradeInitiated event
    finalizeVendingMachineUpgrade
      when caller is a third party
        ✓ should revert
      when caller is the upgrade initiator
        ✓ should revert
      when caller is the owner
        when upgrade process is not initialized
          ✓ should revert
        when upgrade process is initialized
          when governance delay has not passed
            ✓ should revert
          when governance delay passed
            ✓ should transfer token ownership to the new VendingMachine
            ✓ should transfer all TBTC v1 to the new VendingMachine
            ✓ should emit VendingMachineUpgraded event
            ✓ should reset the governance delay timer
            ✓ should reset the pending new vending machine address
            ✓ should reset the vending machine update initiated timestamp
    transferUnmintFeeUpdateInitiatorRole
      when caller is the owner
        ✓ should revert
      when caller is a third party
        ✓ should revert
      when caller is the update initiator
        when new initiator is a valid address
          ✓ should transfer the role
        when new initiator is zero address
          ✓ should revert
    transferVendingMachineUpgradeInitiatorRole
      when caller is the owner
        ✓ should revert
      when caller is a third party
        ✓ should revert
      when caller is the update initiator
        when new initiator is a valid address
          ✓ should transfer the role
        when new initiator is zero address
          ✓ should revert
    unmintFeeFor
      when unmint fee is non-zero
        ✓ should return a correct portion of the amount to unmint
      when unmint fee is zero
        ✓ should return zero

  VendingMachineV2
    exchange
      when tBTC v1 exchanger has not enough tokens
        ✓ should revert
      when not enough tBTC v2 was deposited
        ✓ should revert
      when exchanging entire allowance
        ✓ should exchange the same amount of tBTC v2
        ✓ should transfer tBTC v1 tokens to the VendingMachineV2
        ✓ should emit Exchanged event
      when exchanging part of the allowance
        ✓ should exchange the same amount of tBTC v2
        ✓ should transfer tBTC v1 tokens to the VendingMachineV2
        ✓ should emit Exchanged event
    receiveApproval
      when called directly
        ✓ should revert
      when called not for tBTC v1 token
        ✓ should revert
      when called via approveAndCall
        ✓ should exchange tBTC v2 with the caller
        ✓ should transfer tBTC v1 tokens to the VendingMachineV2
        ✓ should emit Exchanged event
    depositTBTCV2
      when depositing entire allowance
        ✓ should transfer tBTC v2 to the VendingMachineV2
        ✓ should emit Deposited event
      when depositing part of the allowance
        ✓ should transfer tBTC v2 to the VendingMachineV2
        ✓ should emit Deposited event
    withdrawFunds
      when called by third party
        ✓ should revert
      when called by the owner
        when withdrawing tBTC v1 tokens
          ✓ should transfer tokens to the recipient
          ✓ should emit Withdrawn event
        when withdrawing tBTC v2 tokens
          ✓ should transfer tokens to the recipient
          ✓ should emit Withdrawn event

  VendingMachineV3
    exchange
      when tBTC v1 exchanger has not enough tokens
        ✓ should revert
      when not enough tBTC v2 was deposited
        ✓ should revert
      when exchanging entire allowance
        ✓ should exchange the same amount of tBTC v2
        ✓ should transfer tBTC v1 tokens to the VendingMachineV3
        ✓ should emit Exchanged event
      when exchanging part of the allowance
        ✓ should exchange the same amount of tBTC v2
        ✓ should transfer tBTC v1 tokens to the VendingMachineV3
        ✓ should emit Exchanged event
    receiveApproval
      when called directly
        ✓ should revert
      when called not for tBTC v1 token
        ✓ should revert
      when called via approveAndCall
        ✓ should exchange tBTC v2 with the caller
        ✓ should transfer tBTC v1 tokens to the VendingMachineV3
        ✓ should emit Exchanged event
    depositTBTCV2
      when depositing entire allowance
        ✓ should transfer tBTC v2 to the VendingMachineV3
        ✓ should emit Deposited event
      when depositing part of the allowance
        ✓ should transfer tBTC v2 to the VendingMachineV3
        ✓ should emit Deposited event
    recoverFunds
      when called by third party
        ✓ should revert
      when called by the owner
        when recovering tBTC v1 tokens
          ✓ should transfer tokens to the recipient
          ✓ should emit FundsRecovered event
        when recovering tBTC v2 tokens
          ✓ should revert
        when recovering other tokens
          ✓ should transfer tokens to the recipient
          ✓ should emit FundsRecovered event
    withdrawTbtcV2
      when called by a third party
        ✓ should revert
      when called by the owner
        when some tBTC v1 would be unbacked
          ✓ should revert
        when all tBTC v1 would be still backed
          ✓ should transfer tokens to the recipient
          ✓ should emit TbtcV2Withdrawn event

  WalletProposalValidator
    validateDepositSweepProposal
      when wallet is incorrect state
        when wallet state is Unknown
          ✓ should revert
        when wallet state is Closing
          ✓ should revert
        when wallet state is Closed
          ✓ should revert
        when wallet state is Terminated
          ✓ should revert
      when wallet is correct state
        when wallet state is Live
          when sweep is below the min size
            ✓ should revert
          when sweep is above the min size
            when sweep exceeds the max size
              ✓ should revert
            when sweep does not exceed the max size
              when deposit extra info length does not match
                ✓ should revert
              when deposit extra info length matches
                when proposed sweep tx fee is invalid
                  when proposed sweep tx fee is zero
                    ✓ should revert
                  when proposed sweep tx fee is greater than the allowed
                    ✓ should revert
                when proposed sweep tx fee is valid
                  when there is a non-revealed deposit
                    ✓ should revert
                  when all deposits are revealed
                    when there is an immature deposit
                      ✓ should revert
                    when all deposits achieved the min age
                      when there is an already swept deposit
                        ✓ should revert
                      when all deposits are not swept yet
                        when there is a deposit with invalid extra info
                          when funding tx hashes don't match
                            ✓ should revert
                          when 20-byte funding output hash does not match
                            ✓ should revert
                          when 32-byte funding output hash does not match
                            ✓ should revert
                        when all deposits extra info are valid
                          when there is a deposit that violates the refund safety margin
                            ✓ should revert
                          when all deposits preserve the refund safety margin
                            when there is a deposit controlled by a different wallet
                              ✓ should revert
                            when all deposits are controlled by the same wallet
                              when there is a deposit targeting a different vault
                                ✓ should revert
                              when all deposits targets the same vault
                                when there are duplicated deposits
                                  ✓ should revert
                                when all deposits are unique
                                  ✓ should succeed
        when wallet state is MovingFunds
          when sweep is below the min size
            ✓ should revert
          when sweep is above the min size
            when sweep exceeds the max size
              ✓ should revert
            when sweep does not exceed the max size
              when deposit extra info length does not match
                ✓ should revert
              when deposit extra info length matches
                when proposed sweep tx fee is invalid
                  when proposed sweep tx fee is zero
                    ✓ should revert
                  when proposed sweep tx fee is greater than the allowed
                    ✓ should revert
                when proposed sweep tx fee is valid
                  when there is a non-revealed deposit
                    ✓ should revert
                  when all deposits are revealed
                    when there is an immature deposit
                      ✓ should revert
                    when all deposits achieved the min age
                      when there is an already swept deposit
                        ✓ should revert
                      when all deposits are not swept yet
                        when there is a deposit with invalid extra info
                          when funding tx hashes don't match
                            ✓ should revert
                          when 20-byte funding output hash does not match
                            ✓ should revert
                          when 32-byte funding output hash does not match
                            ✓ should revert
                        when all deposits extra info are valid
                          when there is a deposit that violates the refund safety margin
                            ✓ should revert
                          when all deposits preserve the refund safety margin
                            when there is a deposit controlled by a different wallet
                              ✓ should revert
                            when all deposits are controlled by the same wallet
                              when there is a deposit targeting a different vault
                                ✓ should revert
                              when all deposits targets the same vault
                                when there are duplicated deposits
                                  ✓ should revert
                                when all deposits are unique
                                  ✓ should succeed
    validateRedemptionProposal
      when wallet is in incorrect state
        when wallet state is Unknown
          ✓ should revert
        when wallet state is Closing
          ✓ should revert
        when wallet state is Closed
          ✓ should revert
        when wallet state is Terminated
          ✓ should revert
      when wallet is in correct state
        when wallet state is Live
          when redemption is below the min size
            ✓ should revert
          when redemption is above the min size
            when redemption exceeds the max size
              ✓ should revert
            when redemption does not exceed the max size
              when proposed redemption tx fee is invalid
                when proposed redemption tx fee is zero
                  ✓ should revert
                when proposed redemption tx fee is greater than the allowed total fee
                  ✓ should revert
              when proposed redemption tx fee is valid
                when there is a non-pending request
                  ✓ should revert
                when all requests are pending
                  when there is an immature request
                    when immaturity is caused by REDEMPTION_REQUEST_MIN_AGE violation
                      ✓ should revert
                    when immaturity is caused by watchtower's delay violation
                      ✓ should revert
                  when all requests achieved the min age
                    when there is a request that violates the timeout safety margin
                      ✓ should revert
                    when all requests preserve the timeout safety margin
                      when there is a request that incurs an unacceptable tx fee share
                        when there is no fee remainder
                          ✓ should revert
                        when there is a fee remainder
                          ✓ should revert
                      when all requests incur an acceptable tx fee share
                        when there are duplicated requests
                          ✓ should revert
                        when all requests are unique
                          when watchtower is not set
                            ✓ should succeed
                          when watchtower is set
                            ✓ should succeed
        when wallet state is MovingFunds
          when redemption is below the min size
            ✓ should revert
          when redemption is above the min size
            when redemption exceeds the max size
              ✓ should revert
            when redemption does not exceed the max size
              when proposed redemption tx fee is invalid
                when proposed redemption tx fee is zero
                  ✓ should revert
                when proposed redemption tx fee is greater than the allowed total fee
                  ✓ should revert
              when proposed redemption tx fee is valid
                when there is a non-pending request
                  ✓ should revert
                when all requests are pending
                  when there is an immature request
                    when immaturity is caused by REDEMPTION_REQUEST_MIN_AGE violation
                      ✓ should revert
                    when immaturity is caused by watchtower's delay violation
                      ✓ should revert
                  when all requests achieved the min age
                    when there is a request that violates the timeout safety margin
                      ✓ should revert
                    when all requests preserve the timeout safety margin
                      when there is a request that incurs an unacceptable tx fee share
                        when there is no fee remainder
                          ✓ should revert
                        when there is a fee remainder
                          ✓ should revert
                      when all requests incur an acceptable tx fee share
                        when there are duplicated requests
                          ✓ should revert
                        when all requests are unique
                          when watchtower is not set
                            ✓ should succeed
                          when watchtower is set
                            ✓ should succeed
    validateMovingFundsProposal
      when wallet's state is not MovingFunds
        when wallet state is Unknown
          ✓ should revert
        when wallet state is Live
          ✓ should revert
        when wallet state is Closing
          ✓ should revert
        when wallet state is Closed
          ✓ should revert
        when wallet state is Terminated
          ✓ should revert
      when wallet's state is MovingFunds
        when moving funds commitment has not been submitted
          ✓ should revert
        when moving funds commitment has been submitted
          when commitment hash does not match target wallets
            ✓ should revert
          when commitment hash matches target wallets
            when no main UTXO is passed
              ✓ should revert
            when the passed main UTXO is incorrect
              ✓ should revert
            when the passed main UTXO is correct
              when source wallet BTC balance is below dust threshold
                ✓ should revert
              when source wallet BTC balance is equal to or greater that dust threshold
                when transaction fee is zero
                  ✓ should revert
                when transaction fee is too high
                  ✓ should revert
                when transaction fee is valid
                  ✓ should pass validation
    validateMovedFundsSweepProposal
      when wallet's state is incorrect
        when wallet state is Unknown
          ✓ should revert
        when wallet state is Closing
          ✓ should revert
        when wallet state is Closed
          ✓ should revert
        when wallet state is Terminated
          ✓ should revert
      when wallet's state is correct
        when wallet state is Live
          when moved funds sweep request's state is not Pending
            ✓ should revert
          when moved funds sweep request's state is Pending
            when moved funds sweep request does not belong to the wallet
              ✓ should revert
            when moved funds sweep request belongs to the wallet
              when transaction fee is zero
                ✓ should revert
              when transaction fee is too high
                ✓ should revert
              when transaction fee is valid
                ✓ should pass validation
        when wallet state is MovingFunds
          when moved funds sweep request's state is not Pending
            ✓ should revert
          when moved funds sweep request's state is Pending
            when moved funds sweep request does not belong to the wallet
              ✓ should revert
            when moved funds sweep request belongs to the wallet
              when transaction fee is zero
                ✓ should revert
              when transaction fee is too high
                ✓ should revert
              when transaction fee is valid
                ✓ should pass validation
    validateHeartbeatProposal
      when message is not valid
        ✓ should revert
      when message is valid
        ✓ should succeed

  L2TBTC
    ✓ should have a name
    ✓ should have a symbol
    ✓ should have 18 decimals
    addMinter
      when called not by the owner
        ✓ should revert
      when called by the owner
        when address is a new minter
          ✓ should add address as a minter
          ✓ should emit an event
        when address is already a minter
          ✓ should revert
        when there are multiple minters
          ✓ should add them into the list
    removeMinter
      when called not by the owner
        ✓ should revert
      when called by the owner
        when address is not a minter
          ✓ should revert
        when a minter address is removed
          ✓ should take minter role from the address
          ✓ should emit an event
        when there are multiple minters
          when deleting the first minter
            ✓ should update the minters list
          when deleting the last minter
            ✓ should update the minters list
          when deleting minter from the middle of the list
            ✓ should update the minters list
    addGuardian
      when called not by the owner
        ✓ should revert
      when called by the owner
        when address is a new guardian
          ✓ should add address as a guardian
          ✓ should emit an event
        when address is already a guardian
          ✓ should revert
        when there are multiple guardians
          ✓ should add them into the list
    removeGuardian
      when called not by the owner
        ✓ should revert
      when called by the owner
        when address is not a guardian
          ✓ should revert
        when a guardian address is removed
          ✓ should take guardian role from the address
          ✓ should emit an event
        when there are multiple guardians
          when deleting the first guardian
            ✓ should update the guardians list
          when deleting the last guardian
            ✓ should update the guardians list
          when deleting guardian from the middle of the list
            ✓ should update the guardians list
    recoverERC20
      when called not by the owner
        ✓ should revert
      when called by the contract owner
        ✓ should transfer tokens to the recipient
    recoverERC721
      when called not by the owner
        ✓ should revert
      when called by the owner
        ✓ transfers token to the recipient
    pause
      when called not by a guardian
        ✓ should revert
      when called by a guardian
        ✓ should emit Paused event
        ✓ should pause mint functionality
        ✓ should pause burn functionality
        ✓ should pause burnFrom functionality
        ✓ should not pause transfers
    unpause
      when called not by the owner
        ✓ should revert
      when called by the owner
        ✓ should emit Unpaused event
        ✓ should unpause mint functionality
        ✓ should unpause burn functionality
        ✓ should unpause burnFrom functionality
    mint
      when called not by a minter
        ✓ should revert
      when called by a minter
        for a zero account
          ✓ should revert
        for a non-zero account
          ✓ should increment totalSupply
          ✓ should increment recipient balance
          ✓ should emit Transfer event
    totalSupply
      ✓ should return the total amount of tokens
    DOMAIN_SEPARATOR
      ✓ should be keccak256 of EIP712 domain struct
    balanceOf
      ✓ should return the total amount of tokens
    transfer
      ✓ should transfer the requested amount
      ✓ should emit a transfer event
    transferFrom
      ✓ should transfer the requested amount
      ✓ should emit a transfer event
    approve
      ✓ should approve the requested amount
      ✓ should emit an approval event
    burn
      ✓ should decrement account's balance
      ✓ should emit Transfer event
    burnFrom
      ✓ should decrement account's balance
      ✓ should decrement allowance
      ✓ should emit Transfer event
    permit
      ✓ should emit an approval event
      ✓ should approve the requested amount

  L2WormholeGateway
    initialization
      ✓ should set the wormhole bridge address
      ✓ should set the wormhole bridge token address
      ✓ should set the canonical tBTC address
    receiveTbtc
      when receiver is the zero address
        ✓ should revert
      when the transferred amount is zero
        ✓ should revert
      when receiver is non-zero address
        when the minting limit was not reached
          ✓ should transfer wormhole tBTC to the contract
          ✓ should mint tBTC to the receiver
          ✓ should complete transfer with the bridge
          ✓ should emit the WormholeTbtcReceived event
          ✓ should increase the minted amount counter
        when the minting limit was reached
          ✓ should transfer wormhole tBTC to the contract
          ✓ should mint tBTC to the receiver before reaching the minting limit
          ✓ should send wormhole tBTC to the receiver after reaching the minting limit
          ✓ should increase the minted amount counter
    sendTbtc
      when there is not enough wormhole tBTC
        ✓ should revert
      when there is enough wormhole tBTC
        when the receiver address is zero
          ✓ should revert
        when the amount is zero
          ✓ should revert
        when the receiver address and amount are non-zero
          when the target chain has no tBTC gateway
            ✓ should burn canonical tBTC from the caller
            ✓ should approve burned amount of wormhole tBTC to the bridge
            ✓ should sent tokens through the bridge
            ✓ should emit the WormholeTbtcSent event
          when the target chain has a tBTC gateway
            ✓ should burn canonical tBTC from the caller
            ✓ should approve burned amount of wormhole tBTC to the bridge
            ✓ should sent tokens through the bridge
            ✓ should emit the WormholeTbtcSent event
          when the amount is below dust
            ✓ should revert
          when the amount is just above the dust
            ✓ should burn canonical tBTC from the caller
            ✓ should approve burned amount of wormhole tBTC to the bridge
            ✓ should sent the entire amount through the bridge
          when the amount has a small dust
            ✓ should burn canonical tBTC from the caller after dropping dust
            ✓ should approve burned amount of wormhole tBTC to the bridge after dropping dust
            ✓ should drop the dust before sending over the bridge
          when the amount has a lot of dust
            ✓ should burn canonical tBTC from the caller after dropping dust
            ✓ should approve burned amount of wormhole tBTC to the bridge after dropping dust
            ✓ should drop the dust before sending over the bridge
    updateGatewayAddress
      when called by a third party
        ✓ should revert
      when called by the governance
        ✓ should update the gateway address
        ✓ should emit the GatewayAddressUpdated event
      when disabling gateway
        ✓ should update the gateway address
        ✓ should emit the GatewayAddressUpdated event
    updateMintingLimit
      when called by a third party
        ✓ should revert
      when called by the governance
        ✓ should update the minting limit
        ✓ should emit the MintingLimitUpdated event
    toWormholeAddress
      ✓ should convert Ethereum address into Wormhole format
    fromWormholeAddress
      ✓ should convert Wormhole address into Ethereum format

  StarkNetBitcoinDepositor - deposit() Implementation
    _transferTbtc Implementation

      26) should call deposit() instead of depositWithMessage()
      ✓ should not create empty message array
    Gas Optimization Verification

      27) should reduce gas usage by ~2000
    Functionality Preservation
      ✓ should maintain same functionality with deposit()
    Direct Contract Testing
      ✓ should demonstrate deposit() function is used in implementation

  StarkNetBitcoinDepositor - Dynamic Fee Estimation
    Dynamic Fee Implementation
      quoteFinalizeDepositDynamic function
        ✓ should exist and be callable
        ✓ should return dynamic fee from StarkGate
      Fee Buffer Mechanism
        ✓ should get fee from StarkGate

  StarkNetBitcoinDepositor - Dynamic Fee Estimation
    ✓ should exist and be callable

  StarkNetBitcoinDepositor - Integration Tests
    End-to-End Deposit Flow
      ✓ should handle complete deposit flow from initialization to bridging
      ✓ should handle multiple concurrent deposits
      ✓ should handle deposits with different amounts correctly
    Failure Recovery
      ✓ should handle StarkGate bridge failures gracefully
      ✓ should prevent double finalization of same deposit
      ✓ should handle insufficient tBTC balance scenarios
    Performance Under Load
      ✓ should handle rapid sequential deposits efficiently
      ✓ should maintain gas efficiency across multiple deposits
    Real Gas Cost Analysis
      ✓ should provide accurate gas cost breakdown

  StarkNetBitcoinDepositor - Security & Edge Cases
    ✓ should deploy and initialize correctly

  StarkNet Bitcoin Depositor - StarkGate Integration Tests
    StarkGate Bridge Function Analysis
      ✓ should measure gas usage for depositWithMessage with empty array
      ✓ should document StarkGate interface research findings
      ✓ should validate empty message array handling
    StarkGate Fee Analysis
      ✓ should analyze L1->L2 fee structure
    Research Recommendations
      ✓ should document final recommendations for P-002

  StarkNetBitcoinDepositor
    Initialization
      ✓ should initialize with valid parameters
      ✓ should emit initialization event
      ✓ should revert with zero tBTC Bridge address
      ✓ should revert with zero tBTC Vault address
      ✓ should revert with zero StarkGate bridge address
    initializeDeposit
      ✓ should initialize a new deposit correctly
      ✓ should revert with zero L2 deposit owner
      ✓ should revert when vault address mismatch
    finalizeDeposit
      ✓ should finalize deposit successfully
      ✓ should revert with insufficient fee
      ✓ should call StarkGate bridge with correct parameters
      ✓ should approve StarkGate bridge correctly

  L1BTCDepositorWormhole
    attachL2BtcDepositor
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        when the L2BTCDepositorWormhole is already attached
          ✓ should revert
        when the L2BTCDepositorWormhole is not attached
          when new L2BTCDepositorWormhole is zero
            ✓ should revert
          when new L2BTCDepositorWormhole is non-zero
            ✓ should set the l2BtcDepositor address properly
    updateReimbursementPool
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should set the reimbursementPool address properly
        ✓ should emit ReimbursementPoolUpdated event
    updateL2FinalizeDepositGasLimit
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should set the gas limit properly
        ✓ should emit L2FinalizeDepositGasLimitUpdated event
    updateGasOffsetParameters
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should set the gas offset params properly
        ✓ should emit GasOffsetParametersUpdated event
    updateReimbursementAuthorization
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should set the authorization properly
        ✓ should emit ReimbursementAuthorizationUpdated event
    initializeDeposit
      when the L2 deposit owner is zero
        ✓ should revert
      when the L2 deposit owner is non-zero
        when the requested vault is not TBTCVault
          ✓ should revert
        when the requested vault is TBTCVault
          when the deposit state is wrong
            when the deposit state is Initialized
              ✓ should revert
            when the deposit state is Finalized
              ✓ should revert
          when the deposit state is Unknown
            when the reimbursement pool is not set
              ✓ should reveal the deposit to the Bridge
              ✓ should set the deposit state to Initialized
              ✓ should emit DepositInitialized event
              ✓ should not store the deferred gas reimbursement
            when the reimbursement pool is set and caller is authorized
              ✓ should reveal the deposit to the Bridge
              ✓ should set the deposit state to Initialized
              ✓ should emit DepositInitialized event
              ✓ should store the deferred gas reimbursement
            when the reimbursement pool is set and caller is not authorized
              ✓ should reveal the deposit to the Bridge
              ✓ should set the deposit state to Initialized
              ✓ should emit DepositInitialized event
              ✓ should not store the deferred gas reimbursement
    finalizeDeposit
      when the deposit state is wrong
        when the deposit state is Unknown
          ✓ should revert
        when the deposit state is Finalized
          ✓ should revert
      when the deposit state is Initialized
        when the deposit is not finalized by the Bridge
          ✓ should revert
        when the deposit is finalized by the Bridge
          when normalized amount is too low to bridge
            ✓ should revert
          when normalized amount is not too low to bridge
            when payment for Wormhole Relayer is too low
              ✓ should revert
            when payment for Wormhole Relayer is not too low
              when the reimbursement pool is not set
                ✓ should set the deposit state to Finalized
                ✓ should emit DepositFinalized event
                ✓ should increase TBTC allowance for Wormhole Token Bridge
                ✓ should create a proper Wormhole token transfer
                ✓ should send transfer VAA to L2
                ✓ should not call the reimbursement pool
              when the reimbursement pool is set and caller is authorized
                ✓ should set the deposit state to Finalized
                ✓ should emit DepositFinalized event
                ✓ should increase TBTC allowance for Wormhole Token Bridge
                ✓ should create a proper Wormhole token transfer
                ✓ should send transfer VAA to L2
                ✓ should pay out proper reimbursements
              when the reimbursement pool is set and caller is not authorized
                ✓ should set the deposit state to Finalized
                ✓ should emit DepositFinalized event
                ✓ should increase TBTC allowance for Wormhole Token Bridge
                ✓ should create a proper Wormhole token transfer
                ✓ should send transfer VAA to L2
                ✓ should pay out proper reimbursements
    quoteFinalizeDeposit
      ✓ should return the correct cost
    when reimburseTxMaxFee is true
      ✓ should add depositTxMaxFee back to the minted TBTC amount

  BTCDepositorWormhole
    updateReimbursementPool
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should set the reimbursementPool address properly
        ✓ should emit ReimbursementPoolUpdated event
    updateGasOffsetParameters
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should set the gas offset params properly
        ✓ should emit GasOffsetParametersUpdated event
    updateReimbursementAuthorization
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        ✓ should set the authorization properly
        ✓ should emit ReimbursementAuthorizationUpdated event
    initializeDeposit
      when the destination chain deposit owner is zero
        ✓ should revert
      when the destination chain deposit owner is non-zero
        when the requested vault is not TBTCVault
          ✓ should revert
        when the requested vault is TBTCVault
          when the deposit state is wrong
            when the deposit state is Initialized
              ✓ should revert
            when the deposit state is Finalized
              ✓ should revert
          when the deposit state is Unknown
            when the reimbursement pool is not set
              ✓ should reveal the deposit to the Bridge
              ✓ should set the deposit state to Initialized
              ✓ should emit DepositInitialized event
              ✓ should not store the deferred gas reimbursement
            when the reimbursement pool is set and caller is authorized
              ✓ should reveal the deposit to the Bridge
              ✓ should set the deposit state to Initialized
              ✓ should emit DepositInitialized event
              ✓ should store the deferred gas reimbursement
            when the reimbursement pool is set and caller is not authorized
              ✓ should reveal the deposit to the Bridge
              ✓ should set the deposit state to Initialized
              ✓ should emit DepositInitialized event
              ✓ should not store the deferred gas reimbursement
    finalizeDeposit
      when the deposit state is wrong
        when the deposit state is Unknown
          ✓ should revert
        when the deposit state is Finalized
          ✓ should revert
      when the deposit state is Initialized
        when the deposit is not finalized by the Bridge
          ✓ should revert
        when the deposit is finalized by the Bridge
          when normalized amount is too low to bridge
            ✓ should revert
          when normalized amount is not too low to bridge
            when payment for Wormhole Relayer is too low
              ✓ should revert
            when payment for Wormhole Relayer is not too low
              when the reimbursement pool is not set
                ✓ should set the deposit state to Finalized
                ✓ should emit DepositFinalized event
                ✓ should increase TBTC allowance for Wormhole Token Bridge
                ✓ should create a proper Wormhole token transfer
                ✓ should not call the reimbursement pool
              when the reimbursement pool is set and caller is authorized
                ✓ should set the deposit state to Finalized
                ✓ should emit DepositFinalized event
                ✓ should increase TBTC allowance for Wormhole Token Bridge
                ✓ should create a proper Wormhole token transfer
                ✓ should pay out proper reimbursements
              when the reimbursement pool is set and caller is not authorized
                ✓ should set the deposit state to Finalized
                ✓ should emit DepositFinalized event
                ✓ should increase TBTC allowance for Wormhole Token Bridge
                ✓ should create a proper Wormhole token transfer
                ✓ should pay out proper reimbursements
    quoteFinalizeDeposit
      ✓ should return the correct cost
    when reimburseTxMaxFee is true
      ✓ should add depositTxMaxFee back to the minted TBTC amount

  L1BTCRedeemerWormhole (using Mock)
L2BTCRedeemerWormhole owner after deploy: 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266, deployer: 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266
    initialization
      ✓ should set the Bridge address
      ✓ should set the Wormhole Token Bridge address
      ✓ should set the tBTC token address
      ✓ should set the bank address
      ✓ should set the owner to governance
      ✓ should set the default request redemption gas offset
      ✓ should initialize with no reimbursement pool
    updateGasOffsetParameters
      when called by a non-owner
        ✓ should revert
      when called by the owner
        ✓ should update the gas offset
        ✓ should emit GasOffsetParametersUpdated event
      when setting gas offset to zero
        ✓ should allow setting gas offset to zero
      when setting gas offset to a very high value
        ✓ should allow setting high gas offset
    updateReimbursementAuthorization
      when called by a non-owner
        ✓ should revert
      when called by the owner
        ✓ should update the authorization
        ✓ should emit ReimbursementAuthorizationUpdated event
      when revoking authorization
        ✓ should revoke the authorization
        ✓ should emit ReimbursementAuthorizationUpdated event for revocation
      when authorizing multiple relayers
        ✓ should track multiple authorizations correctly
    updateReimbursementPool
      when called by a non-owner
        ✓ should revert
      when called by the owner
        ✓ should update the reimbursement pool
        ✓ should emit ReimbursementPoolUpdated event
      when removing reimbursement pool
        ✓ should allow removing the reimbursement pool
    requestRedemption
      when redemption is successful
        ✓ should complete the transfer with Wormhole bridge
        ✓ should call requestRedemption on the Bridge and emit RedemptionRequestedMock
        ✓ should emit RedemptionRequested event from L1BTCRedeemerWormhole
        ✓ should transfer tBTC tokens to the contract
      when using different output script types
        when using P2WPKH output script
          ✓ should process P2WPKH redemption successfully
        when using P2SH output script
          ✓ should process P2SH redemption successfully
        when using P2WSH output script
          ✓ should process P2WSH redemption successfully
      when using different amounts
        when using a smaller amount
          ✓ should process small amount redemption
        when using a large amount
          ✓ should process large amount redemption
      when authorized for reimbursement
        ✓ should reimburse gas
        ✓ should calculate reimbursement with gas offset
      when not authorized for reimbursement
        ✓ should not reimburse gas
      when reimbursement pool is not set
        ✓ should not reimburse gas
      when gas offset is updated mid-transaction
        ✓ should use the updated gas offset
      when Wormhole bridge transfer fails
        ✓ should revert
      when Bridge redemption fails (e.g., already requested)
        ✓ should revert
      when multiple redemptions in sequence
        ✓ should handle multiple redemptions
      when balance changes during redemption
        ✓ should handle balance correctly
      edge cases
        when VM is empty
          ✓ should handle empty VM
        when mainUtxo has minimum values
          ✓ should handle minimum UTXO values
        when mainUtxo has maximum values
          ✓ should handle maximum UTXO values
    setMockRedemptionAmountTBTC
      when setting a new mock amount
        ✓ should update the mock redemption amount
        ✓ should use the new amount in redemptions
      when setting amount to zero
        ✓ should fallback to default amount in redemptions
    gas estimation scenarios
      ✓ should estimate gas for redemption without reimbursement
      ✓ should estimate gas for redemption with reimbursement

  L2BTCRedeemerWormhole
L2BTCRedeemerWormhole owner after deploy: 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266, deployer: 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266
    initialization
      ✓ should set the tBTC token address
      ✓ should set the gateway address
      ✓ should set the L1 BTC Redeemer Wormhole address
      ✓ should set the default minimum redemption amount
      ✓ should set the owner to governance
      when user has insufficient tBTC balance
        ✓ should revert
    updateMinimumRedemptionAmount
      when the caller is not the owner
        ✓ should revert
      when the new minimum amount is zero
        ✓ should revert
      when the caller is the owner and amount is valid
        ✓ should update the minimumRedemptionAmount
        ✓ should emit MinimumRedemptionAmountUpdated event
    requestRedemption
      when redemption is successful
        ✓ should transfer tBTC from user to L2BTCRedeemerWormhole contract
        ✓ should approve L2WormholeGateway to spend tBTC from L2BTCRedeemerWormhole
        ✓ should call gateway.sendTbtcWithPayloadToEthereum with correct parameters
        ✓ should emit RedemptionRequestedOnL2 event
        ✓ should return the sequence number from the gateway
        ✓ should increase the redeemedAmount
      when redeemerOutputScript is P2WPKH (successful)
        ✓ should transfer tBTC from user to L2BTCRedeemerWormhole contract
        ✓ should call gateway.sendTbtcWithPayloadToEthereum with P2WPKH script
        ✓ should emit RedemptionRequestedOnL2 event with P2WPKH script
      when redeemerOutputScript is P2SH (successful)
        ✓ should transfer tBTC from user to L2BTCRedeemerWormhole contract
        ✓ should call gateway.sendTbtcWithPayloadToEthereum with P2SH script
        ✓ should emit RedemptionRequestedOnL2 event with P2SH script
      when redeemerOutputScript is P2WSH (should be successful if BTCUtils truncates/handles 32-byte hash)
        ✓ should transfer tBTC from user to L2BTCRedeemerWormhole contract
        ✓ should call gateway.sendTbtcWithPayloadToEthereum with P2WSH script
        ✓ should emit RedemptionRequestedOnL2 event with P2WSH script
      when redeemerOutputScript is invalid (non-standard)
        ✓ should revert
      when amount is less than minimumRedemptionAmount
        ✓ should revert
      when normalized amount is zero (dust)
        ✓ should revert
      when user has not approved L2BTCRedeemerWormhole
        ✓ should revert
      when gateway.sendTbtcWithPayloadToEthereum reverts
        ✓ should revert

  L2BTCDepositorWormhole
    attachL1BtcDepositor
      when the caller is not the owner
        ✓ should revert
      when the caller is the owner
        when the L1BTCcoinDepositor is already attached
          ✓ should revert
        when the L1BTCDepositorWormhole is not attached
          when new L1BTCDepositorWormhole is zero
            ✓ should revert
          when new L1BTCDepositorWormhole is non-zero
            ✓ should set the l1BtcDepositor address properly
    initializeDeposit
      ✓ should emit DepositInitialized event
    receiveWormholeMessages
      when the caller is not the WormholeRelayer
        ✓ should revert
      when the caller is the WormholeRelayer
        when the source chain is not the expected L1
          ✓ should revert
        when the source chain is the expected L1
          when the source address is not the L1BTCDepositorWormhole
            ✓ should revert
          when the source address is the L1BTCDepositorWormhole
            when the number of additional VAAs is not 1
              ✓ should revert
            when the number of additional VAAs is 1
              ✓ should pass the VAA to the L2WormholeGateway

  v1 System Deployment Tests
    v1 System Deployment (Using Fixtures)
      ✓ should verify account control deployment scripts exist
      ✓ should confirm v1 doesn't include automated framework contracts
      ✓ should verify v1 core contracts structure
    v1 Contract Factory Tests
Failed to get factory for QCRedeemer: The contract QCRedeemer is missing links for the following libraries:
* contracts/account-control/libraries/QCRedeemerSPV.sol:QCRedeemerSPV

Learn more about linking contracts at https://hardhat.org/plugins/nomiclabs-hardhat-ethers.html#library-linking


      28) should be able to get contract factories for v1 contracts
      ✓ should fail to get factories for non-existent automation contracts
    v1 Deployment Script Dependencies
      ✓ should identify problematic TBTC dependencies
      ✓ should verify deployment tags are properly structured
    v1 Architecture Validation
      ✓ should confirm simplified watchdog architecture
      ✓ should validate v1 contract relationships

  Integration Test - Full flow
    Check deposit and redemption flow
      when wallet is created
        when a deposit is revealed
          - should create a deposit
        when the deposit sweep proof is submitted
          - should mint TBTC tokens for the depositor
          - should increase the balance of vault in the bank
          - should update the main UTXO of the wallet
        when a redemption is requested
          - should create a pending redemption request
          - should increase the pending redemptions value of the wallet
          - should increase the balance of bridge in the bank
        when the redemption proof is submitted
          - should zero the pending redemptions value of the wallet
          - should zero the balance of bridge in the bank
          - should update the main UTXO of the wallet

  Integration Test - Slashing
    notifyFraudChallengeDefeatTimeout
      when wallet is created
        when a fraud is reported
          - should slash wallet members
          - should close the wallet in the wallet registry
          - should terminate the wallet in the bridge
          - should consume around 3 100 000 gas for Bridge.notifyMovingFundsTimeoutTx transaction
    notifyRedemptionTimeout
      when wallet is created
        when a redemption timeout is reported
          - should slash wallet members
          - should not close the wallet in the wallet registry
          - should transition the wallet in the bridge to the MovingFunds state
          - should consume around 3 150 000 gas for Bridge.notifyRedemptionTimeout transaction
    notifyMovingFundsTimeout
      when wallet is created
        when moving funds timeout is reported
          - should slash wallet members
          - should close the wallet in the wallet registry
          - should terminate the wallet in the bridge
          - should consume around 3 100 000 gas for Bridge.notifyMovingFundsTimeoutTx transaction

  Integration Test - Wallet Creation
    new wallet creation (happy path)
      - should register a new wallet in the WalletRegistry
      - should register a new wallet details in the Bridge
      - should register a new wallet as active in the Bridge
      - should consume around 94 000 gas for Bridge.requestNewWallet transaction
      - should consume around 341 000 gas for WalletRegistry.approveDkgResult transaction

  Message Signing Integration Flows

    29) "before all" hook in "Message Signing Integration Flows"

  SPV Library Integration

    30) "before all" hook in "SPV Library Integration"

  AbstractBTCDepositor
    _initializeDeposit
      when revealed vault does not match
        ✓ should revert
      when revealed vault matches
        when deposit is rejected by the Bridge
          ✓ should revert
        when deposit is accepted by the Bridge
          ✓ should reveal the deposit to the Bridge
          ✓ should return proper values
    _finalizeDeposit
      when deposit is not initialized
        ✓ should revert
      when deposit is already finalized
        ✓ should not revert
      when deposit is initialized but not finalized yet
        when deposit is not finalized by the Bridge
          ✓ should revert
        when deposit is finalized by the Bridge
          when the deposit is swept
            ✓ should return proper values
          when the deposit is optimistically minted
            ✓ should return proper values
    _calculateTbtcAmount
      when all fees are non-zero
        ✓ should return the correct amount
      when all fees are zero
        ✓ should return the correct amount
      when one of the fees is zero
        when treasury fee is zero
          ✓ should return the correct amount
        when optimistic minting fee is zero
          ✓ should return the correct amount
        when transaction max fee is zero
          ✓ should return the correct amount
    _minDepositAmount
      ✓ returns value in TBTC token precision

  AbstractBTCRedeemer
    initialize
      ✓ should initialize with valid parameters
      ✓ should revert if _thresholdBridge is zero address
      ✓ should revert if _tbtcToken is zero address
      ✓ should revert if _bank is zero address
      ✓ should revert on re-initialization
    _getRedemptionKey
      ✓ should calculate the correct redemption key
    _requestRedemption
      when redemption is rejected by the Bridge
        ✓ should revert
      when redemption is accepted by the Bridge
        ✓ should request redemption from the Bridge
        ✓ should return proper values
        ✓ should increase bank allowance for the bridge
    _calculateTbtcAmount
      when all fees are non-zero
        ✓ should return the correct amount
      when treasury fee is zero
        ✓ should return the correct amount
      when transaction max fee is zero
        ✓ should return the correct amount
      when all fees are zero
        ✓ should return the correct amount
      when redemption amount is too low (leads to underflow)
        ✓ should revert if (amount - treasuryFee) < txMaxFee
        ✓ should revert if amount barely covers treasuryFee but not txMaxFee
        ✓ should return 0 if (amount - treasuryFee) == txMaxFee
    rescueTbtc
      when caller is not the owner
        ✓ should revert
      when recipient is the zero address
        ✓ should revert
      when contract has insufficient tBTC balance
        ✓ should revert
      when rescue is successful
        ✓ should transfer tBTC from contract to recipient
        ✓ should emit Transfer event from tbtcToken
      when rescuing zero tokens
        ✓ should succeed and transfer zero tokens
      when rescuing exact available balance
        ✓ should succeed and leave contract with zero balance

  MaintainerProxy

    31) "before all" hook in "MaintainerProxy"

  LightRelay
    genesis
      when called with valid inputs
        ✓ should record the relay as ready for use
        ✓ should emit the Genesis event
        ✓ should record the genesis epoch difficulty correctly
      when called with invalid block height
        ✓ should revert
      when called with invalid header data
        ✓ should revert
      when called with excessive proof length
        ✓ should revert
      when called with zero proof length
        ✓ should revert
      when called by anyone other than governance
        ✓ should revert
      when called more than once
        ✓ should revert
    setProofLength
      before genesis
        ✓ should revert
      after genesis
        when called correctly
          ✓ should store the new proof length
          ✓ should emit the ProofLengthChanged event
        when called with excessive proof length
          ✓ should revert
        when called with zero proof length
          ✓ should revert
        when called with unchanged proof length
          ✓ should revert
        when called by anyone other than governance
          ✓ should revert
    authorizations
      authorization status
        ✓ should start at false
        when set by governance
          ✓ should be updated
          ✓ should emit an event
        when set by someone other than governance
          ✓ should revert
        when unset by governance
          ✓ should be updated
          ✓ should emit an event
      submitter authorization
        ✓ should start at false
        when set by governance
          ✓ should be updated
          ✓ should emit an event
        when set by someone other than governance
          ✓ should revert
        when unset by governance
          ✓ should be updated
          ✓ should emit an event
    retarget
      when called before genesis
        ✓ should revert
      after genesis (epoch 274)
        when called correctly
          ✓ should store the new difficulty
          ✓ should emit the Retarget event
        with incorrect number of headers
          ✓ should revert
        with too few headers before retarget
          ✓ should revert
        with too few headers after retarget
          ✓ should revert
        with proof length 9
          ✓ should store the new difficulty
          ✓ should emit the Retarget event
        with appropriate authorisation
          ✓ should store the new difficulty
          ✓ should emit the Retarget event
        without appropriate authorisation
          ✓ should revert
      after genesis (invalid)
        ✓ should reject chains with invalid difficulty
      after genesis (long chain)
        with proof length 6
          ✓ should store the new difficulty
          ✓ should emit the Retarget event
        with proof length 50
          ✓ should store the new difficulty
          ✓ should emit the Retarget event
    validateChain
      when called before genesis
        ✓ should revert
      when called after genesis (epoch 274)
        ✓ should accept valid header chains
        ✓ should accept short header chains
        ✓ should accept long header chains
        ✓ should reject single headers
        ✓ should reject header chains with an unknown retarget
        ✓ should reject header chains in a future epoch
      when called after genesis (epoch 275)
        ✓ should accept valid header chains
        ✓ should reject header chains partially in a past epoch
        ✓ should reject header chains fully in a past epoch
      when called after a retarget
        in the genesis epoch
          ✓ should accept valid header chains
        over the retarget
          ✓ should accept valid header chains (3 before, 1 after)
          ✓ should accept valid header chains (2 before, 2 after)
          ✓ should accept valid header chains (1 before, 3 after)
        in the new epoch
          ✓ should accept valid header chains
      with chain reorgs
        valid chains
          ✓ should be accepted
        invalid chains
          ✓ should be rejected
      gas costs
        with proof length 6
          ✓ should accept valid header chains
        with proof length 18
          ✓ should accept valid header chains
    getBlockDifficulty
      when called before genesis
        ✓ should revert
      when called after genesis
        ✓ should return the difficulty for the first block of the epoch
        ✓ should return the difficulty for the last block of the epoch
        ✓ should revert for blocks before genesis
        ✓ should revert for blocks after the latest epoch
      when called after a retarget
        ✓ should return the difficulty for the first block of the genesis epoch
        ✓ should return the difficulty for the last block of the genesis epoch
        ✓ should return the difficulty for the first block of the next epoch
        ✓ should return the difficulty for the last block of the next epoch
        ✓ should revert for blocks before genesis
        ✓ should revert for blocks after the latest epoch
    getEpochDifficulty
      when called before genesis
        ✓ should revert
      when called after genesis
        ✓ should return the difficulty for the genesis epoch
        ✓ should revert for epochs before genesis
        ✓ should revert for unproven epochs
      when called after a retarget
        ✓ should return the difficulty for the genesis epoch
        ✓ should return the difficulty for the next epoch
        ✓ should revert for epochs before genesis
        ✓ should revert for unproven epochs
    getRelayRange
      when called before genesis
        ✓ should return nonsense
      when called after genesis
        ✓ should return a single epoch
      when called after a retarget
        ✓ should return two epochs
    getCurrentEpochDifficulty
      when called before genesis
        ✓ should return zero
      when called after genesis
        ✓ should return the difficulty for the genesis epoch
      when called after a retarget
        ✓ should return the difficulty for the next epoch
    getPrevEpochDifficulty
      when called before genesis
        ✓ should return zero
      when called after genesis
        ✓ should return zero
      when called after a retarget
        ✓ should return the difficulty for the genesis epoch
    getCurrentAndPrevEpochDifficulty
      when called before genesis
        ✓ should return zero for both
      when called after genesis
        ✓ should return current difficulty, and zero for previous
      when called after a retarget
        ✓ should return current and previous difficulty

  LightRelayMaintainerProxy

    32) "before all" hook in "LightRelayMaintainerProxy"

  SPV Security Tests

    33) "before all" hook in "SPV Security Tests"

  SystemState Security Tests
    Pause Mechanism Security
      Access Control
        ✓ should only allow EMERGENCY_ROLE to pause operations
        ✓ should only allow EMERGENCY_ROLE to unpause operations
      Pause State Management
        ✓ should prevent double pausing
        ✓ should prevent unpausing when not paused

        34) should track pause timestamps
        ✓ should handle multiple pause types independently
      Emergency Pause Duration
        ✓ should enforce emergency pause duration limits

        35) should track pause duration for monitoring
      Concurrent Pause Attempts
        ✓ should handle concurrent pause attempts safely
    Parameter Validation
      Mint Amount Parameters
        ✓ should validate min/max relationship
        ✓ should validate max >= min when setting max
        ✓ should prevent zero amounts
      Timeout Parameters
        ✓ should enforce redemption timeout limits
        ✓ should prevent zero timeout
      Threshold Parameters
        ✓ should enforce stale threshold limits
        ✓ should validate failure threshold
      Collateral Ratio
        ✓ should enforce collateral ratio bounds
    Emergency Council

      36) should only allow PARAMETER_ADMIN to set emergency council
      ✓ should prevent setting zero address as emergency council

      37) should emit event when setting emergency council
    Parameter Update Edge Cases
      ✓ should handle parameter updates at boundaries
      ✓ should handle rapid parameter updates
      ✓ should maintain parameter consistency across updates
    View Function Security
      ✓ should properly expose pause state
      ✓ should revert operations when paused
      ✓ should expose all parameters correctly
    Initialization Security

      38) should initialize with secure defaults
      ✓ should not be paused on deployment

  DonationVault
    constructor
      when called with a 0-address bank
        ✓ should revert
      when called with correct parameters
        ✓ should set the Bank field
    donate
      when caller has not enough balance in the bank
        ✓ should revert
      when vault does not have enough allowance for caller's balance
        ✓ should revert
      when called with correct parameters
        ✓ should decrease donor's balance
        ✓ should not increase vault's balance
        ✓ should emit BalanceDecreased event
        ✓ should emit DonationReceived event
    receiveBalanceApproval
      when called not by the bank
        ✓ should revert
      when caller has not enough balance in the bank
        ✓ should revert
      when called with correct parameters
        ✓ should decrease donor's balance
        ✓ should not increase vault's balance
        ✓ should emit BalanceDecreased event
        ✓ should emit DonationReceived event
    receiveBalanceIncrease
      when called not by the bank
        ✓ should revert
      when called with no depositors
        ✓ should revert
      when called with correct parameters
        ✓ should not increase depositors' balances
        ✓ should not increase vault's balance
        ✓ should emit BalanceDecreased event
        ✓ should emit DonationReceived event

  TBTCVault - OptimisticMinting
    requestOptimisticMint
      when called not by a minter
        ✓ should revert
      when called by a minter
        when optimistic minting is paused
          ✓ should revert
        when optimistic minting has been already requested
          ✓ should revert
        when the deposit has not been revealed
          ✓ should revert
        when the deposit has been revealed
          when the deposit has been swept
            ✓ should revert
          when the deposit is targeted to another vault
            ✓ should revert
          when all conditions are met
            ✓ should request optimistic minting
            ✓ should emit an event
    finalizeOptimisticMint
      when called not by a minter
        ✓ should revert
      when called by a minter
        when optimistic minting is paused
          ✓ should revert
        when minting has not been requested
          ✓ should revert
        when the minting delay has not passed yet
          ✓ should revert
        when requested minting has been already finalized
          ✓ should revert
        when the deposit has been already swept
          ✓ should revert
        when all conditions are met
          when fees are non-zero
            ✓ should send optimistic mint fee to treasury
            ✓ should mint TBTC to depositor
            ✓ should incur optimistic mint debt
            ✓ should mark the request as finalized
            ✓ should emit an event
          when the optimistic minting fee is zero
            ✓ should send no optimistic mint fee to treasury
            ✓ should mint TBTC to depositor
            ✓ should incur optimistic mint debt
            ✓ should mark the request as finalized
            ✓ should emit an event
          when the bridge deposit treasury fee is zero
            ✓ should send optimistic mint fee to treasury
            ✓ should mint TBTC to depositor
            ✓ should incur optimistic mint debt
            ✓ should mark the request as finalized
            ✓ should emit an event
          when both fees are zero
            ✓ should mint TBTC to depositor
            ✓ should incur optimistic mint debt
            ✓ should mark the request as finalized
            ✓ should emit an event
    cancelOptimisticMint
      when called not by a guardian
        ✓ should revert
      when called by a guardian
        when minting has not been requested
          ✓ should revert
        when requested minting has been finalized
          ✓ should revert
        when requested minting has not been finalized
          ✓ should cancel optimistic minting
          ✓ should emit an event
    addMinter
      when called not by the governance
        ✓ should revert
      when called by the governance
        when address is not a minter
          ✓ should add address as a minter
          ✓ should emit an event
        when address is a minter
          ✓ should revert
        when there are multiple minters
          ✓ should add them into the list
    removeMinter
      when called not by the governance or a guardian
        ✓ should revert
      when called by the governance
        when address is a minter
          ✓ should take minter role from the address
          ✓ should emit an event
        when address is not a minter
          ✓ should revert
      when called by a guardian
        when address is not a minter
          ✓ should revert
        when address is a minter
          ✓ should take minter role from the address
          ✓ should emit an event
        when there are multiple minters
          when deleting the first minter
            ✓ should update the minters list
          when deleting the last minter
            ✓ should update the minters list
          when deleting minter from the middle of the list
            ✓ should update the minters list
    addGuardian
      when called not by the governance
        ✓ should revert
      when called by the governance
        when address is not a guardian
          ✓ should add address as a guardian
          ✓ should emit an event
        when address is a guardian
          ✓ should revert
    removeGuardian
      when called not by the governance
        ✓ should revert
      when called by the governance
        when address is a guardian
          ✓ should take guardian role from the address
          ✓ should emit an event
        when address is not a guardian
          ✓ should revert
    pauseOptimisticMinting
      when called not by the governance
        ✓ should revert
      when called by the governance
        when optimistic minting is already paused
          ✓ should revert
        when optimistic minting is not paused
          ✓ should pause optimistic minting
          ✓ should emit an event
    unpauseOptimisticMinting
      when called not by the governance
        ✓ should revert
      when called by the governance
        when optimistic minting is not paused
          ✓ should revert
        when optimistic minting is paused
          ✓ should unpause optimistic minting
          ✓ should emit an event
    beginOptimisticMintingFeeUpdate
      when called not by the governance
        ✓ should revert
      when called by the governance
        ✓ should not update the optimistic minting fee
        ✓ should start the governance delay timer
        ✓ should emit an event
    finalizeOptimisticMintingFeeUpdate
      when called not by the governance
        ✓ should revert
      when the update process is not initiated
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initiated and governance delay passed
        ✓ should update the optimistic minting fee
        ✓ should emit an event
        ✓ should reset the governance delay timer
    beginOptimisticMintingDelayUpdate
      when called not by the governance
        ✓ should revert
      when called by the governance
        ✓ should not update the optimistic minting delay
        ✓ should start the governance delay timer
        ✓ should emit an event
    finalizeOptimisticMintingDelayUpdate
      when called not by the governance
        ✓ should revert
      when the update process is not initiated
        ✓ should revert
      when the governance delay has not passed
        ✓ should revert
      when the update process is initiated and governance delay passed
        ✓ should update the optimistic minting delay
        ✓ should emit an event
        ✓ should reset the governance delay timer
    calculateDepositKey
      ✓ should calculate the key as expected
      ✓ should calculate the same key as the Bridge
    receiveBalanceIncrease
      when the deposit for which optimistic minting was requested gets swept after finalization
        ✓ should repay optimistic minting debt
        ✓ should emit an event
      when multiple deposits gets swept after finalization
        when both deposits were optimistically minted
          ✓ should repay optimistic minting debt
          ✓ should mint the right amount of TBTC to depositor
          ✓ should emit an event
        when only one deposit was optimistically minted
          ✓ should repay optimistic minting debt
          ✓ should mint the right amount of TBTC
          ✓ should emit an event

  TBTCVault - Redemption
    unmintAndRedeem
      when the redeemer has no TBTC
        ✓ should revert
      when the redeemer has not enough TBTC
        ✓ should revert
      when there is a single redeemer
        ✓ should transfer balances to Bridge
        ✓ should request redemptions in Bridge
        ✓ should burn TBTC
        ✓ should emit Unminted events
      when amount is not fully convertible to satoshis
        ✓ should transfer balances to Bridge
        ✓ should request redemptions in Bridge
        ✓ should burn TBTC
        ✓ should emit Unminted events
      when there are multiple redeemers
BigNumber { value: "100000000000000000000" }
BigNumber { value: "100000000000000000000" }
        ✓ should transfer balances to Bridge
        ✓ should request redemptions in Bridge
        ✓ should burn TBTC
        ✓ should emit Unminted events
    receiveApproval
      when called via approveAndCall
        when called with non-empty extraData
          when there is a single redeemer
            ✓ should transfer balances to Bridge
            ✓ should request redemptions in Bridge
            ✓ should burn TBTC
            ✓ should emit Unminted events
          when there are multiple redeemers
            ✓ should transfer balances to Bridge
            ✓ should request redemptions in Bridge
            ✓ should burn TBTC
            ✓ should emit Unminted events

  TBTCVault
    constructor
      when called with a 0-address bank
        ✓ should revert
      when called with a 0-address TBTC token
        ✓ should revert
      when called with a 0-address bridge
        ✓ should revert
      when called with correct parameters
        ✓ should set the Bank field
        ✓ should set the TBTC token field
    recoverERC20FromToken
      when called not by the governance
        ✓ should revert
      when called with correct parameters
        ✓ should do a successful recovery
    recoverERC721FromToken
      when called not by the governance
        ✓ should revert
      when called with correct parameters
        ✓ should do a successful recovery
    recoverERC20
      when called not by the governance
        ✓ should revert
      when called with correct parameters
        ✓ should do a successful recovery
    recoverERC721
      when called not by the governance
        ✓ should revert
      when called with correct parameters
        ✓ should do a successful recovery
    mint
      when minter has not enough balance in the bank
        ✓ should revert
      when there is a single minter
        ✓ should transfer balance to the vault
        ✓ should mint TBTC
        ✓ should emit Minted event
      when amount is not fully convertible to satoshis
        ✓ should transfer balance to the vault
        ✓ should mint TBTC
        ✓ should emit Minted event
      when there are multiple minters
        ✓ should transfer balances to the vault
        ✓ should mint TBTC
        ✓ should emit Minted event
    unmint
      when the unminter has no TBTC
        ✓ should revert
      when the unminter has not enough TBTC
        ✓ should revert
      when there is a single unminter
        ✓ should transfer balance to the unminter
        ✓ should burn TBTC
        ✓ should emit Unminted events
      when amount is not fully convertible to satoshis
        ✓ should transfer balance to the unminter
        ✓ should burn TBTC
        ✓ should emit Unminted events
      when there are multiple unminters
        ✓ should transfer balances to unminters
        ✓ should burn TBTC
        ✓ should emit Unminted events
    receiveApproval
      when called not for TBTC token
        ✓ should revert
      when called directly
        ✓ should revert
      when called via approveAndCall
        when called with an empty extraData
          ✓ should transfer balance to the unminter
          ✓ should burn TBTC
          ✓ should emit Unminted event
        when amount is not fully convertible to satoshis
          ✓ should transfer balance to the unminter
          ✓ should burn TBTC
          ✓ should emit Unminted events
    receiveBalanceApproval
      when called not by the bank
        ✓ should revert
      when caller has not enough balance in the bank
        ✓ should revert
      when there is a single caller
        ✓ should transfer balance to the vault
        ✓ should mint TBTC
        ✓ should emit Minted event
      when there are multiple callers
        ✓ should transfer balances to the vault
        ✓ should mint TBTC
        ✓ should emit Minted event
    receiveBalanceIncrease
      when called not by the bank
        ✓ should revert
      when called with no depositors
        ✓ should revert
      with single depositor
        ✓ should mint TBTC
        ✓ should emit Minted event
      with multiple depositors
        ✓ should mint TBTC
        ✓ should emit Minted events
    initiateUpgrade
      when called not by the governance
        ✓ should revert
      when called by the governance
        when called with a zero-address new vault
          ✓ should revert
        when called with a non-zero-address new vault
          ✓ should not transfer TBTC token ownership
          ✓ should set the upgrade initiation time
          ✓ should set the new vault address
          ✓ should emit UpgradeInitiated event
    finalizeUpgrade
      when called not by the governance
        ✓ should revert
      when called by the governance
        when the upgrade process has not been initiated
          ✓ should revert
        when the upgrade process has been initiated
          when the governance delay has not passed
            ✓ should revert
          when the governance delay passed
            ✓ should transfer TBTC token ownership
            ✓ should transfer the entire bank balance
            ✓ should emit UpgradeFinalized event
            ✓ should reset the upgrade initiation time
            ✓ should reset the new vault address
    amountToSatoshis
      when the amount is convertible with a remainder
        ✓ should calculate correct convertible amount
        ✓ should calculate correct remainder
        ✓ should calculate correct satoshi amount
      when the amount is convertible without a remainder
        ✓ should calculate correct convertible amount
        ✓ should calculate correct remainder
        ✓ should calculate correct satoshi amount

·----------------------------------------------------------------------------------------------------------------------|---------------------------|--------------|-----------------------------·
|                                                 [90mSolc version: 0.8.17[39m                                                 ·  [90mOptimizer enabled: true[39m  ·  [90mRuns: 1000[39m  ·  [90mBlock limit: 30000000 gas[39m  │
·······················································································································|···························|··············|······························
|  [32m[1mMethods[22m[39m                                                                                                                                                                                      │
······················································|································································|·············|·············|··············|···············|··············
|  [1mContract[22m                                           ·  [1mMethod[22m                                                        ·  [32mMin[39m        ·  [32mMax[39m        ·  [32mAvg[39m         ·  [1m# calls[22m      ·  [1meur (avg)[22m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mAccountControl[39m                                     ·  authorizeReserve                                              ·     [36m124868[39m  ·     [31m141980[39m  ·      129897  ·          [90m225[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mAccountControl[39m                                     ·  batchMint                                                     ·     [36m190103[39m  ·     [31m216959[39m  ·      193106  ·            [90m9[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mAccountControl[39m                                     ·  deauthorizeReserve                                            ·      [36m49217[39m  ·     [31m137461[39m  ·       79868  ·           [90m12[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mAccountControl[39m                                     ·  grantQCManagerRole                                            ·      [36m53426[39m  ·      [31m53438[39m  ·       53437  ·           [90m11[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mAccountControl[39m                                     ·  mintTBTC                                                      ·          -  ·          -  ·      185889  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mAccountControl[39m                                     ·  pauseReserve                                                  ·      [36m35125[39m  ·      [31m37264[39m  ·       35666  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mAccountControl[39m                                     ·  pauseSystem                                                   ·          -  ·          -  ·       33487  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mAccountControl[39m                                     ·  redeem                                                        ·      [36m35971[39m  ·      [31m44963[39m  ·       43839  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mAccountControl[39m                                     ·  setGlobalMintingCap                                           ·      [36m31808[39m  ·      [31m51744[39m  ·       45099  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mAccountControl[39m                                     ·  setMintingCap                                                 ·      [36m42478[39m  ·      [31m54511[39m  ·       44207  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mAccountControl[39m                                     ·  unpauseReserve                                                ·      [36m35102[39m  ·      [31m35114[39m  ·       35111  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mAccountControl[39m                                     ·  unpauseSystem                                                 ·          -  ·          -  ·       33416  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mAccountControl[39m                                     ·  updateBacking                                                 ·      [36m39494[39m  ·      [31m56594[39m  ·       55152  ·           [90m83[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBank[39m                                               ·  approveBalance                                                ·      [36m24265[39m  ·      [31m46727[39m  ·       39241  ·           [90m21[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBank[39m                                               ·  approveBalanceAndCall                                         ·      [36m32711[39m  ·     [31m115710[39m  ·       77223  ·           [90m24[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBank[39m                                               ·  decreaseBalance                                               ·          -  ·          -  ·       28127  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBank[39m                                               ·  decreaseBalanceAllowance                                      ·          -  ·          -  ·       29228  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBank[39m                                               ·  increaseBalance                                               ·      [36m47978[39m  ·      [31m48014[39m  ·       47996  ·           [90m13[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBank[39m                                               ·  increaseBalanceAllowance                                      ·      [36m29274[39m  ·      [31m46374[39m  ·       42949  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBank[39m                                               ·  increaseBalanceAndCall                                        ·      [36m50461[39m  ·     [31m171191[39m  ·      115627  ·           [90m12[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBank[39m                                               ·  increaseBalances                                              ·          -  ·          -  ·       98805  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBank[39m                                               ·  permit                                                        ·      [36m40316[39m  ·      [31m74835[39m  ·       63166  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBank[39m                                               ·  transferBalance                                               ·      [36m28726[39m  ·      [31m51462[39m  ·       42444  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBank[39m                                               ·  transferBalanceFrom                                           ·      [36m42133[39m  ·      [31m59233[39m  ·       53281  ·            [90m9[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBank[39m                                               ·  updateBridge                                                  ·      [36m21420[39m  ·      [31m47210[39m  ·       34956  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBankStub[39m                                           ·  approveBalance                                                ·      [36m46391[39m  ·      [31m46427[39m  ·       46412  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBankStub[39m                                           ·  approveBalanceAndCall                                         ·          -  ·          -  ·      144541  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBankStub[39m                                           ·  increaseBalanceAllowance                                      ·          -  ·          -  ·       46374  ·          [90m129[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBankStub[39m                                           ·  setAuthorizedBalanceIncreaser                                 ·          -  ·          -  ·       47894  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBankStub[39m                                           ·  setBalance                                                    ·      [36m44166[39m  ·      [31m44214[39m  ·       44167  ·          [90m132[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBankStub[39m                                           ·  transferOwnership                                             ·          -  ·          -  ·       28651  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBankStub[39m                                           ·  updateBridge                                                  ·      [36m27310[39m  ·      [31m47210[39m  ·       40577  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  __ecdsaWalletCreatedCallback                                  ·      [36m88512[39m  ·      [31m88546[39m  ·       88540  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  __ecdsaWalletHeartbeatFailedCallback                          ·      [36m53700[39m  ·      [31m54045[39m  ·       53850  ·           [90m10[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  defeatFraudChallenge                                          ·      [36m67305[39m  ·      [31m84375[39m  ·       73255  ·           [90m18[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  defeatFraudChallengeWithHeartbeat                             ·          -  ·          -  ·       59314  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  notifyFraudChallengeDefeatTimeout                             ·      [36m63561[39m  ·      [31m82787[39m  ·       78355  ·           [90m27[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  notifyMovedFundsSweepTimeout                                  ·      [36m52883[39m  ·      [31m69562[39m  ·       66784  ·           [90m10[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  notifyMovingFundsBelowDust                                    ·          -  ·          -  ·       48927  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  notifyMovingFundsTimeout                                      ·          -  ·          -  ·       58874  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  notifyRedemptionTimeout                                       ·     [36m121366[39m  ·     [31m143186[39m  ·      135429  ·           [90m25[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  notifyRedemptionVeto                                          ·          -  ·          -  ·       73220  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  notifyWalletCloseable                                         ·      [36m52605[39m  ·      [31m53935[39m  ·       53106  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  notifyWalletClosingPeriodElapsed                              ·          -  ·          -  ·       45722  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  requestNewWallet                                              ·      [36m41212[39m  ·      [31m51206[39m  ·       47448  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  requestRedemption                                             ·     [36m115936[39m  ·     [31m150059[39m  ·      125307  ·          [90m134[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  resetMovingFundsTimeout                                       ·          -  ·          -  ·       45576  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  revealDeposit                                                 ·      [36m85270[39m  ·     [31m107966[39m  ·      104809  ·          [90m123[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  revealDepositWithExtraData                                    ·     [36m124218[39m  ·     [31m126815[39m  ·      125914  ·           [90m12[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  setRedemptionWatchtower                                       ·          -  ·          -  ·       54748  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  setSpvMaintainerStatus                                        ·          -  ·          -  ·       55202  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  setVaultStatus                                                ·          -  ·          -  ·       55191  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  submitDepositSweepProof                                       ·     [36m201209[39m  ·     [31m359525[39m  ·      273257  ·           [90m33[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  submitFraudChallenge                                          ·     [36m117100[39m  ·     [31m117444[39m  ·      117143  ·           [90m33[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  submitMovedFundsSweepProof                                    ·     [36m148329[39m  ·     [31m160285[39m  ·      153119  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  submitMovingFundsProof                                        ·     [36m207071[39m  ·     [31m365628[39m  ·      311932  ·            [90m9[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  submitRedemptionProof                                         ·     [36m136443[39m  ·     [31m205558[39m  ·      174697  ·           [90m19[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridge[39m                                             ·  updateTreasury                                                ·          -  ·          -  ·       37471  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginBridgeGovernanceTransfer                                 ·      [36m69655[39m  ·      [31m69667[39m  ·       69663  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginDepositDustThresholdUpdate                               ·      [36m38507[39m  ·      [31m72707[39m  ·       63800  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginDepositRevealAheadPeriodUpdate                           ·          -  ·          -  ·       72760  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginDepositTreasuryFeeDivisorUpdate                          ·      [36m52728[39m  ·      [31m72652[39m  ·       62690  ·           [90m10[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginDepositTxMaxFeeUpdate                                    ·      [36m52793[39m  ·      [31m72729[39m  ·       69398  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginFraudChallengeDefeatTimeoutUpdate                        ·      [36m52769[39m  ·      [31m72705[39m  ·       69374  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginFraudChallengeDepositAmountUpdate                        ·      [36m72704[39m  ·      [31m72764[39m  ·       72716  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginFraudNotifierRewardMultiplierUpdate                      ·      [36m72768[39m  ·      [31m72780[39m  ·       72772  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginFraudSlashingAmountUpdate                                ·      [36m72714[39m  ·      [31m72774[39m  ·       72726  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginGovernanceDelayUpdate                                    ·          -  ·          -  ·       67921  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginMovedFundsSweepTimeoutNotifierRewardMultiplierUpdate     ·          -  ·          -  ·       72658  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginMovedFundsSweepTimeoutSlashingAmountUpdate               ·      [36m72781[39m  ·      [31m72841[39m  ·       72793  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginMovedFundsSweepTimeoutUpdate                             ·      [36m52746[39m  ·      [31m72670[39m  ·       69349  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginMovedFundsSweepTxMaxTotalFeeUpdate                       ·      [36m72738[39m  ·      [31m72750[39m  ·       72740  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginMovingFundsCommitmentGasOffsetUpdate                     ·          -  ·          -  ·       72684  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginMovingFundsDustThresholdUpdate                           ·      [36m52748[39m  ·      [31m72684[39m  ·       68974  ·           [90m10[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginMovingFundsTimeoutNotifierRewardMultiplierUpdate         ·      [36m72679[39m  ·      [31m72691[39m  ·       72684  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginMovingFundsTimeoutResetDelayUpdate                       ·      [36m52813[39m  ·      [31m72737[39m  ·       69416  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginMovingFundsTimeoutSlashingAmountUpdate                   ·      [36m72781[39m  ·      [31m72841[39m  ·       72793  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginMovingFundsTimeoutUpdate                                 ·      [36m72626[39m  ·      [31m72638[39m  ·       72628  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginMovingFundsTxMaxTotalFeeUpdate                           ·      [36m52824[39m  ·      [31m72748[39m  ·       69902  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginRedemptionDustThresholdUpdate                            ·      [36m38517[39m  ·      [31m72717[39m  ·       64164  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginRedemptionTimeoutNotifierRewardMultiplierUpdate          ·      [36m72679[39m  ·      [31m72691[39m  ·       72683  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginRedemptionTimeoutSlashingAmountUpdate                    ·      [36m72760[39m  ·      [31m72820[39m  ·       72772  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginRedemptionTimeoutUpdate                                  ·      [36m52723[39m  ·      [31m72647[39m  ·       69326  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginRedemptionTreasuryFeeDivisorUpdate                       ·      [36m52811[39m  ·      [31m72735[39m  ·       69414  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginRedemptionTxMaxFeeUpdate                                 ·      [36m52881[39m  ·      [31m72817[39m  ·       67827  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginRedemptionTxMaxTotalFeeUpdate                            ·      [36m72737[39m  ·      [31m72749[39m  ·       72744  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginTreasuryUpdate                                           ·          -  ·          -  ·       72873  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginWalletClosingPeriodUpdate                                ·      [36m52812[39m  ·      [31m72736[39m  ·       69415  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginWalletClosureMinBtcBalanceUpdate                         ·      [36m72663[39m  ·      [31m72687[39m  ·       72668  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginWalletCreationMaxBtcBalanceUpdate                        ·      [36m72693[39m  ·      [31m72729[39m  ·       72709  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginWalletCreationMinBtcBalanceUpdate                        ·      [36m52858[39m  ·      [31m72806[39m  ·       69465  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginWalletCreationPeriodUpdate                               ·          -  ·          -  ·       72705  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginWalletMaxAgeUpdate                                       ·      [36m72712[39m  ·      [31m72724[39m  ·       72714  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  beginWalletMaxBtcTransferUpdate                               ·      [36m52880[39m  ·      [31m72828[39m  ·       69487  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeBridgeGovernanceTransfer                              ·          -  ·          -  ·       45660  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeDepositDustThresholdUpdate                            ·          -  ·          -  ·       55574  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeDepositRevealAheadPeriodUpdate                        ·          -  ·          -  ·       55586  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeDepositTreasuryFeeDivisorUpdate                       ·      [36m55564[39m  ·      [31m57564[39m  ·       56675  ·            [90m9[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeDepositTxMaxFeeUpdate                                 ·          -  ·          -  ·       55478  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeFraudChallengeDefeatTimeoutUpdate                     ·          -  ·          -  ·       57906  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeFraudChallengeDepositAmountUpdate                     ·          -  ·          -  ·       57853  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeFraudNotifierRewardMultiplierUpdate                   ·          -  ·          -  ·       57931  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeFraudSlashingAmountUpdate                             ·          -  ·          -  ·       57852  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeGovernanceDelayUpdate                                 ·          -  ·          -  ·       30961  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeMovedFundsSweepTimeoutNotifierRewardMultiplierUpdate  ·          -  ·          -  ·       69353  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeMovedFundsSweepTimeoutSlashingAmountUpdate            ·          -  ·          -  ·       69340  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeMovedFundsSweepTimeoutUpdate                          ·          -  ·          -  ·       69332  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeMovedFundsSweepTxMaxTotalFeeUpdate                    ·          -  ·          -  ·       69364  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeMovingFundsCommitmentGasOffsetUpdate                  ·          -  ·          -  ·       69328  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeMovingFundsDustThresholdUpdate                        ·          -  ·          -  ·       69308  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeMovingFundsTimeoutNotifierRewardMultiplierUpdate      ·          -  ·          -  ·       69418  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeMovingFundsTimeoutResetDelayUpdate                    ·          -  ·          -  ·       69308  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeMovingFundsTimeoutSlashingAmountUpdate                ·          -  ·          -  ·       69449  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeMovingFundsTimeoutUpdate                              ·          -  ·          -  ·       69360  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeMovingFundsTxMaxTotalFeeUpdate                        ·          -  ·          -  ·       69373  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeRedemptionDustThresholdUpdate                         ·          -  ·          -  ·       61948  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeRedemptionTimeoutNotifierRewardMultiplierUpdate       ·          -  ·          -  ·       61925  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeRedemptionTimeoutSlashingAmountUpdate                 ·          -  ·          -  ·       61981  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeRedemptionTimeoutUpdate                               ·          -  ·          -  ·       61920  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeRedemptionTreasuryFeeDivisorUpdate                    ·      [36m61901[39m  ·      [31m63901[39m  ·       62301  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeRedemptionTxMaxFeeUpdate                              ·          -  ·          -  ·       61928  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeRedemptionTxMaxTotalFeeUpdate                         ·          -  ·          -  ·       61951  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeTreasuryUpdate                                        ·          -  ·          -  ·       51727  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeWalletClosingPeriodUpdate                             ·          -  ·          -  ·       64463  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeWalletClosureMinBtcBalanceUpdate                      ·          -  ·          -  ·       64452  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeWalletCreationMaxBtcBalanceUpdate                     ·          -  ·          -  ·       64501  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeWalletCreationMinBtcBalanceUpdate                     ·      [36m64497[39m  ·      [31m66497[39m  ·       64897  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeWalletCreationPeriodUpdate                            ·          -  ·          -  ·       64456  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeWalletMaxAgeUpdate                                    ·          -  ·          -  ·       64400  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  finalizeWalletMaxBtcTransferUpdate                            ·          -  ·          -  ·       64447  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  setRedemptionWatchtower                                       ·      [36m62254[39m  ·      [31m62266[39m  ·       62263  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  setVaultStatus                                                ·      [36m40915[39m  ·      [31m62827[39m  ·       58212  ·           [90m19[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeGovernance[39m                                   ·  transferOwnership                                             ·          -  ·          -  ·       28708  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  processPendingMovedFundsSweepRequest                          ·      [36m36393[39m  ·      [31m41193[39m  ·       39585  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  setActiveWallet                                               ·          -  ·          -  ·       34231  ·           [90m14[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  setDepositDustThreshold                                       ·          -  ·          -  ·       33942  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  setDepositRevealAheadPeriod                                   ·      [36m33982[39m  ·      [31m34018[39m  ·       33994  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  setDepositTxMaxFee                                            ·      [36m33943[39m  ·      [31m33955[39m  ·       33953  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  setMovedFundsSweepTxMaxTotalFee                               ·          -  ·          -  ·       33961  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  setPendingMovedFundsSweepRequest                              ·      [36m80722[39m  ·      [31m97846[39m  ·       83173  ·           [90m35[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  setProcessedMovedFundsSweepRequests                           ·      [36m29195[39m  ·      [31m52797[39m  ·       44930  ·           [90m12[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  setRedemptionDustThreshold                                    ·          -  ·          -  ·       33964  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  setRedemptionTreasuryFeeDivisor                               ·          -  ·          -  ·       33931  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  setSpentMainUtxos                                             ·      [36m29218[39m  ·      [31m52814[39m  ·       31184  ·           [90m12[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  setSweptDeposits                                              ·      [36m29240[39m  ·      [31m52839[39m  ·       35140  ·           [90m12[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  setWallet                                                     ·      [36m39589[39m  ·     [31m107499[39m  ·       75678  ·          [90m305[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  setWalletMainUtxo                                             ·      [36m35729[39m  ·      [31m52853[39m  ·       52674  ·          [90m125[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mBridgeStub[39m                                         ·  timeoutPendingMovedFundsSweepRequest                          ·      [36m36360[39m  ·      [31m41160[39m  ·       39552  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mChaosnet[39m                                           ·  transferChaosnetOwnerRole                                     ·          -  ·          -  ·       28502  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mcontracts/test/MockTBTCVault.sol:MockTBTCVault[39m     ·  setTbtcToken                                                  ·      [36m26790[39m  ·      [31m26802[39m  ·       26801  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mcontracts/test/TestBTCDepositor.sol:MockTBTCVault[39m  ·  createOptimisticMintingRequest                                ·          -  ·          -  ·       44213  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mcontracts/test/TestBTCDepositor.sol:MockTBTCVault[39m  ·  finalizeOptimisticMintingRequest                              ·          -  ·          -  ·       27326  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mcontracts/test/TestBTCDepositor.sol:MockTBTCVault[39m  ·  setOptimisticMintingFeeDivisor                                ·          -  ·          -  ·       21680  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mDonationVault[39m                                      ·  donate                                                        ·          -  ·          -  ·       54992  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mERC20Upgradeable[39m                                   ·  approve                                                       ·      [36m31672[39m  ·      [31m53956[39m  ·       41346  ·           [90m32[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mERC20Upgradeable[39m                                   ·  transfer                                                      ·      [36m56925[39m  ·      [31m58796[39m  ·       58048  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mERC20Upgradeable[39m                                   ·  transferFrom                                                  ·          -  ·          -  ·       61805  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mERC20WithPermit[39m                                    ·  burn                                                          ·      [36m34540[39m  ·      [31m43175[39m  ·       35718  ·           [90m22[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mERC20WithPermit[39m                                    ·  burnFrom                                                      ·      [36m46230[39m  ·      [31m51030[39m  ·       47830  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mERC20WithPermit[39m                                    ·  mint                                                          ·      [36m45806[39m  ·     [31m185812[39m  ·      102400  ·           [90m91[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mERC20WithPermit[39m                                    ·  permit                                                        ·          -  ·          -  ·       86556  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL1BTCDepositorWormhole[39m                             ·  attachL2BtcDepositor                                          ·          -  ·          -  ·       53639  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL1BTCDepositorWormhole[39m                             ·  updateL2FinalizeDepositGasLimit                               ·      [36m34220[39m  ·      [31m37020[39m  ·       35153  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL1BTCRedeemerWormhole[39m                              ·  requestRedemption                                             ·     [36m118562[39m  ·     [31m143091[39m  ·      135389  ·           [90m36[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL1BTCRedeemerWormhole[39m                              ·  updateGasOffsetParameters                                     ·      [36m32228[39m  ·      [31m37064[39m  ·       36097  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL2BTCDepositorWormhole[39m                             ·  attachL1BtcDepositor                                          ·          -  ·          -  ·       53588  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL2BTCDepositorWormhole[39m                             ·  initializeDeposit                                             ·          -  ·          -  ·       42394  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL2BTCDepositorWormhole[39m                             ·  receiveWormholeMessages                                       ·          -  ·          -  ·       41527  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL2BTCRedeemerWormhole[39m                              ·  requestRedemption                                             ·     [36m142839[39m  ·     [31m143374[39m  ·      143047  ·           [90m19[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL2BTCRedeemerWormhole[39m                              ·  updateMinimumRedemptionAmount                                 ·      [36m34279[39m  ·      [31m37079[39m  ·       34765  ·           [90m23[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL2TBTC[39m                                             ·  addMinter                                                     ·      [36m82057[39m  ·      [31m99157[39m  ·       95595  ·           [90m24[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL2TBTC[39m                                             ·  pause                                                         ·          -  ·          -  ·       54170  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL2TBTC[39m                                             ·  removeMinter                                                  ·      [36m39490[39m  ·      [31m47430[39m  ·       43618  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL2TBTC[39m                                             ·  unpause                                                       ·          -  ·          -  ·       32242  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL2WormholeGateway[39m                                  ·  receiveTbtc                                                   ·     [36m105946[39m  ·     [31m199676[39m  ·      168722  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL2WormholeGateway[39m                                  ·  sendTbtc                                                      ·     [36m115163[39m  ·     [31m119975[39m  ·      117316  ·           [90m22[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL2WormholeGateway[39m                                  ·  updateGatewayAddress                                          ·      [36m32793[39m  ·      [31m54933[39m  ·       49398  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mL2WormholeGateway[39m                                  ·  updateMintingLimit                                            ·      [36m37041[39m  ·      [31m37053[39m  ·       37049  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mLightRelay[39m                                         ·  authorize                                                     ·          -  ·          -  ·       47199  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mLightRelay[39m                                         ·  setAuthorizationStatus                                        ·          -  ·          -  ·       27842  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mLightRelayMaintainerProxy[39m                          ·  transferOwnership                                             ·          -  ·          -  ·       28601  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mLightRelayStub[39m                                     ·  authorize                                                     ·      [36m27331[39m  ·      [31m47231[39m  ·       35291  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mLightRelayStub[39m                                     ·  deauthorize                                                   ·      [36m25282[39m  ·      [31m27282[39m  ·       26615  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mLightRelayStub[39m                                     ·  genesis                                                       ·      [36m98751[39m  ·      [31m98775[39m  ·       98753  ·           [90m25[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mLightRelayStub[39m                                     ·  retarget                                                      ·     [36m115819[39m  ·     [31m456427[39m  ·      159666  ·           [90m18[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mLightRelayStub[39m                                     ·  setAuthorizationStatus                                        ·      [36m25030[39m  ·      [31m27842[39m  ·       26282  ·            [90m9[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mLightRelayStub[39m                                     ·  setProofLength                                                ·          -  ·          -  ·       28223  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mLightRelayStub[39m                                     ·  transferOwnership                                             ·          -  ·          -  ·       28559  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mLightRelayStub[39m                                     ·  validateChainGasReport                                        ·      [36m53269[39m  ·      [31m98183[39m  ·       75726  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMaintainerProxy[39m                                    ·  transferOwnership                                             ·          -  ·          -  ·       28613  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMisfundRecovery[39m                                    ·  recoverERC20                                                  ·          -  ·          -  ·       61143  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMisfundRecovery[39m                                    ·  recoverERC721                                                 ·          -  ·          -  ·       71987  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockAccountControl[39m                                 ·  setTotalMintedForTesting                                      ·          -  ·          -  ·       43574  ·           [90m35[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockBank[39m                                           ·  setBalance                                                    ·      [36m24292[39m  ·      [31m44192[39m  ·       39217  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockBank[39m                                           ·  setBatchSupported                                             ·      [36m21719[39m  ·      [31m23731[39m  ·       22725  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockBank[39m                                           ·  setFailOnSecondCall                                           ·          -  ·          -  ·       45852  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockBridge[39m                                         ·  revealDepositWithExtraData                                    ·          -  ·          -  ·      101877  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockBridge[39m                                         ·  setDepositDustThreshold                                       ·          -  ·          -  ·       23774  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockBridge[39m                                         ·  setDepositTxMaxFee                                            ·      [36m26574[39m  ·      [31m26610[39m  ·       26586  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockBridge[39m                                         ·  sweepDeposit                                                  ·          -  ·          -  ·       29367  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockBridgeForStarkNet[39m                              ·  revealDepositWithExtraData                                    ·          -  ·          -  ·      164081  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockBridgeForStarkNet[39m                              ·  sweepDeposit                                                  ·      [36m29131[39m  ·      [31m29143[39m  ·       29142  ·           [90m33[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockL1BTCRedeemerWormhole[39m                          ·  setMockRedemptionAmountTBTC                                   ·      [36m28965[39m  ·      [31m33849[39m  ·       32622  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockReimbursementPool[39m                              ·  authorize                                                     ·          -  ·          -  ·       43909  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockReserve[39m                                        ·  batchMint                                                     ·     [36m225798[39m  ·    [31m1198203[39m  ·      693438  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockReserve[39m                                        ·  increaseBacking                                               ·      [36m56449[39m  ·      [31m56461[39m  ·       56451  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockReserve[39m                                        ·  mintTokens                                                    ·     [36m117597[39m  ·     [31m237309[39m  ·      145523  ·           [90m49[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockReserve[39m                                        ·  redeemTokens                                                  ·      [36m55794[39m  ·      [31m60606[39m  ·       60005  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockReserve[39m                                        ·  setBacking                                                    ·      [36m46602[39m  ·     [31m107574[39m  ·       79947  ·          [90m117[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockReserve[39m                                        ·  simulateFailure                                               ·      [36m23925[39m  ·      [31m45837[39m  ·       34881  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockStarkGateBridge[39m                                ·  deposit                                                       ·          -  ·          -  ·      261513  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockStarkGateBridge[39m                                ·  depositWithMessage                                            ·          -  ·          -  ·      220051  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockStarkGateBridge[39m                                ·  resetMock                                                     ·      [36m33903[39m  ·      [31m36778[39m  ·       36299  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockStarkGateBridge[39m                                ·  setDepositWithMessageReturn                                   ·          -  ·          -  ·       21693  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockTBTCBridge[39m                                     ·  setRedemptionTxMaxFeeInternal                                 ·          -  ·          -  ·       26597  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockTBTCBridgeWithSweep[39m                            ·  resetMock                                                     ·          -  ·          -  ·       25670  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockTBTCBridgeWithSweep[39m                            ·  setNextDepositKey                                             ·          -  ·          -  ·       26833  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockTBTCBridgeWithSweep[39m                            ·  sweepDeposit                                                  ·          -  ·          -  ·       29194  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockTBTCToken[39m                                      ·  approve                                                       ·          -  ·          -  ·       48458  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mMockTBTCToken[39m                                      ·  mint                                                          ·      [36m34126[39m  ·      [31m51238[39m  ·       43281  ·           [90m43[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCData[39m                                             ·  finalizeWalletDeRegistration                                  ·      [36m43145[39m  ·      [31m53601[39m  ·       46522  ·           [90m16[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCData[39m                                             ·  grantQCManagerRole                                            ·          -  ·          -  ·       50586  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCData[39m                                             ·  grantRole                                                     ·      [36m29216[39m  ·      [31m51453[39m  ·       51231  ·          [90m100[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCData[39m                                             ·  registerQC                                                    ·     [36m100543[39m  ·     [31m117631[39m  ·      117427  ·           [90m84[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCData[39m                                             ·  registerWallet                                                ·     [36m147596[39m  ·     [31m210208[39m  ·      159498  ·           [90m80[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCData[39m                                             ·  requestWalletDeRegistration                                   ·      [36m40968[39m  ·      [31m40980[39m  ·       40969  ·           [90m25[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCData[39m                                             ·  revokeQCManagerRole                                           ·      [36m28089[39m  ·      [31m28600[39m  ·       28405  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCData[39m                                             ·  setQCStatus                                                   ·      [36m32052[39m  ·      [31m52216[39m  ·       48034  ·            [90m9[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCData[39m                                             ·  updateMaxMintingCapacity                                      ·      [36m31469[39m  ·      [31m34269[39m  ·       32269  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCData[39m                                             ·  updateQCMintedAmount                                          ·      [36m29320[39m  ·      [31m51604[39m  ·       48199  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  batchSyncBackingFromOracle                                    ·      [36m72693[39m  ·     [31m106612[39m  ·       95306  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  checkQCEscalations                                            ·      [36m38368[39m  ·      [31m38371[39m  ·       38369  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  emergencyClearPause                                           ·          -  ·          -  ·       57709  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  grantInitialCredit                                            ·      [36m53154[39m  ·      [31m53166[39m  ·       53154  ·           [90m45[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  grantRole                                                     ·      [36m29497[39m  ·      [31m51734[39m  ·       51045  ·          [90m595[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  increaseMintingCapacity                                       ·          -  ·          -  ·       64138  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  registerQC                                                    ·     [36m175197[39m  ·     [31m301057[39m  ·      236697  ·           [90m17[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  requestStatusChange                                           ·          -  ·          -  ·       89298  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  requestWalletOwnershipVerification                            ·          -  ·          -  ·       33447  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  resumeSelfPause                                               ·      [36m50143[39m  ·      [31m50175[39m  ·       50151  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  selfPause                                                     ·     [36m197871[39m  ·     [31m197893[39m  ·      197881  ·           [90m18[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  setAccountControl                                             ·      [36m48617[39m  ·      [31m48629[39m  ·       48629  ·           [90m94[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  setQCRedeemer                                                 ·      [36m47147[39m  ·      [31m47159[39m  ·       47158  ·           [90m82[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  setQCStatus                                                   ·      [36m42317[39m  ·      [31m87723[39m  ·       79045  ·           [90m15[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCManager[39m                                          ·  syncBackingFromOracle                                         ·      [36m53383[39m  ·      [31m70483[39m  ·       65353  ·           [90m10[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCMinter[39m                                           ·  grantRole                                                     ·          -  ·          -  ·       51387  ·           [90m99[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCMinter[39m                                           ·  manualMint                                                    ·          -  ·          -  ·       35180  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCMinter[39m                                           ·  requestQCMint                                                 ·          -  ·          -  ·      216421  ·           [90m11[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCMinter[39m                                           ·  requestQCMintHybrid                                           ·     [36m215935[39m  ·     [31m227520[39m  ·      221758  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCMinter[39m                                           ·  setAccountControl                                             ·          -  ·          -  ·       47433  ·           [90m48[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCMinter[39m                                           ·  setAutoMintEnabled                                            ·      [36m27228[39m  ·      [31m47140[39m  ·       32655  ·           [90m12[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCRedeemer[39m                                         ·  flagDefaultedRedemption                                       ·          -  ·          -  ·       92285  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCRedeemer[39m                                         ·  grantRole                                                     ·          -  ·          -  ·       51431  ·           [90m35[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCRedeemer[39m                                         ·  initiateRedemption                                            ·     [36m456225[39m  ·     [31m507525[39m  ·      502990  ·           [90m56[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mQCRedeemer[39m                                         ·  setAccountControl                                             ·          -  ·          -  ·       48423  ·           [90m35[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mRedemptionWatchtower[39m                               ·  addGuardian                                                   ·      [36m54846[39m  ·      [31m99113[39m  ·       85469  ·           [90m16[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mRedemptionWatchtower[39m                               ·  disableWatchtower                                             ·          -  ·          -  ·       35535  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mRedemptionWatchtower[39m                               ·  enableWatchtower                                              ·          -  ·          -  ·      116327  ·           [90m15[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mRedemptionWatchtower[39m                               ·  raiseObjection                                                ·      [36m84053[39m  ·     [31m166461[39m  ·      125309  ·           [90m60[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mRedemptionWatchtower[39m                               ·  removeGuardian                                                ·      [36m32932[39m  ·      [31m47386[39m  ·       40536  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mRedemptionWatchtower[39m                               ·  unban                                                         ·          -  ·          -  ·       32930  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mRedemptionWatchtower[39m                               ·  updateWatchtowerParameters                                    ·      [36m45393[39m  ·      [31m65365[39m  ·       50350  ·           [90m23[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mRedemptionWatchtower[39m                               ·  withdrawVetoedFunds                                           ·          -  ·          -  ·       69080  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mReimbursementPool[39m                                  ·  authorize                                                     ·          -  ·          -  ·       47212  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mReimbursementPool[39m                                  ·  transferOwnership                                             ·      [36m28597[39m  ·      [31m35954[39m  ·       33122  ·          [90m106[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mReserveOracle[39m                                      ·  attestBalance                                                 ·      [36m88649[39m  ·     [31m186575[39m  ·      142129  ·          [90m106[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mReserveOracle[39m                                      ·  batchAttestBalances                                           ·      [36m24749[39m  ·     [31m285441[39m  ·      176724  ·           [90m11[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mReserveOracle[39m                                      ·  emergencySetReserve                                           ·      [36m34184[39m  ·      [31m77900[39m  ·       67526  ·           [90m12[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mReserveOracle[39m                                      ·  grantRole                                                     ·      [36m29150[39m  ·      [31m51387[39m  ·       51223  ·          [90m275[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mReserveOracle[39m                                      ·  resetConsensus                                                ·      [36m26865[39m  ·      [31m40777[39m  ·       34586  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mReserveOracle[39m                                      ·  setAttestationTimeout                                         ·          -  ·          -  ·       30245  ·           [90m13[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mReserveOracle[39m                                      ·  setConsensusThreshold                                         ·      [36m27404[39m  ·      [31m30204[39m  ·       29854  ·           [90m16[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mReserveOracle[39m                                      ·  setMaxStaleness                                               ·          -  ·          -  ·       30251  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mStarkNetBitcoinDepositor[39m                           ·  finalizeDeposit                                               ·     [36m107859[39m  ·     [31m335609[39m  ·      194570  ·           [90m63[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mStarkNetBitcoinDepositor[39m                           ·  initializeDeposit                                             ·      [36m74082[39m  ·     [31m209718[39m  ·      146687  ·          [90m103[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mStarkNetBitcoinDepositor[39m                           ·  setReimburseTxMaxFee                                          ·      [36m37176[39m  ·      [31m37188[39m  ·       37182  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mStarkNetBitcoinDepositor[39m                           ·  updateGasOffsetParameters                                     ·      [36m36896[39m  ·      [31m42496[39m  ·       38763  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mStarkNetBitcoinDepositor[39m                           ·  updateReimbursementAuthorization                              ·      [36m33280[39m  ·      [31m55236[39m  ·       49244  ·           [90m28[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  emergencyPauseQC                                              ·      [36m73812[39m  ·      [31m73824[39m  ·       73823  ·           [90m53[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  emergencyUnpauseQC                                            ·      [36m30960[39m  ·      [31m30970[39m  ·       30969  ·           [90m22[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  grantRole                                                     ·      [36m29173[39m  ·      [31m51410[39m  ·       51079  ·          [90m206[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  pauseMinting                                                  ·          -  ·          -  ·       69583  ·           [90m22[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  pauseRedemption                                               ·      [36m52474[39m  ·      [31m69574[39m  ·       62734  ·           [90m10[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  pauseWalletRegistration                                       ·      [36m52474[39m  ·      [31m69574[39m  ·       67674  ·            [90m9[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  revokeRole                                                    ·          -  ·          -  ·       29477  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  setEmergencyCouncil                                           ·      [36m58430[39m  ·      [31m72914[39m  ·       71597  ·           [90m11[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  setEmergencyPauseDuration                                     ·      [36m30879[39m  ·      [31m30903[39m  ·       30895  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  setMaxMintAmount                                              ·      [36m30209[39m  ·      [31m33309[39m  ·       31071  ·           [90m23[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  setMinCollateralRatio                                         ·      [36m28064[39m  ·      [31m30864[39m  ·       29931  ·            [90m9[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  setMinMintAmount                                              ·      [36m30207[39m  ·      [31m33031[39m  ·       32809  ·           [90m27[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  setRedemptionTimeout                                          ·      [36m30835[39m  ·      [31m30859[39m  ·       30849  ·           [90m23[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  setStaleThreshold                                             ·      [36m30857[39m  ·      [31m30881[39m  ·       30871  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  setWalletRegistrationDelay                                    ·          -  ·          -  ·       47967  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  unpauseMinting                                                ·      [36m28281[39m  ·      [31m30551[39m  ·       29038  ·           [90m12[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  unpauseRedemption                                             ·          -  ·          -  ·       28291  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemState[39m                                        ·  unpauseWalletRegistration                                     ·          -  ·          -  ·       28290  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemTestRelay[39m                                    ·  setCurrentEpochDifficultyFromHeaders                          ·      [36m52072[39m  ·      [31m52094[39m  ·       52083  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mSystemTestRelay[39m                                    ·  setPrevEpochDifficultyFromHeaders                             ·          -  ·          -  ·       52138  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTC[39m                                               ·  approve                                                       ·      [36m46281[39m  ·      [31m46305[39m  ·       46293  ·           [90m21[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTC[39m                                               ·  approveAndCall                                                ·      [36m67397[39m  ·     [31m175146[39m  ·      142032  ·           [90m16[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTC[39m                                               ·  mint                                                          ·      [36m36369[39m  ·      [31m70581[39m  ·       58356  ·           [90m14[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTC[39m                                               ·  transferOwnership                                             ·      [36m28598[39m  ·      [31m28610[39m  ·       28609  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  addGuardian                                                   ·          -  ·          -  ·       47548  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  addMinter                                                     ·      [36m74723[39m  ·      [31m91823[39m  ·       87073  ·           [90m18[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  beginOptimisticMintingDelayUpdate                             ·          -  ·          -  ·       69070  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  beginOptimisticMintingFeeUpdate                               ·      [36m49122[39m  ·      [31m69034[39m  ·       62397  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  cancelOptimisticMint                                          ·          -  ·          -  ·       26726  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  finalizeOptimisticMint                                        ·      [36m73664[39m  ·     [31m160203[39m  ·      142642  ·           [90m14[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  finalizeOptimisticMintingDelayUpdate                          ·          -  ·          -  ·       30307  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  finalizeOptimisticMintingFeeUpdate                            ·      [36m30240[39m  ·      [31m30272[39m  ·       30256  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  finalizeUpgrade                                               ·          -  ·          -  ·       64394  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  initiateUpgrade                                               ·          -  ·          -  ·       69661  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  mint                                                          ·      [36m64994[39m  ·     [31m116352[39m  ·       93863  ·           [90m35[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  pauseOptimisticMinting                                        ·          -  ·          -  ·       27384  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  receiveBalanceIncrease                                        ·      [36m51985[39m  ·      [31m52709[39m  ·       52347  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  recoverERC20                                                  ·      [36m53858[39m  ·      [31m58670[39m  ·       55466  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  recoverERC20FromToken                                         ·          -  ·          -  ·       64284  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  recoverERC721                                                 ·          -  ·          -  ·       64776  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  recoverERC721FromToken                                        ·          -  ·          -  ·       70898  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  removeGuardian                                                ·          -  ·          -  ·       25639  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  removeMinter                                                  ·      [36m33641[39m  ·      [31m40119[39m  ·       36494  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  requestOptimisticMint                                         ·      [36m55775[39m  ·      [31m70655[39m  ·       67865  ·           [90m16[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  transferOwnership                                             ·      [36m28657[39m  ·      [31m28669[39m  ·       28661  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  unmint                                                        ·      [36m57228[39m  ·      [31m74316[39m  ·       61819  ·           [90m20[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  unmintAndRedeem                                               ·     [36m155696[39m  ·     [31m172765[39m  ·      163176  ·           [90m14[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTBTCVault[39m                                          ·  unpauseOptimisticMinting                                      ·          -  ·          -  ·       27412  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestBitcoinTx[39m                                      ·  validateProof                                                 ·          -  ·          -  ·       95071  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestBTCDepositor[39m                                   ·  finalizeDepositPublic                                         ·      [36m51402[39m  ·      [31m51419[39m  ·       51408  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestBTCDepositor[39m                                   ·  initialize                                                    ·          -  ·          -  ·       66933  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestBTCDepositor[39m                                   ·  initializeDepositPublic                                       ·          -  ·          -  ·      118040  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestBTCRedeemer[39m                                    ·  initialize                                                    ·          -  ·          -  ·      113397  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestBTCRedeemer[39m                                    ·  requestRedemptionPublic                                       ·          -  ·          -  ·      118381  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestBTCRedeemer[39m                                    ·  rescueTbtc                                                    ·      [36m38303[39m  ·      [31m43975[39m  ·       40484  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestEmergencyIntegration[39m                           ·  testFunction                                                  ·          -  ·          -  ·       30278  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestERC20[39m                                          ·  approve                                                       ·      [36m29199[39m  ·      [31m46323[39m  ·       36982  ·           [90m11[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestERC20[39m                                          ·  approveAndCall                                                ·      [36m83412[39m  ·     [31m116564[39m  ·      104152  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestERC20[39m                                          ·  mint                                                          ·      [36m53453[39m  ·      [31m70565[39m  ·       67925  ·           [90m13[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestERC20[39m                                          ·  transfer                                                      ·      [36m46898[39m  ·      [31m46910[39m  ·       46904  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestERC20[39m                                          ·  transferOwnership                                             ·          -  ·          -  ·       28616  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestERC721[39m                                         ·  mint                                                          ·      [36m68794[39m  ·      [31m68806[39m  ·       68798  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestERC721[39m                                         ·  transferFrom                                                  ·      [36m55278[39m  ·      [31m55290[39m  ·       55284  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestRelay[39m                                          ·  setCurrentEpochDifficulty                                     ·          -  ·          -  ·       43572  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestRelay[39m                                          ·  setCurrentEpochDifficultyFromHeaders                          ·          -  ·          -  ·       52094  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestRelay[39m                                          ·  setPrevEpochDifficulty                                        ·          -  ·          -  ·       43595  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestRelay[39m                                          ·  setPrevEpochDifficultyFromHeaders                             ·          -  ·          -  ·       52138  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTestRelay[39m                                          ·  setValidateHeaderChainResult                                  ·      [36m43541[39m  ·      [31m43889[39m  ·       43715  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTimelock[39m                                           ·  execute                                                       ·          -  ·          -  ·       57752  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTimelock[39m                                           ·  schedule                                                      ·          -  ·          -  ·       55502  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTimelockController[39m                                 ·  grantRole                                                     ·          -  ·          -  ·       51574  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mTimelockController[39m                                 ·  renounceRole                                                  ·          -  ·          -  ·       25137  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachine[39m                                     ·  finalizeUnmintFeeUpdate                                       ·      [36m29596[39m  ·      [31m47295[39m  ·       34032  ·            [90m5[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachine[39m                                     ·  finalizeVendingMachineUpgrade                                 ·          -  ·          -  ·       65598  ·            [90m3[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachine[39m                                     ·  initiateUnmintFeeUpdate                                       ·      [36m49241[39m  ·      [31m69213[39m  ·       62538  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachine[39m                                     ·  initiateVendingMachineUpgrade                                 ·          -  ·          -  ·       69603  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachine[39m                                     ·  mint                                                          ·     [36m111562[39m  ·     [31m116362[39m  ·      112933  ·            [90m7[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachine[39m                                     ·  transferOwnership                                             ·          -  ·          -  ·       28653  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachine[39m                                     ·  transferUnmintFeeUpdateInitiatorRole                          ·          -  ·          -  ·       27029  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachine[39m                                     ·  transferVendingMachineUpgradeInitiatorRole                    ·          -  ·          -  ·       27049  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachine[39m                                     ·  unmint                                                        ·      [36m74471[39m  ·     [31m113012[39m  ·       98358  ·           [90m10[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachine[39m                                     ·  withdrawFees                                                  ·          -  ·          -  ·       58189  ·            [90m1[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachineV2[39m                                   ·  depositTbtcV2                                                 ·      [36m37881[39m  ·      [31m42551[39m  ·       40216  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachineV2[39m                                   ·  exchange                                                      ·      [36m89975[39m  ·      [31m99575[39m  ·       94775  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachineV2[39m                                   ·  transferOwnership                                             ·          -  ·          -  ·       28598  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachineV2[39m                                   ·  withdrawFunds                                                 ·      [36m55432[39m  ·      [31m60226[39m  ·       57829  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachineV3[39m                                   ·  depositTbtcV2                                                 ·      [36m54851[39m  ·      [31m59651[39m  ·       57251  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachineV3[39m                                   ·  exchange                                                      ·      [36m89982[39m  ·      [31m99582[39m  ·       94782  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachineV3[39m                                   ·  recoverFunds                                                  ·      [36m55501[39m  ·      [31m55513[39m  ·       55507  ·            [90m4[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachineV3[39m                                   ·  transferOwnership                                             ·          -  ·          -  ·       28598  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mVendingMachineV3[39m                                   ·  withdrawTbtcV2                                                ·          -  ·          -  ·       65818  ·            [90m2[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mWalletRegistry[39m                                     ·  transferGovernance                                            ·      [36m28462[39m  ·      [31m35813[39m  ·       33340  ·            [90m6[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mWalletRegistry[39m                                     ·  updateReimbursementPool                                       ·      [36m32365[39m  ·      [31m54527[39m  ·       50092  ·           [90m23[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mWatchdogEnforcer[39m                                   ·  enforceObjectiveViolation                                     ·      [36m36214[39m  ·      [31m66872[39m  ·       48988  ·           [90m12[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mWormholeBridgeStub[39m                                 ·  setReceiverAddress                                            ·      [36m23626[39m  ·      [31m43766[39m  ·       34836  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [90mWormholeBridgeStub[39m                                 ·  setTransferAmount                                             ·      [36m23649[39m  ·      [31m43633[39m  ·       34320  ·            [90m8[39m  ·          [32m[90m-[32m[39m  │
······················································|································································|·············|·············|··············|···············|··············
|  [32m[1mDeployments[22m[39m                                                                                                         ·                                          ·  [1m% of limit[22m   ·             │
·······················································································································|·············|·············|··············|···············|··············
|  AccountControl                                                                                                      ·          -  ·          -  ·     3433126  ·       [90m11.4 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  Bank                                                                                                                ·          -  ·          -  ·     1532837  ·        [90m5.1 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  BankStub                                                                                                            ·          -  ·          -  ·     1544287  ·        [90m5.1 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  BitcoinAddressUtils                                                                                                 ·          -  ·          -  ·       72217  ·        [90m0.2 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  BridgeGovernance                                                                                                    ·          -  ·          -  ·     4386700  ·       [90m14.6 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  BridgeGovernanceParameters                                                                                          ·          -  ·          -  ·     3215309  ·       [90m10.7 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  BridgeStub                                                                                                          ·          -  ·          -  ·     5714421  ·         [90m19 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  BTCDepositorWormhole                                                                                                ·          -  ·          -  ·     2450270  ·        [90m8.2 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  contracts/bridge/Wallets.sol:Wallets                                                                                ·          -  ·          -  ·      911756  ·          [90m3 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  contracts/test/MockTBTCVault.sol:MockTBTCVault                                                                      ·          -  ·          -  ·      290553  ·          [90m1 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  contracts/test/TestBTCDepositor.sol:MockTBTCVault                                                                   ·          -  ·          -  ·      299847  ·          [90m1 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  Deposit                                                                                                             ·          -  ·          -  ·     1534595  ·        [90m5.1 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  DepositSweep                                                                                                        ·          -  ·          -  ·     2651851  ·        [90m8.8 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  DonationVault                                                                                                       ·          -  ·          -  ·      586461  ·          [90m2 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  ERC1967Proxy                                                                                                        ·     [36m451115[39m  ·     [31m451127[39m  ·      451124  ·        [90m1.5 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  Fraud                                                                                                               ·          -  ·          -  ·     1942153  ·        [90m6.5 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  HeartbeatStub                                                                                                       ·          -  ·          -  ·      146863  ·        [90m0.5 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  L1BTCDepositorWormhole                                                                                              ·          -  ·          -  ·     2800857  ·        [90m9.3 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  L2BTCDepositorWormhole                                                                                              ·          -  ·          -  ·      991583  ·        [90m3.3 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  L2BTCRedeemerWormhole                                                                                               ·          -  ·          -  ·     1301219  ·        [90m4.3 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  L2TBTC                                                                                                              ·          -  ·          -  ·     2472985  ·        [90m8.2 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  L2WormholeGateway                                                                                                   ·          -  ·          -  ·     1897059  ·        [90m6.3 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  LightRelay                                                                                                          ·          -  ·          -  ·     1872803  ·        [90m6.2 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  LightRelayMaintainerProxy                                                                                           ·          -  ·          -  ·      716005  ·        [90m2.4 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  LightRelayStub                                                                                                      ·          -  ·          -  ·     1933358  ·        [90m6.4 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MaintainerProxy                                                                                                     ·          -  ·          -  ·     2269060  ·        [90m7.6 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MessageSigning                                                                                                      ·          -  ·          -  ·      503772  ·        [90m1.7 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MockAccountControl                                                                                                  ·          -  ·          -  ·      266860  ·        [90m0.9 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MockBank                                                                                                            ·          -  ·          -  ·      718473  ·        [90m2.4 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MockBridge                                                                                                          ·          -  ·          -  ·     1302010  ·        [90m4.3 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MockBridgeForStarkNet                                                                                               ·          -  ·          -  ·      865981  ·        [90m2.9 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MockL1BTCRedeemerWormhole                                                                                           ·          -  ·          -  ·     1572656  ·        [90m5.2 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MockReimbursementPool                                                                                               ·          -  ·          -  ·      150901  ·        [90m0.5 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MockReserve                                                                                                         ·          -  ·          -  ·     1152699  ·        [90m3.8 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MockStarkGateBridge                                                                                                 ·          -  ·          -  ·      827732  ·        [90m2.8 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MockTBTCBridge                                                                                                      ·          -  ·          -  ·      836171  ·        [90m2.8 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MockTBTCBridgeWithSweep                                                                                             ·          -  ·          -  ·      764936  ·        [90m2.5 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MockTBTCToken                                                                                                       ·          -  ·          -  ·      847832  ·        [90m2.8 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MockWalletRegistry                                                                                                  ·          -  ·          -  ·      127537  ·        [90m0.4 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  MovingFunds                                                                                                         ·          -  ·          -  ·     4461137  ·       [90m14.9 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  QCData                                                                                                              ·          -  ·          -  ·     2083099  ·        [90m6.9 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  QCManager                                                                                                           ·    [36m5451983[39m  ·    [31m5452043[39m  ·     5452039  ·       [90m18.2 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  QCManagerLib                                                                                                        ·          -  ·          -  ·      810178  ·        [90m2.7 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  QCMinter                                                                                                            ·    [36m2845106[39m  ·    [31m2845130[39m  ·     2845125  ·        [90m9.5 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  QCRedeemer                                                                                                          ·    [36m4469257[39m  ·    [31m4469281[39m  ·     4469278  ·       [90m14.9 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  QCRedeemerSPV                                                                                                       ·    [36m1209098[39m  ·    [31m1209134[39m  ·     1209133  ·          [90m4 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  QCRedeemerSPVTest                                                                                                   ·    [36m1861747[39m  ·    [31m1861783[39m  ·     1861765  ·        [90m6.2 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  Redemption                                                                                                          ·          -  ·          -  ·     3864267  ·       [90m12.9 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  RedemptionWatchtower                                                                                                ·          -  ·          -  ·     2149681  ·        [90m7.2 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  ReserveOracle                                                                                                       ·          -  ·          -  ·     2068693  ·        [90m6.9 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  SharedSPVCore                                                                                                       ·          -  ·          -  ·     2252733  ·        [90m7.5 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  SPVState                                                                                                            ·          -  ·          -  ·       72217  ·        [90m0.2 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  StarkNetBitcoinDepositor                                                                                            ·          -  ·          -  ·     2356310  ·        [90m7.9 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  SystemState                                                                                                         ·          -  ·          -  ·     2108385  ·          [90m7 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  SystemTestRelay                                                                                                     ·          -  ·          -  ·      311577  ·          [90m1 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  TBTC                                                                                                                ·          -  ·          -  ·     1590261  ·        [90m5.3 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  TBTCVault                                                                                                           ·    [36m3125575[39m  ·    [31m3125587[39m  ·     3125586  ·       [90m10.4 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  TestBitcoinAddressUtils                                                                                             ·          -  ·          -  ·     1076024  ·        [90m3.6 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  TestBitcoinTx                                                                                                       ·          -  ·          -  ·     1271675  ·        [90m4.2 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  TestBTCDepositor                                                                                                    ·          -  ·          -  ·     1030054  ·        [90m3.4 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  TestBTCRedeemer                                                                                                     ·          -  ·          -  ·     1157895  ·        [90m3.9 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  TestBTCUtilsHelper                                                                                                  ·          -  ·          -  ·      397962  ·        [90m1.3 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  TestEmergencyIntegration                                                                                            ·          -  ·          -  ·      431975  ·        [90m1.4 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  TestERC20                                                                                                           ·          -  ·          -  ·     1334985  ·        [90m4.4 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  TestERC721                                                                                                          ·          -  ·          -  ·     1314166  ·        [90m4.4 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  TestRelay                                                                                                           ·          -  ·          -  ·      325006  ·        [90m1.1 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  Timelock                                                                                                            ·          -  ·          -  ·     2335013  ·        [90m7.8 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  VendingMachine                                                                                                      ·    [36m1363281[39m  ·    [31m1383253[39m  ·     1376596  ·        [90m4.6 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  VendingMachineV2                                                                                                    ·          -  ·          -  ·      757154  ·        [90m2.5 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  VendingMachineV3                                                                                                    ·          -  ·          -  ·      932147  ·        [90m3.1 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  WalletProposalValidator                                                                                             ·          -  ·          -  ·     3352511  ·       [90m11.2 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  WalletRegistry                                                                                                      ·          -  ·          -  ·     5302554  ·       [90m17.7 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  WatchdogEnforcer                                                                                                    ·    [36m1745096[39m  ·    [31m1745120[39m  ·     1745117  ·        [90m5.8 %[39m  ·          [32m[90m-[32m[39m  │
·······················································································································|·············|·············|··············|···············|··············
|  WormholeBridgeStub                                                                                                  ·     [36m654109[39m  ·     [31m654121[39m  ·      654115  ·        [90m2.2 %[39m  ·          [32m[90m-[32m[39m  │
·----------------------------------------------------------------------------------------------------------------------|-------------|-------------|--------------|---------------|-------------·

  2816 passing (40m)
  31 pending
  38 failing

  1) AccountControl Integration Tests
       "before each" hook for "should route minting through AccountControl when enabled":
     HardhatError: HH700: Artifact for contract "MockQCManager" not found. 
      at Artifacts._handleWrongArtifactForContractName (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/hardhat/src/internal/artifacts.ts:702:11)
      at Artifacts._getArtifactPathFromFiles (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/hardhat/src/internal/artifacts.ts:827:19)
      at Artifacts._getArtifactPath (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/hardhat/src/internal/artifacts.ts:507:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async Artifacts.readArtifact (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/hardhat/src/internal/artifacts.ts:71:26)
      at async getContractFactory (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:91:22)
      at async Context.<anonymous> (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/test/account-control/AccountControlIntegration.test.ts:81:34)

  2) QCManager
       Wallet Registration
         when called by registrar with verified wallet ownership
           should register wallet successfully:
     Error: VM Exception while processing transaction: reverted with custom error 'MessageSignatureVerificationFailed()'
      at QCManager.registerWallet (contracts/account-control/QCManager.sol:675)
      at HardhatNode._gatherTraces (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1690:30)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async HardhatNode._mineBlockWithPendingTxs (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1815:23)
      at async HardhatNode.mineBlock (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:504:16)

  3) QCManager
       5-State Machine
         setQCStatus
           when called by arbiter
             should change status to Revoked:
     Error: VM Exception while processing transaction: reverted with custom error 'ReserveNotFound("0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC")'
      at AccountControl.onlyOwnerOrEmergencyCouncil (contracts/account-control/AccountControl.sol:138)
      at AccountControl.deauthorizeReserve (contracts/account-control/AccountControl.sol:210)
      at <UnrecognizedContract>.<unknown> (0xa7240bcff60eef40f31b8ed5d921bad6db13b199)
      at QCManager._syncAccountControlWithStatus (contracts/account-control/QCManager.sol:606)
      at QCManager._executeStatusChange (contracts/account-control/QCManager.sol:565)
      at QCManager.setQCStatus (contracts/account-control/QCManager.sol:497)
      at HardhatNode._gatherTraces (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1690:30)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async HardhatNode._mineBlockWithPendingTxs (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1815:23)
      at async HardhatNode.mineBlock (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:504:16)

  4) QCManager
       Available Minting Capacity
         should return zero for stale reserves:
     AssertionError: Expected "70000000000000000000" to be equal 0
      at Context.<anonymous> (test/account-control/QCManager.test.ts:918:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)

  5) QCManager
       5-State Model Transitions
         Active State Transitions
           should allow Active → Revoked:
     AssertionError: Expected transaction NOT to be reverted
  

  6) QCManager
       5-State Model Transitions
         MintingPaused State Transitions
           should allow MintingPaused → Revoked:
     AssertionError: Expected transaction NOT to be reverted
  

  7) QCManager
       5-State Model Transitions
         Paused State Transitions
           should allow Paused → Revoked:
     AssertionError: Expected transaction NOT to be reverted
  

  8) QCManager
       5-State Model Transitions
         UnderReview State Transitions
           should allow UnderReview → Revoked:
     AssertionError: Expected transaction NOT to be reverted
  

  9) QCManager - AccountControl Integration
       "before each" hook for "should handle AccountControl authorization gracefully when address is zero":
     InvalidArgumentsError: Errors encountered in param 0: Invalid value undefined supplied to : QUANTITY
      at validateParams (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/hardhat/src/internal/core/jsonrpc/types/input/validation.ts:64:13)
      at EvmModule._revertParams (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/hardhat/src/internal/hardhat-network/provider/modules/evm.ts:147:26)
      at EvmModule.processRequest (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/hardhat/src/internal/hardhat-network/provider/modules/evm.ts:55:43)
      at HardhatNetworkProvider._send (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/hardhat/src/internal/hardhat-network/provider/provider.ts:207:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async HardhatNetworkProvider.request (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/hardhat/src/internal/hardhat-network/provider/provider.ts:118:18)
      at async EthersProviderWrapper.send (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20)
      at async restoreSnapshot (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@keep-network/hardhat-helpers/src/snapshot.ts:28:3)
      at async Context.<anonymous> (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/test/account-control/QCManagerAccountControlIntegration.test.ts:89:5)

  10) QCManagerLib
       "before each" hook for "should revert with InvalidQCAddress when registering zero address":
     Error: VM Exception while processing transaction: reverted with reason string 'Initializable: contract is already initialized'
      at AccountControl.onlyOwnerOrEmergencyCouncil (contracts/account-control/AccountControl.sol:138)
      at AccountControl.initialize (contracts/account-control/AccountControl.sol:161)
      at HardhatNode._gatherTraces (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1690:30)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async HardhatNode._mineBlockWithPendingTxs (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1815:23)
      at async HardhatNode.mineBlock (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:504:16)

  11) QCRedeemer
       recordRedemptionFulfillment
         when redemption is not pending
           "before each" hook for "should revert":
     Error: VM Exception while processing transaction: reverted with custom error 'SPVErr(5)'
      at SharedSPVCore.validateCoreSPVProof (contracts/account-control/libraries/SharedSPVCore.sol:51)
      at QCRedeemerSPV.validateSPVProof (contracts/account-control/libraries/QCRedeemerSPV.sol:37)
      at QCRedeemer._verifySPVProof (contracts/account-control/QCRedeemer.sol:769)
      at QCRedeemer._recordFulfillment (contracts/account-control/QCRedeemer.sol:679)
      at QCRedeemer.recordRedemptionFulfillment (contracts/account-control/QCRedeemer.sol:379)
      at HardhatNode._gatherTraces (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1690:30)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async HardhatNode._mineBlockWithPendingTxs (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1815:23)
      at async HardhatNode.mineBlock (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:504:16)

  12) QCRedeemer
       recordRedemptionFulfillment
         when called by arbiter with valid redemption
           "before each" hook for "should update redemption status to Fulfilled":
     Error: VM Exception while processing transaction: reverted with custom error 'SPVErr(5)'
      at SharedSPVCore.validateCoreSPVProof (contracts/account-control/libraries/SharedSPVCore.sol:51)
      at QCRedeemerSPV.validateSPVProof (contracts/account-control/libraries/QCRedeemerSPV.sol:37)
      at QCRedeemer._verifySPVProof (contracts/account-control/QCRedeemer.sol:769)
      at QCRedeemer._recordFulfillment (contracts/account-control/QCRedeemer.sol:679)
      at QCRedeemer.recordRedemptionFulfillment (contracts/account-control/QCRedeemer.sol:379)
      at HardhatNode._gatherTraces (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1690:30)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async HardhatNode._mineBlockWithPendingTxs (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1815:23)
      at async HardhatNode.mineBlock (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:504:16)

  13) QCRedeemer
       flagDefaultedRedemption
         when redemption is not pending
           "before each" hook for "should revert":
     Error: VM Exception while processing transaction: reverted with custom error 'SPVErr(5)'
      at SharedSPVCore.validateCoreSPVProof (contracts/account-control/libraries/SharedSPVCore.sol:51)
      at QCRedeemerSPV.validateSPVProof (contracts/account-control/libraries/QCRedeemerSPV.sol:37)
      at QCRedeemer._verifySPVProof (contracts/account-control/QCRedeemer.sol:769)
      at QCRedeemer._recordFulfillment (contracts/account-control/QCRedeemer.sol:679)
      at QCRedeemer.recordRedemptionFulfillment (contracts/account-control/QCRedeemer.sol:379)
      at HardhatNode._gatherTraces (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1690:30)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async HardhatNode._mineBlockWithPendingTxs (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1815:23)
      at async HardhatNode.mineBlock (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:504:16)

  14) QCRedeemer
       isRedemptionTimedOut
         when redemption is not pending
           "before each" hook for "should return false":
     Error: VM Exception while processing transaction: reverted with custom error 'SPVErr(5)'
      at SharedSPVCore.validateCoreSPVProof (contracts/account-control/libraries/SharedSPVCore.sol:51)
      at QCRedeemerSPV.validateSPVProof (contracts/account-control/libraries/QCRedeemerSPV.sol:37)
      at QCRedeemer._verifySPVProof (contracts/account-control/QCRedeemer.sol:769)
      at QCRedeemer._recordFulfillment (contracts/account-control/QCRedeemer.sol:679)
      at QCRedeemer.recordRedemptionFulfillment (contracts/account-control/QCRedeemer.sol:379)
      at HardhatNode._gatherTraces (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1690:30)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async HardhatNode._mineBlockWithPendingTxs (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1815:23)
      at async HardhatNode.mineBlock (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:504:16)

  15) QCRedeemer
       Access Control
         DISPUTE_ARBITER_ROLE functions
           should allow arbiter to record fulfillment:
     AssertionError: Expected transaction NOT to be reverted
  

  16) QCRedeemerSPV Library
       validateRedemptionTransaction
         should return false for future locktime (anti-replay protection):

      AssertionError: expected true to be false
      + expected - actual

      -true
      +false
      
      at Context.<anonymous> (test/account-control/QCRedeemerSPV.test.ts:433:27)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)

  17) QCRedeemer - Wallet Obligations Edge Cases
       "before each" hook for "should reject QC wallet with invalid Bitcoin address format":
     NomicLabsHardhatPluginError: The contract QCRedeemer is missing links for the following libraries:
* contracts/account-control/libraries/QCRedeemerSPV.sol:QCRedeemerSPV

Learn more about linking contracts at https://hardhat.org/plugins/nomiclabs-hardhat-ethers.html#library-linking

      at collectLibrariesAndLink (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:258:11)
      at getContractFactoryFromArtifact (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:149:32)
      at getContractFactory (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:93:12)
      at async Context.<anonymous> (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/test/account-control/QCRedeemerWalletObligations.edge.test.ts:54:31)

  18) QCRedeemer - Wallet Obligations
       "before each" hook for "should track redemptions by wallet":
     NomicLabsHardhatPluginError: The contract QCRedeemer is missing links for the following libraries:
* contracts/account-control/libraries/QCRedeemerSPV.sol:QCRedeemerSPV

Learn more about linking contracts at https://hardhat.org/plugins/nomiclabs-hardhat-ethers.html#library-linking

      at collectLibrariesAndLink (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:258:11)
      at getContractFactoryFromArtifact (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:149:32)
      at getContractFactory (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:93:12)
      at async Context.<anonymous> (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/test/account-control/QCRedeemerWalletObligations.test.ts:53:31)

  19) ReserveOracle
       Configuration
         setConsensusThreshold
           should revert if not admin:
     AssertionError: Expected transaction to be reverted with AccessControl: account 0x70997970c51812dc3a010c7d01b50e0d17dc79c8 is missing role 0x0000000000000000000000000000000000000000000000000000000000000000, but other exception was thrown: Error: VM Exception while processing transaction: reverted with reason string 'AccessControl: account 0x70997970c51812dc3a010c7d01b50e0d17dc79c8 is missing role 0xa7017e78e7dd014f69d34dd801ba6409d1430be1bf2b9e5b769a9cb645aeac33'
  

  20) ReserveOracle
       Edge cases
         should handle attester updating their attestation:
     Error: VM Exception while processing transaction: reverted with custom error 'AttesterAlreadySubmitted()'
      at ReserveOracle._attestBalanceInternal (contracts/account-control/ReserveOracle.sol:316)
      at ReserveOracle.attestBalance (contracts/account-control/ReserveOracle.sol:166)
      at HardhatNode._gatherTraces (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1690:30)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async HardhatNode._mineBlockWithPendingTxs (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1815:23)
      at async HardhatNode.mineBlock (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:504:16)

  21) ReserveOracle
       Attester registration
         should not re-register existing attesters:
     Error: VM Exception while processing transaction: reverted with custom error 'AttesterAlreadySubmitted()'
      at ReserveOracle._attestBalanceInternal (contracts/account-control/ReserveOracle.sol:316)
      at ReserveOracle.attestBalance (contracts/account-control/ReserveOracle.sol:166)
      at HardhatNode._gatherTraces (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1690:30)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async HardhatNode._mineBlockWithPendingTxs (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1815:23)
      at async HardhatNode.mineBlock (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:504:16)

  22) Bridge - Moving funds
       submitMovingFundsCommitment
         when source wallet is in the MovingFunds state
           when source wallet has no pending redemptions
             when source wallet has no pending moved funds sweep requests
               when the commitment was not submitted yet
                 when the caller is a member of the source wallet
                   when passed wallet main UTXO is valid
                     when wallet balance is greater than zero
                       when the expected target wallets count is greater than zero
                         when the submitted target wallets count is same as the expected
                           when all target wallets are different than the source wallet
                             when all target wallets follow the expected order
                               when all target wallets are in the Live state
                                 "before all" hook for "should store the target wallets commitment for the given wallet":
     Error: Transaction reverted: function selector was not recognized and there's no fallback nor receive function
      at MockReimbursementPool.<unrecognized-selector> (contracts/test/MockReimbursementPool.sol:5)
      at HardhatNode.estimateGas (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:810:27)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async EthModule._estimateGasAction (node_modules/hardhat/src/internal/hardhat-network/provider/modules/eth.ts:429:7)
      at async HardhatNetworkProvider.request (node_modules/hardhat/src/internal/hardhat-network/provider/provider.ts:118:18)

  23) Deployment
       WalletRegistry
         should set walletOwner:
     TypeError: walletRegistry.walletOwner is not a function
      at Context.<anonymous> (test/bridge/Deployment.test.ts:183:30)
      at processImmediate (node:internal/timers:476:21)

  24) Deployment
       ReimbursementPool
         should set ReimbursementPool owner:
     TypeError: reimbursementPool.owner is not a function
      at Context.<anonymous> (test/bridge/Deployment.test.ts:251:33)
      at processImmediate (node:internal/timers:476:21)

  25) EcdsaLib
       "before all" hook in "EcdsaLib":
     HardhatError: HH700: Artifact for contract "EcdsaLibStub" not found. 
      at Artifacts._handleWrongArtifactForContractName (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/hardhat/src/internal/artifacts.ts:702:11)
      at Artifacts._getArtifactPathFromFiles (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/hardhat/src/internal/artifacts.ts:827:19)
      at Artifacts._getArtifactPath (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/hardhat/src/internal/artifacts.ts:507:21)
      at async Artifacts.readArtifact (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/hardhat/src/internal/artifacts.ts:71:26)
      at async getContractFactory (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:91:22)
      at async Context.<anonymous> (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/test/bridge/EcdsaLib.test.ts:9:22)

  26) StarkNetBitcoinDepositor - deposit() Implementation
       _transferTbtc Implementation
         should call deposit() instead of depositWithMessage():
     Error: VM Exception while processing transaction: reverted with reason string 'ERC20: transfer amount exceeds balance'
      at MockTBTCToken.approve (contracts/test/MockTBTCToken.sol:27)
      at MockTBTCToken.transferFrom (@openzeppelin/contracts/token/ERC20/ERC20.sol:165)
      at MockStarkGateBridge.deposit (contracts/test/MockStarkGateBridge.sol:62)
      at StarkNetBitcoinDepositor._transferTbtc (contracts/cross-chain/starknet/StarkNetBitcoinDepositor.sol:142)
      at StarkNetBitcoinDepositor.finalizeDeposit (contracts/cross-chain/AbstractL1BTCDepositor.sol:410)
      at ERC1967Proxy._delegate (@openzeppelin/contracts/proxy/Proxy.sol:31)
      at ERC1967Proxy._fallback (@openzeppelin/contracts/proxy/Proxy.sol:60)
      at HardhatNode._gatherTraces (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1690:30)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async HardhatNode._mineBlockWithPendingTxs (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:1815:23)
      at async HardhatNode.mineBlock (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:504:16)

  27) StarkNetBitcoinDepositor - deposit() Implementation
       Gas Optimization Verification
         should reduce gas usage by ~2000:
     AssertionError: Expected "335609" to be less than 300000
      at Context.<anonymous> (test/cross-chain/StarkNetBitcoinDepositor.DepositFunction.test.ts:226:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)

  28) v1 System Deployment Tests
       v1 Contract Factory Tests
         should be able to get contract factories for v1 contracts:
     NomicLabsHardhatPluginError: The contract QCRedeemer is missing links for the following libraries:
* contracts/account-control/libraries/QCRedeemerSPV.sol:QCRedeemerSPV

Learn more about linking contracts at https://hardhat.org/plugins/nomiclabs-hardhat-ethers.html#library-linking

      at collectLibrariesAndLink (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:258:11)
      at getContractFactoryFromArtifact (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:149:32)
      at getContractFactory (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:93:12)
      at async Context.<anonymous> (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/test/integration/DeploymentVariations.test.ts:90:27)

  29) Message Signing Integration Flows
       "before all" hook in "Message Signing Integration Flows":
     Error: too many arguments:  in Contract constructor (count=1, expectedCount=0, code=UNEXPECTED_ARGUMENT, version=contracts/5.5.0)
      at Logger.makeError (node_modules/@ethersproject/logger/src.ts/index.ts:225:28)
      at Logger.throwError (node_modules/@ethersproject/logger/src.ts/index.ts:237:20)
      at Logger.checkArgumentCount (node_modules/@ethersproject/logger/src.ts/index.ts:303:18)
      at ContractFactory.getDeployTransaction (node_modules/@ethersproject/contracts/src.ts/index.ts:1206:16)
      at ContractFactory.<anonymous> (node_modules/@ethersproject/contracts/src.ts/index.ts:1234:53)
      at step (node_modules/@ethersproject/contracts/lib/index.js:48:23)
      at Object.next (node_modules/@ethersproject/contracts/lib/index.js:29:53)
      at fulfilled (node_modules/@ethersproject/contracts/lib/index.js:20:58)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  30) SPV Library Integration
       "before all" hook in "SPV Library Integration":
     Error: too many arguments:  in Contract constructor (count=1, expectedCount=0, code=UNEXPECTED_ARGUMENT, version=contracts/5.5.0)
      at Logger.makeError (node_modules/@ethersproject/logger/src.ts/index.ts:225:28)
      at Logger.throwError (node_modules/@ethersproject/logger/src.ts/index.ts:237:20)
      at Logger.checkArgumentCount (node_modules/@ethersproject/logger/src.ts/index.ts:303:18)
      at ContractFactory.getDeployTransaction (node_modules/@ethersproject/contracts/src.ts/index.ts:1206:16)
      at ContractFactory.<anonymous> (node_modules/@ethersproject/contracts/src.ts/index.ts:1234:53)
      at step (node_modules/@ethersproject/contracts/lib/index.js:48:23)
      at Object.next (node_modules/@ethersproject/contracts/lib/index.js:29:53)
      at fulfilled (node_modules/@ethersproject/contracts/lib/index.js:20:58)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  31) MaintainerProxy
       "before all" hook in "MaintainerProxy":
     Error: Transaction reverted: function selector was not recognized and there's no fallback nor receive function
      at MockReimbursementPool.<unrecognized-selector> (contracts/test/MockReimbursementPool.sol:5)
      at HardhatNode.estimateGas (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:810:27)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async EthModule._estimateGasAction (node_modules/hardhat/src/internal/hardhat-network/provider/modules/eth.ts:429:7)
      at async HardhatNetworkProvider.request (node_modules/hardhat/src/internal/hardhat-network/provider/provider.ts:118:18)

  32) LightRelayMaintainerProxy
       "before all" hook in "LightRelayMaintainerProxy":
     Error: Transaction reverted: function selector was not recognized and there's no fallback nor receive function
      at MockReimbursementPool.<unrecognized-selector> (contracts/test/MockReimbursementPool.sol:5)
      at HardhatNode.estimateGas (node_modules/hardhat/src/internal/hardhat-network/provider/node.ts:810:27)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async EthModule._estimateGasAction (node_modules/hardhat/src/internal/hardhat-network/provider/modules/eth.ts:429:7)
      at async HardhatNetworkProvider.request (node_modules/hardhat/src/internal/hardhat-network/provider/provider.ts:118:18)

  33) SPV Security Tests
       "before all" hook in "SPV Security Tests":
     NomicLabsHardhatPluginError: The contract QCManager is missing links for the following libraries:
* contracts/account-control/QCManagerLib.sol:QCManagerLib

Learn more about linking contracts at https://hardhat.org/plugins/nomiclabs-hardhat-ethers.html#library-linking

      at collectLibrariesAndLink (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:258:11)
      at getContractFactoryFromArtifact (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:149:32)
      at getContractFactory (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@nomiclabs/hardhat-ethers/src/internal/helpers.ts:93:12)
      at async Context.<anonymous> (/home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/test/security/SPVSecurityTests.test.ts:82:23)

  34) SystemState Security Tests
       Pause Mechanism Security
         Pause State Management
           should track pause timestamps:
     AssertionError: Expected "0" to be equal 1758606688
      at Context.<anonymous> (test/security/SystemStateSecurityTest.test.ts:126:71)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)

  35) SystemState Security Tests
       Pause Mechanism Security
         Emergency Pause Duration
           should track pause duration for monitoring:
     TypeError: hardhat_1.helpers.mine is not a function
      at Context.<anonymous> (test/security/SystemStateSecurityTest.test.ts:165:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)

  36) SystemState Security Tests
       Emergency Council
         should only allow PARAMETER_ADMIN to set emergency council:
     AssertionError: Expected transaction to be reverted with AccessControl: account 0x15d34aaf54267db7d7c367839aaf71a00a2c6a65 is missing role 0xe3723f41c074e25ac45636a7cd631386f2e15f8583ade05d0b710b41251f5c7b, but other exception was thrown: Error: VM Exception while processing transaction: reverted with reason string 'AccessControl: account 0x15d34aaf54267db7d7c367839aaf71a00a2c6a65 is missing role 0x0000000000000000000000000000000000000000000000000000000000000000'
  

  37) SystemState Security Tests
       Emergency Council
         should emit event when setting emergency council:

      AssertionError: expected '0x70997970C51812dc3A010C7d01b50e0d17dc79C8' to equal '0x90F79bf6EB2c4f870365E785982E1f101E93b906'
      + expected - actual

      -0x70997970C51812dc3A010C7d01b50e0d17dc79C8
      +0x90F79bf6EB2c4f870365E785982E1f101E93b906
      
      at assertArgsArraysEqual (node_modules/@ethereum-waffle/chai/dist/cjs/matchers/emit.js:58:54)
      at tryAssertArgsArraysEqual (node_modules/@ethereum-waffle/chai/dist/cjs/matchers/emit.js:65:20)
      at /home/piotr/Documents/projects/tLabs/tbtc-v2-ac-v2/solidity/node_modules/@ethereum-waffle/chai/dist/cjs/matchers/emit.js:77:13
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)
      at async Context.<anonymous> (test/security/SystemStateSecurityTest.test.ts:296:7)

  38) SystemState Security Tests
       Initialization Security
         should initialize with secure defaults:

      AssertionError: Expected "1000000000000000000000" to be equal 21000000000000000000000000
      + expected - actual

       {
      -  "_hex": "0x115eec47f6cf7e35000000"
      +  "_hex": "0x3635c9adc5dea00000"
         "_isBigNumber": true
       }
      
      at Context.<anonymous> (test/security/SystemStateSecurityTest.test.ts:394:57)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at runNextTicks (node:internal/process/task_queues:64:3)
      at listOnTimeout (node:internal/timers:538:9)
      at processTimers (node:internal/timers:512:7)



error Command failed with exit code 38.
info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
